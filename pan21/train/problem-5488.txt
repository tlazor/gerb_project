first step for me would be to compare the two different situations you describe above in tcpdump output:
In case A) that should clearly be the hardware address of your rsyslog server, which the other server in the same network has most likely learned via a preceding ARP request.
The one piece of information I would check first is the ethernet hardware destination address on the ethernet frames carrying these packets. 
In case B) I'm not exactly sure what to expect. My guess would be that it is the hardware address of the default router in your generating network, where your generating server 10.10.25.120 has probably realized from the IP address of your rsyslog destination server that that guy is not on his local network, i.e. routing is required. Then somewhere on the way to your default router inside 10.10.25.x there is your TAP which acts like a wormhole :-) by duplicating that ethernet frame over into the 10.10.35.x network. On your rsyslog server you can see that frame with TCPdump in case your network card is in promiscuous mode (because the frame still carries the ethernet hardware destination address of the default router in 10.10.25.x) but the  UDP socket listening on port 514 for your rsyslog software may not get forwarded the packet from inside that frame by the rsyslog server's kernel networking code because the hardware destination address of that frame does not match any hardware address of the rsyslog NIC.
In other words, the fact that you can see traffic "on the wire" with tcpdump running at your destination showing the correct destination IP address may not guarantee that this packet is really delivered to the higher layers inside your destination machine.