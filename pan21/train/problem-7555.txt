You could try to use set statistics io on and then use an index hint to see if the I/O cost is actually smaller when using the index or not. If the difference is big, you could look into statistics, if those are out of date.
Also, if your SQL is actually using variables and not the exact values, this might also be caused by parameter sniffing (=previous value used to create the plan had a lot of rows in the table).
For using the index, because you're doing select *, then SQL Server must first read each of the rows from the index that match the value you have in the where clause. Based on this, it will get the clustered index values for each of the row, and then it has to seek each of them separately from the clustered index (=key lookup). Since you said that the values are not unique, SQL Server uses statistics to estimate how many times it has to do this key lookup.
Most likely the cost estimate for scanning the non-clustered index + key lookups exceeds the cost estimate for clustered index scan, and that's why the index is ignored.