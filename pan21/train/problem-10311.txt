I find that scheduling PowerShell scripts in my Windows environment is the most straightforward, time-saving, and inexpensive route to take.
If you do go with puppet, let me know how it goes.  I've done some research and couldn't justify the setup/testing time.
CFEngine/Puppet - These can do a lot of what you want, its a steep learning curve if you aren't comfortable scripting.
I find that I can do a ton with PowerShell.  Monitoring, not so much (not that you couldn't with some simple Test-Connection and Test-Path type scripts) - but a lot of the other suggestions have good options for that.  I might also suggest icinga.
For deploying software you can use http://wpkg.org, it is open source software. Once you get the hang of it it is very nice. You can of course also do it with group policies and scripts in your Active Directory. No gui though (not a problem for me, but it could be a problem in your environment.
if you already have 'normal' Windows server licenses (like the standard Windows server editions) then you are entitled to use Active Directory. You can administer a fleet of Windows servers with that using group policies and scripts. No extra expense.
As to monitoring, well, I really enjoy using http://www.opsview.com/community, which is open core. You still can buy support if you need it, but the main features are in the community edition. It is nagios done right. It does not work in Windows, though. You can monitor Windows servers with it, obviously. It runs perfectly fine as a virtual machine.
If you want to use something 'unixy', it is possible to run cfeninge under cygwin. You would need to get the sources and compile it first, but it is possible. Of course, cfengine itself has a learning curve of it own, but if your time costs nothing, then maybe it is an option ;-) . If your time does cost money, you can get the commercial native port for windows.
PowerShell in my environment does backups (using the Microsoft Sync Framework SDK, 7zip SDK & AWS SDK), clears log folders on remote servers, dumps IIS logs into a database, does Admin Password rotation for security audit purposes, is used to stop and restart services & perform service account credential rotation.