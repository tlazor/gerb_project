Without a setup (bonding) from the access provider side, you cannot increase speed this way. It can increase volume (if doing two things at once, or running a network with multiple users through a router which has two uplinks, dividing user traffic between them) but a single connection is limited to going over a single link at the speed of that link - if there's only one connection, the other link will sit idle. The common method for doing so is to use a dedicated (PC-based) router machine which supports two uplinks - it must be possible to pull this off on a non-router machine, but it would be a headache compared to using an easily configured router (given that you are contemplating having the ready cash to throw at an extra internet connection.)
Note that the use of multiple connections does not automatically double the speed (or take the sum of all connections). Only apps that can take advantage of multiple connections may be faster, others' connection would be controlled and divide between physical network interface by the load balance and may not be increase much
Connectify dispatch is probably the 'easiest' way to do this on a windows system - it takes care of most of the details automatically, and speeds up some downloads. If nothing else, it lets you use multiple connections as once. There's currently an ad-supported free version if you just want to test this out. 
If cost is a matter then you can use software load balancing instead. In windows the easiest way is using Connectify Dispatch like Journeyman Geek said previously. Another way is using a Linux virtual machine that's specifically set up for load balance and point windows to it as a proxy, VPN server or something like that. Windows 7 and below can use multiple internet connections with a manual metric settings and some configurations but windows 8 can automatically use multiple connections without user concerns
What you're looking as is essentially load balancing over multiple internet connections - apparently on linux, its supported through adaptive load balancing, but the setup seems seriously involved and may need a custom kernel. If this is 'local' connection bonding may work as well, but requires control, and work on both sides of the network connection