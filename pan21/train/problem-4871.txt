Also, your comment above multiply() could become a documentation comment.  A doc comment is used to supply information to IntelliSense tools and can also be exported to other files if needed.  These comments look like:
This do not tell me what the variables are and what they contain.  Most of your naming is OK, although it is best to avoid names like row1, &c.
In Java, it is customary to declare your variables on first use, rather than on top of the method. This makes your code shorter, and more self contained. 
Finally, some variables have misleading names. I would expect column2 to be the second column, not the number of columns in the second matrix. 
In particular, it is easier to extract methods because the logical sections of your big method are more self-contained. It also makes it easy to spot unused variables such as br and bw.
Also, avoid assigning default values to local variables (as in br = null). The compiler will emit an error if you use a variable you have not assigned, so it is impossible to run into trouble by using unassigned variables. If you assign a default value, you forgo this safety net.
You should close files and streams even if an exception occurs. The try-with-resources statement makes this easy.
Your formatting (in particular the indentation) is inconsistent, making it hard to see the structure of the code at a glance. You really should be using a code formatter (in eclipse, press Ctrl+Shift+F or configure a save action to format the code whenever you save the file).
You should keep each level at the same indentation so you can see at a glance what level has what scope.
What happens when the input is formatted incorrectly?  Does your program handle this use case?  While this program may not need to have intensive error handling, many programs do, so this is a point worth mentioning.  If the user left out one of the numbers in one of the arrays, it appears your program would throw an exception when you are filling your 2D arrays:
Your main method is rather big. If I have to locate some particular piece of code in there, I have to skim nearly a 100 lines of code. By making shorter methods with clear names, you can make the structure of your code more evident, and permit fast drill-down to any part of the code. 
Have you ever seen the abbreviation SRP?  It stands for Single Responsibility Principle, and states that every unit should do only one thing.  For example, a method should only do one thing, a class should only do one thing, and so on.  Your main() method should start the program and only start the program.  Reading the data, working with the data, outputting the data, and so on should all have their own methods that are responsible for, and only responsible for, that.  Your multiply() method is good as it is only responsible for multiplying the two matrices.