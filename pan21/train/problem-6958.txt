My rationale is this thing I experience, as a senior developer, called "code fatigue".  Simply stated, it's which "this" is "this"?  I do much more c#, where (a) in-scope properties of the current class don't have to be prefixed with "this" and (b) best practice is one class per file -- which can be done in JS, but has to be planned out because of dependency issues.  
So, my train of thought is that one of your devs is tasked to do a quick fix on something buggy.  Let's   He (she) is directed to look at a single function somewhere in a monster Javascript file.  Let's say it's a junior developer, to add to the foray.  And those "this" references are everywhere.  It's INSTANTLY confusing to trace back up to the origin of "this", most especially if the code isn't formatted for viewing.  But if you abstract the scope-level "this" into a neat, uniquely NAMED variable, it's a cleaner point of reference and takes the guesswork out.
and replace "this" with "instance" later in the class.  You can use a variable name of your choosing, of course, but please bear with me. 