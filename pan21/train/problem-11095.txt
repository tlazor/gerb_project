I recommend that you grab whatever graphics software you want that supports spline editing, make copies of a 'default' spline & edit them in different ways. You'll probably hit upon a couple of things that looks reasonable much faster than if you were going directly to your code. After you have a few promising recipes, try them out. Maybe try a few 'bad' ideas as well - sometimes things look different when animated. Either you'll happen upon some hidden gems, or you'll refine your sense of what's not going to work out.
Let's experiment with those parameters a bit. Here's what happens when we push the angle to about 135 degrees. Note that the shape gets a bit more of a pronounced S curve:
The spline above goes from one corner to the opposite, passes through a somewhat central middle node. Note that the control handles that node are less than 45 degrees off from the angle between the end points, are symmetric in length & have lengths that fall within the bounding box of the end points. 
Finally, let's break the symmetry. In this final example, the lower handle barely escapes the bounding box, but the upper handle is about twice the length of the lower one. Of the four, this one probably has the most personality.
It certainly looks like you could use splines to get similar paths. I fired up Krita & made a few to help illustrate some things that might help get you going.
Next, let's push the controls outside the bounding box. Not that the S curve becomes even more exaggerated.