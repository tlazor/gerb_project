I think it might be cool to have class assignments be limited to making Unity components that implement things related to various topics. This would implicitly force (hopefully) good modular design. It would also be cool to work on a class level game, where friends can plug-in each others components and see the differences.
First. Maybe the start of the course could be a quick introduction to Unity and animated/textured character import and static mesh import. I think it is important to get this out of the way as early as possible because it:
Third. Game state/character state/FSM. Discussion on logic flow/state transitions and good modular design with Unity's component system. Could couple this with triggers/collision boxes to work on getting characters to respond to the environment, hug and shimmy across walls, grab pick-ups, etc..., for example. Would give second exposure to collision system and related considerations.
Second. Player control (mouse clicking (rts/diablo) and game-pad (action/splinter cell)) and camera control. Some discussion about ray-casting (and corresponding collision queries), transformations, and quaternions. First exposure to ideas of collision, intersection tests, etc...
Making a "full" game could be extra credit/grade booster/separate final assignment and students can be informed of this at the start of the quarter. This way, there is extra motivation for them to start thinking about the design of their code and how best to make it work for them and their own projects.
Forth. Introduce NPCs and AI. Can complete mouse clicking player control with A* path-finding. Move to flocking behavior and behavior trees (or other interesting topics).