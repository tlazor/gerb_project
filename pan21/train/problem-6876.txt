Note that while we are looking for high availability, high performance is not really an issue for us at the moment, so being able to run read-only queries on backup database servers is not really important.
My understanding is that AlwaysOn is a shared nothing configuration. Brent Ozar kinds confirms this and extends it by saying that it doesn't require the same hardware.
Readable Secondaries: you can query the 'mirror'. See AlwaysOn: High-Availability and reads Scale-Out.
I think there's a big advantage for people who target the database mirror - maybe not applicable in your scenario, since you're just connecting internally, but worth noting. When the cluster manager controls access, you have a single IP and DNS name that always points to your primary node, whichever node that is. To take advantage of mirroring, your client has to be mirror-aware (like the SQL Native Client is, but the OLDDB SQL client is not). With AlwaysOn, you can use any client or connection method you want and it will fail over to the active node as needed - you don't get the advanced features like readable secondaries without the native client, but at least it's something.
We are currently hosting a SaaS website on two Windows 2008 R2 / SQL Server 2008 R2 Servers. Would upgrading to SQL Server 2012 / Always On give us any advantages with respects to high availability?