Public clouds generally attempt to make their regions entirely independent, to isolate failure domains.  Containing an IP in a region forces designs to not rely on the network of one region.
What I'm missing is how it selects the appropriate IP address if there are multiple IP addresses associated to a domain, for multi-region optimization support.
What I'm imagining so far is that there is a 1-1 mapping of IP address to domain name. So mywebsite.com might be mapped to the globally unique public static IP of 123.123.123.123, and then this does load balancing to distribute it to a bunch of servers.
I am looking at Google Cloud and AWS and when you select "reserve static IP address" essentially, it requires you to specify a region like us-east-1, etc. I understand that regions are different data centers, but I'm not sure what the process is for IP addresses being used with regards to domain names....
But what is lacking from that understanding is where regions come in. If I want to "support different regions", so requests get handled faster, I would imagine I would have servers running in a specific region. These servers all handle the request for the domain mywebsite.com. But what I don't understand is if there are multiple IP addresses (static IP addresses I'm guessing), all mapping to the same domain, how the thing picks which IP address to use. Wondering if it is physically based on the systems interconnected. So my request on my laptop to mywebsite.com goes to my LAN to the WAN to the closest region somehow, figuring out that "Oh I need to go to 123.123.123.123 for region east, not 123.123.123.124 which is for region west.". Then the request is handled by the local servers and such. I get that end part.
Specifically, say you have a website such as mywebsite.com. I'm wondering how this gets mapped to a static IP address of some sort, or if it even needs to be static and instead can be dynamic.