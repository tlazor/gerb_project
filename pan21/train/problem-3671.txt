As long as you're doing reasonably conventional binding, LuaBind will do everything you need. Binding classes and functions tends to be a one-line-per-function deal. If you'd like an example, here's the applicable file from the game engine I've been working on (look for module(L) for the start of the LuaBind interface, DontKillMeBro<> is a little system I rigged up to let me more precisely time object destruction for certain sensitive objects.)
If the primary quality of your scripting language is easy binding, try AngelScript. It can call registered functions directly without the need to write proxy functions, and it supports calling conventions of wide variety of compilers. The language itself is similar to c/c++, which may be a good or a bad thing, depending.
We're using OOLua for Pioneer. It gives a pile of macros that you use to bind Lua "classes" to C++ classes. Its got a fair bit of power but is pretty straightforward. I haven't used any others so I can't comment on how it compares. Here's an example.
If you want something more complex, you're probably going to need to use the actual Lua API. Luckily, the Lua API is reasonably simple.