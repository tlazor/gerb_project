The packaged version may not put things in the same places as the "make install" defaults, so there's no guarantee that the old version files would get overwritten by the newer files.  When migrating to a newer software version in a package-managed system like Ubuntu, it's best to either
Ubuntu comes with CouchDB 0.8.0-incubator. I have it running correctly. I've recently wanted to upgrade to 0.9.0, so I followed the instructions on this blog post, but I seem to be missing the final step. I downloaded the tarball, unzipped it, and called make & make install as the guide says. Every step completed successfully. When I then execute 
As avelldiroll mentioned in his comment, Ubuntu 9.10 ships with CouchDB 0.10.0. In the end  I just upgraded my release and used that pre-packaged version. For me it was the easiest option, though I imagine for others that wouldn't be the case.
I know you've already found a solution, but here's an alternative for someone else in a similar situation who can't simply install a new version of the OS.
it boots up 0.8.0 instead of 0.9.0. I must be missing some step where my freshly compiled 0.9.0 build replaces the 0.8.0 installation. I thought that's what "make install" would do, but it appears not.
Are you running the "make install" step as root?  If not, your regular user account probably can't complete the install steps.
I personally prefer to create new packages when possible.  When not possible I tweak the "make install" process to install to /usr/local and subdirectories.  (If the software uses a configure script, run ./configure --prefix=/usr/local to change the default installation location.)  This way the software won't conflict with other files installed by the system package manager.