In terms of network/traffic overhead, is it bad to talk to a single node through a broadcast address or the network somehow is smart enough to know that nobody else is listening to this broadcast address and kind of treat it as a unicast in terms of overhead?
Yes, broadcasting has overhead. The more nodes you have connected to your switch, the more overhead you have. So you should only send broadcast when you really want to reach all nodes and/or when you are trying to discover a node that has moved someplace else. Broadcast once, wait for a reply from the node from wherever it is, discover its new address and from now on unicast. Beautiful, isn't it? :)
My concern is that I will be flooding my network with packets from this broadcast address even thought I am just really talking to a single node (the master). But I can't use unicast because the failover node has to be able to pick up the master stream quickly and transparently in case it fails.
My concern is that I will be using a broadcast IP address just for a single node: the master. The failover node only binds if the master fails, in other words, almost never.
It sounds like you're trying to reinvent NIC teaming/clustering in your own way. Most active/passive clusters will share a virtual IP and MAC address and when one unit fails, the secondary takes over the shared mac address. Using a broadcast IP to communicate to a cluster is unorthodox and will almost certainly create unnecessary traffic throughout the LAN.
I am implementing failed over for a network node, so my idea is to make the master node listens on a broadcast ip address and port. If the master node fails, another failover node will start listening on this broadcast address (and port) and take over.