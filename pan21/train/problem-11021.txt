The best performance tests are application specific.  Sounds like you know your application already.  But you need to be able to assess the performance before you purchase the unit (you're only designing the one server)?  Ask your vendor(s) if they have a configuration with a database server that they can give you some sort of benchmarks on.
Depending on the active set you could go with a end user based system (at least AMD goes up to 16gb RCC on a micro atx board - just bought one, plugged in an Adaptec raid controller and a SAS cage for 8 x 2.5" discs) or need a professional system capable of handling 64+gb RAM. Really depends. TFS, BUild server and lab management + "throw away vm's for develoeprs" may really tax the system.
I think you ask the wrong question. First, the question is what people do. You want enough RAM to keep everything on disc that works, and enough CPU and IO to work with everything that is needed.
IMO, your database might see enormous bang/buck from one of the FusionIO/OCZ/LSI/etc PCIe flash storage devices.  You'd probably see a drastic improvement in the worst case performance and concurrent query/update perormance.
I would really look at the CPU last here, unless some of the usages is calculating ray tracing stuff or video encoding on the CPU.
Assuming your database won't fit in memory (though it probably could), the next most likely performance bottlenecks are not the CPU.  Rather, it's the I/O to the storage.  How many HBAs/RAID cards/etc will interface with the storage?  How many SAS/FC/etc cables to the enclosures/expanders, with how many disks each?
How do I compare all the different Xeons for speed? For that matter, how do I compare a Xeon with a Core i7?
If your database does fit entirely/mostly in memory, then the memory throughput, uncore performance and cache sizes will have an enormous impact.  Intel does not document the uncore clocks (by design?).  Optimizing memory throughput often means taking advantage of NUMA, so consider a multi-socket server.
I'm building a server for our dev test environment. It only has to support a handful of users, but it still has to have enough power to manage a 100-gig SQL Server database. (Yes, I'll add a bunch of RAM.)
But, again, your CPU wont be the problem. RAM will, and discs. Discs really will. Spend a lot on discs.
In general, I would gl for a server with enough RAM to really handle all your stuff, and that means you likely want (unless inactive) 16-24gb for the sql server instance ONLY. How many VM's? Depending on what and the database patterns anywhere from 8 to 32 discs may be appropriate.