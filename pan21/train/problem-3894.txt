(In AWS console you can add tags if you need finer grained control, but for a simple backup that might not be necessary, and isn't yet supported by the Perl module used above (Net::Amazon::EC2)).
Don't use the CLI tools - they are written in Java and are ridiculously slow compared to any direct API implementations.
I use ec2-consistent-snapshot ( http://alestic.com/2009/09/ec2-consistent-snapshot ) to take my snapshots (on RHEL/CentOS derived Amazon's Linux) - it is written in Perl and uses the API directly. You specify the volumes you want to snapshot and it allows you to add a description.
I use ElasticFox to manage my snapshots (and all my servers too).  It has tagging, which makes it easy to keep track of which one is which.
I personally think that the inability to assign an easy-to-remember label to an EC2 instance, AMI or volume is a big hole in the current Amazon offering - it just seems like a no-brainer to me.
(In theory, it should be easy enough to hook some similar scripts (there are those written in PHP and Ruby for instance) up to a database, and maintain your own log of the volumes and snapshots taken - each snapshot has a unique id so as long as record that, any further in-house organization should be easily possible. [However, for backup purposes, the volume-id and date is often sufficient])
The above script does not delete snapshots (only create new ones - consistently (i.e. it can freeze the disk/db before the snapshot). Since it is fairly commonly used and I couldn't find a compatible Perl script to delete old snapshots I wrote my own ( http://www.thatsgeeky.com/2011/06/rotating-ebs-snapshots-ec2-prune-snapshots/ ). It does the job (grandfather-father-son rotation) well and uses the same dependencies and parameters as the above script. 
Short of writing your own tool to index EBS and snapshot IDs against text labels, I've found that using a free RightScale account and assigning nicknames is the best way to manage our EBS volumes and snapshots.
I also use the boto library when I want to do things programatically.  However, if you do that, you'll need to create your own datastore.  SQS and Sqlite are good options there.
I have my own script for making rotating backups (grandfather - father - son ) at my blog http://three99.com/posts/python-grandfather-father-son-snapshots-backup-for-ec2/