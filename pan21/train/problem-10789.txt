Here is a simple concrete example where resource name / location separation helped me.  While in development my art assets are in revision control with source code.  It's very convenient and allows me to iterate quickly.  Usually the resource name reflects it's location.  The development manifest is very straight forward.
Manifest files provide a layer of indirection between the resource name and its location.  Ofter extra layers of indirection is just a sign of over design.  However, sometimes that extra layer is just whats needed to build an elegant and efficient solution.
I don't want to distribute a game with the assets scattered around.  So when I'm ready to distribute it I can easily zip up my assets into a resource file and build a new manifest.
Also texture atlases are a great way to wring a bit more performance out of the graphics system.  Atlases are fast but they're a pain to work with while the art is still under development.  My solution is to only build the atlas at the end when I'm optimizing the game.  Since I'm using manifests all I need to do is update the manifest to point to an atlas location and voil√† the game is now using atlases instead of straight files.