Then you can set up any website you like to listen on the separate IPs, and even use name-based hosting as well to get multiple sites hosted each.
You'd be better off having one server, an SSH and SFTP login each, your own private directories, and configuring Apache to host your separate directories.  I would recommend having your own IP addresses which is certainly possible - just ask any provider - some like Memset (who I'd highly recommend) even give you a couple anyway.
Other options include FreeBSD jails, OpenSolaris zones, Linux containers.  They're all virtualised solutions but were designed exactly for this sort of thing, and don't suffer the overhead of a completely separate OS like most typical virtualisation solutions.  (By the way, OpenVZ is absolutely horrid, and more of a hack than a virtualisation solution.)
If you do go down the route of having a physical server carved up into two VMs (which you'll also need 2 IPs for anyway) then this is certainly a reasonable solution, but the cheapest dedicated provider (who has got a half-decent support team) I've found is Â£59+VAT a month.
Why do you have to use virtualisation for this?  Since Unix began* you've been able to restrict users from viewing other users files.
I'd say virtualisation is quite an overkill here, and certainly even if you are able to get a VM inside a VM working (I tried on VMware Fusion to test out Citrix's XenServer but never succeeded) the performance hit would be too bad and you'll be longing for your own VM back again.