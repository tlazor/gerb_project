Best, though, is that you can get snapshots and backups of the system state easily using a VM solution. If you need to you can set up another VM system (ESXi, for example) copy the virtual drives and setup to that computer and point VMWare to that copied "machine" and fire it up while the other machine is being repaired (or pay for the vMotion option so you can live migrate between physical machines); this increases availability and helps with maintenance chores. It's great to be able to upgrade hardware without worrying about unintended effects on the operating system or configuration of your applications since they're "virtual" and know nothing about the changes!
The VM host can distribute cpu usage, harddisk usage and memory usage based on predefined workload patterns. The whole point is that you usually buy a very strong machine to keep up with the peak of your application usage but most of the time it may sit there doing almost nothing and waste valuable free performance. So just spend a few bucks more for a real fat machine and combine your machines into one. It's about consolidating resources. To still guarantee the performance of your workload patterns you can set time shares and io shares for each guest machine and prioritize them to guarentee performance.
Not really. Some applications don't behave well when sharing with other applications. Exchange, for example, expects you to run Exchange on just the box, and installing anything else on it can have...consequences.
The rediscovery of VM technology is one of the best things for the IT industry in a long time...ironically...
Other times it's easier for management since you compartmentalize functions. Your web server isn't sharing duties with your file server, or if you need to move or upgrade that one function then it doesn't impact other services or have unintended side effects.
Another big plus point is that some services installed concurrently in the same OS instance aren't very well behaving together - eg MSSQL and Exchange. It's good to limit both in their own OS instance and instead let a hypervisor distribute the service demands. You usually get a better performance and migrating to new hardware later is just a matter of "copy & paste".
VMWare has saved us quite a bit on the electric and cooling bills for the server room and I'm using Virtualbox to emulate a machine to run Windows for managing certain functions of AD and run the VSphere client on my Linux machine. Last, it's wonderful for testing things. I don't need to create a new machine from the back room to test a forum server or test out an installation of an application. I just create a new virtual machine and fire it up.
Other times it's good for pushing "native" solutions. Your one machine can run Apache for web services on Linux and Exchange on Windows and another running SQL server (or MySQL) on the platform most native for that application without having to invest in multiple physical boxes.
Migrating to new hardware is also easy: Dump the image of the machine and upload it to a new. It will still run and work without fiddling with drivers issues or reinstallations or data migrations.
VMWare sales and marketing people will tell you lots of wonderful and amazing things.  There are some certain benefits, but beware of being totally sucked in.  Especially beware of anything relating to your free CPU and memory load, as there always seems to me to be a failure to recognise that free CPU and memory is headroom for transient heavy load conditions.