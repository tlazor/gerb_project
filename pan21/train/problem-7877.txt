So, if you want to learn a language on Linux, you SHOULD choose a script language, like python, PHP, or even bash scripting.
Three languages will hold you in good stead.  In decreasing order of importance (i.e., the first is the most important):
Second, perl is an incredibly powerful and expressive language that supports all modern programming features.  I've been using it for over fifteen years and I'm still learning new ways to do things more efficiently.  For example, if you want to explore object oriented programming, perl has that (particularly through Moose).
And, my recommend is PHP. It's simple and ugly. It has a detailed online manual. It has good RegEx support. That's all.
You will find that everyone will pretty much just recommend their favorite language.  My favorite language is Perl so that's what I recommend. :)  However, beyond my personal preference, there are some great reasons why you should consider using perl:
First, perl is a wonderful general-purpose language.  It's easy to get started in perl by writing simple scripts to do the same sorts of things you do in shell scripts, like manipulate files and make decisions based on user input.  This provides a very easy and gradual introduction to the general ideas of programming.  Perl has been around for quite a while so there are lots of resources (books and websites) for getting started.
Finally, if you want to explore web programming, Perl has that too.  One popular modern way to write web software in Perl is Catalyst, which provides a modern MVC web framework for quickly developing any sort of web app.
Third, perl comes with the almost infinite power and flexibility of it's official add-on repository, CPAN.  For example, to follow the idea of writing security software, say you want to develop some sort of custom network security scanner.  Instead of writing all that yourself, you could start by using NMAP::Scanner as a scanning engine, and then write your own tweaks and improvements on top of that.
Putting all that together, the advantage of perl is that it allows you to start small writing little  command line scripts and programs, and gradually grow into writing full-featured modern applications.  Of course, the price of this flexibility is complexity.  It's up to you to study and learn how to do things the right way, perl doesn't enforce good practices the way other languages do.  I personally like this freedom, especially coupled with all the great resources out on the web for learning how to use perl.