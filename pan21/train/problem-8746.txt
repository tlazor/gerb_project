If what you want is for your users and machine to behave as if they have full access (or nearly full access) to resources on the computer without actually having full access, you need to either use virtualization to create multiple VM for your users (and each VM would have it's own IP for your application, if it's offering a service requiring a port) or you would need to look at some kind of sandboxing mechanism like jails (and that would still lead to some network contention issues if running some kind of application that is "duplicated" but wants a same port to use). 
It's impossible to tell what might be the best way to achieve your goal, as this is very much dependent on the software you want to use and the flexibility of it's built environment. 
In a general case though, what I would first try to do is to check if you can use ./configure to create installation prefixes for your various versions. Something like 
Otherwise they'd be able to compile and run applications installed right to their home directories, as was done in the "old days" of Unix. Sounds like you're describing installing applications to the system and local machine directories, which is a sysadmin task. You'd need to confine them to their home directories or give them virtual machines to run amok in.
Using virtualization is a lot more involved, as you have to maintain several copies of your complete operating system and install the variants of the software on each of them. You could do this with several variants, including desktop style types like VirtualBox or the server style approach with Xen or KVM (see this Ubuntu guide).  
Dependent on what makes a complete build of your software, you might need complete lib, etc, bin etc. folders under the various var* folders. 