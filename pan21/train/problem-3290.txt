Set up merge replication from your centralized server to each of these Express instances; Express can't serve as publisher but it can be a satellite, and this includes merge updates.
Based on the answers that the OP provided in the comments section above, this doesn't really sound like a scale out solution. I think your time would be best spent looking at the following:
If after doing all of these changes, you still experience performance issues you might consider looking at the scale out approach but I think these steps are more basic and less costly for you and your customers in the long run.
This would be more expensive because Standard licence is needed and the first one could be done with express, but would it be better in matters of performance? How fast are those automated replicates? Does all this make sense at all or is there a better nicer way?
"p2p replication" and "distributed partitioned views" look interesting, but both require (multiple?!) enterprise licences which are very expensive, and still both arent perfect solutions.
Nicely wrapped in a transaction so that it could be rolled back if it doesnt succed on all servers .I am having fear of some serious locking issues if something goes wrong on one server or it is waiting because of some other lock on one server.
3.) Make sure Database maintenance is being done (index rebuilds, statistics updates and proper backup maintenance - I often find vendor provided SQL Server Express edition installations without ever being backed up, without ever having maintenance done - http://expressmaint.codeplex.com/ for a script to help automate and schedule some of these tasks)
4.) Are you hosting your application and SQL Server database engine on the same server? It may be time to consider splitting these out. Applications and SQL Server often have competing priorities for system resources and don't often complement each other well on the same box. Test and see. Look at perfmon to understand the impact. 
1.) Database design and query performance --> Analyze the workload that is running in SQL on this instance and ensure it is performing as expected. Look for queries that take longer than you'd expect, look at the underlying design of the tables and stored procedures/SQL code involved.
Sounds to me like you need to do some SQL performance tuning.  If the database is small enough to run in SQL Express then odds are you don't need to configure some big scale out setup.  You probably just need to start with index tuning to fix your poorly performing queries and setup some index maintenance jobs.
I am looking into the possibilities of how to scale out the sql server 2008R2. simply scaling up wont be enough.
2.) Have a look at what resources you are driving on the server. Are you maxing out any limitations of SQL Express? If so, then I would consider running some test scenarios and analyze the workload to see if moving up to a higher specification server and perhaps moving up to standard or enterprise edition and the increased resource allocation would help. Are you deploying on 64Bit based boxes? How much memory? Do bottleneck analysis to identify which bottlenecks are slowing you down.