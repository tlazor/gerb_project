You can find out more information about the election process by searching for MongoDB log lines with the  REPL log component. When you shutdown the primary on your two member replica set, you should see log messages similar to the following on your remaining secondary:
The method does not immediately step down the primary. If no electable secondaries are up to date with the primary, the primary waits up to secondaryCatchUpPeriodSecs (by default 10 seconds) for a secondary to catch up. Once an electable secondary is available, the method steps down the primary.
The replica set member state changes to reflect the current role of the replica set member. Your surviving secondary cannot become a primary without manual intervention to forcibly reconfigure the replica set. The recommended solution for production deployments is to add a third member to your replica set (ideally another data-bearing member hosted on a third machine) so your deployment can automatically recover from any single member being unavailable. 
You should expect that if either member is unavailable, there will be no primary: a two member replica set does not provide automatic fault tolerance.
Note: All writes to the primary fail during the period starting when the  rs.stepDown() method is received until either a new primary is elected, or if there are no electable secondaries, the original primary resumes normal operation. The time period where writes fail is at maximum: secondaryCatchUpPeriodSecs (10s by default) + electionTimeoutMillis (10s by default).
Since you only have two voting members in your replica set, the strict majority of voting members required to elect or maintain a primary (n/2 + 1)  is 2.
As per MongoDB documentation rs.status() This output reflects the current status of the replica set, using data derived from the heartbeat packets sent by the other members of the replica set.
Instructs the primary of the replica set to become a secondary. After the primary steps down, eligble secondaries will hold an election for primary.
Starting in MongoDB 3.4, the replSetGetStatus command can accept the optional initialSync: 1 to report on initial sync status and progress if the command is run on the secondary. To report on initial sync for the secondary, you must run the command instead of the helper.