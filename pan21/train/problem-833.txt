I find this easier and more readable with two variables.  Putting this advice together with the suggestion to use lower case once rather than twice per iteration (see the @tinstaafl answer):  
While there are some who swear by this formulation, I find it just makes things more complicated.  You don't need a variable to track whether it is a palindrome.  If you find a pair of letters that don't match, you can return false immediately.  If your method is so long that this is confusing, then it should probably be broken into multiple methods anyway.  
This assumes that zero length strings are supposed to be palindromes.  If not, you could check for that condition at the beginning of the method.  
You can do other normalizations to the string.  For example, it would be reasonable to remove whitespace and punctuation.  E.g. this code would currently fail on the input "Madam, I'm Adam."  Because the spaces and punctuation won't match (and the capitalization, but you fix that).  Of course, it's possible that the task requirements will only give you strings without such extraneous characters.  But then why is it giving you a mix of upper and lower case?  
This will remove everything but letters from the string.  So the previous example would become "madamimadam" which would match as a palindrome.  Which makes sense, as it is one of the classic examples of a palindrome.  