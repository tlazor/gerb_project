I would recommend testing out the soft phones before you decide to implement them, make your vendor install one on a machine and then hammer the CPU on that machine and see if the quality degrades past what is acceptable to you.   
The soft phones are going to pose a problem, and there is not a real good work around for those.  You should be able to capture their traffic and apply QoS policies to it to improve it’s chances on your data network, but really, there is only so much you will be able to do with these.  I like soft phones, they are neat gadgets, but I would not recommend using one as a primary phone for someone that has to have a reliable phone.
I would strongly advise against using one cable for the voice and the data, I know that is supposed to work, but since those are not on separate broadcast domains, if the PC is transmitting heavily you will have problems with the phone accessing the media.
Another, secondary reason I like separate networks is, in case you do have some sort of catastrophic melt down on one of your networks… you have a switch blow up for instance… you do have a second network sitting there you know works that you can sometimes temporarily draft into service to cover you until you get that other network fixed… I know that somewhat goes against all my previous arguments, but if it gets users back up and running, I am okay with breaking my own rules
Converged versus the non-converged network.  I personally would recommend splitting the VOIP and data onto separate physical networks… the non-converged option.  The reasoning for this is, in my opinion, the cost differences are really not all that significant and it provides a couple of advantages.
First advantage is, it doesn’t matter what your data users are doing, it won’t impact your phones.  Between bandwidth hogs, users who get infected with viruses, physical malfunctions, and/or user maliciousness there are a lot of possible ways for your data users to impact your VOIP users if they share any infrastructure.  Even if you are applying QoS policies, if you have a user blasting out 100mbps of Ethernet traffic, it can overload switches processors, set up an environment Ethernet collisions are very likely to occur on, etc.    In my mind, you run a second set of cables, you throw in a second set of switches and you don’t have to worry about that…. 
I suspect you could come up with some solution with 2 NICs in each machine that uses a soft phone client, but that still won’t protect you from issues like choppiness on a soft phone call because the PC’s CPU is chewing on opening a large file.  
Second reason is security.  It is not that difficult for a savvy user to go out and capture VOIP traffic and reconstruct phone conversations they really shouldn’t be listening to.  Yes, this is mitigated to a large degree by using separate VLANs, but there are some techniques that let you hop from one VLAN to the other… having the traffic on two entirely separate physical networks limits that.  Having two separate networks won’t prevent this, but in my opinion, since they would have to physically connect to the second network to snoop, it takes care of a lot of the “was he intending to do this?” question.
Third, in my opinion it is really nice to have the networks not converged from a troubleshooting standpoint.  If you have nothing but VOIP calls going across the network, then you don’t have to rummage through page after page of wireshark captures looking for the traffic you want… yes, this is what Find is for, or filters are for, but in my opinion VOIP is tricky to troubleshoot and as simple as you can keep the environment you are troubleshooting in, the better off you will be.
About the only argument I can think of that carries any water for going with the converged network versus the non converged is an ease of management argument.  While  I am all for keeping your network as easy as possible, I don’t feel the extra network adds complexity to the management of the network.  