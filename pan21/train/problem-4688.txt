PostgresSQL cannot be listing on the same port as a http server. I assume you are running a web server on ports 80 and 443, which connects to Postgres on localhost.
What you can do is edit the DNS of database.mydomain.de to be a CNAME to rootserver5678.provider.com, or create AAAA and A records with its static IP addresses. Issue a certificate for database.mydomain.de and configure the web server for https per its documentation.
First, DNS does not work this way, it only resolves the name, not the port. Second, you mention the PostgreSQL port as if it were public access over the Internet.  Exposing PostgreSQL protocol is poor security. It exposes the database to denial of service attacks, even if the connection is secured with TLS.
I rented a root-server that hosts some apps that I want to reach over the internet. For example my postgreSQL DB is exposed on port 1234 and the domain name, provided by the server provider is rootserver5678.provider.com. I am able to navigate to rootserver5678.provider.com:1234 and access the exposed webapp. Furthermore I have a domain registered that is mydomain.de and I can register subdomains such as database.mydomain.de. I want the subdomain to point to my webapp and the connection to be secured, so that calls to database.mydomain.de are forced to be https. What is the correct way to do that?
Is it okay to do domain forwarding from database.mydomain.de to rootserver5678.provider.com:1234 or do I need to change the DNS entries of my subdomain to use the DNS from my server provider? Do I install SSL certificates for the new subdomain?
I'm asking the question this way, to ensure I'm not asking an x-y-question and I understand way too less to ask an elaborate question.