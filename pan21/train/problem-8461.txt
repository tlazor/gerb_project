I know my question might look odd but I just wanted to get some insights. Every prediction model will give us predictions for validation data set and it also can give/rank features based on their weight on predictions. I am looking for one step after that. Lets say we are dealing with employee resignation and we know the most important features are pay, latest promotion, job satisfaction and external job opportunities around that employees residence. Now, is there any way that we can say which of these features is the most important feature for an individual prediction? May be for one employee, Job satisfaction is the reason behind the leave but based on our feature importance, we need to focus on pay first. I just wanted to know if there is anyway that we can do some post processing on each individual predictions?
Depending on what model you are using, the way things are multiplied and added together at prediction time slightly varies, but in principal it's all the same.  You train a model that tries to learn the relationship of the feature vectors you give it to the associated targets.  At prediction time, the same mathematical operations are being applied to every input you are trying to make a prediction for.  So, the weights you learned during the training phase represent the feature importance across the entire training set, in which you hope generalizes to unseen "test" data.  If you suspect that there are other reasons behind why an employee decided to resign outside of what the model weights are telling you, this would indicate that your model does not have enough features to separate the two classes of "not resign" vs. "resign".  Essentially, during testing time, the feature importance is static and the exact same across any input you give.  If feature1 is the most important for input 1, its the most important for every input.  This is what the model learned.      