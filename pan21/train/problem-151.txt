Initially the SDN concept relied on a single controller but this was heavily criticized for introducing a single point of failure. If your controller's compute hardware died or the network was partitioned preventing contact with switches, in effect you lose the ability to adapt to network changes.
With that said, not all SDN solutions have separate data and control planes.  I think it's common for a single transport network to handle control and data traffic.  I think a more likely explanation for the term logically-centralised controller is that the controller should be somewhere close to the center of the network where it can easily reach all the managed devices.  If you put the controller at one end of the topology, there may be additional latency to certain spots, and additional management traffic on certain links.  The whole point is that the controller should be able to reach every managed device as easily as possible.
That definition is stated in the most comprehensive SDN survey. (Also, a great starting point if you are learning about SDN).
Without knowing which SDN you're referring to, and without knowing what material you're reading, I think we're just going to be guessing.
Actually logically-centralized is about having a physically distributed control plane to achieve scalability and reliability. However, logically it seems like a single centralized controller.     
Logically centralized also refers to the idea that these distributed controllers act as a single controller from the perspective of the Network Operator running the system. In practice, while solving the big problems, distributed controllers introduce new issues related now being a distributed database for network rules.
My Question: does logically-centralised controller refer to, the fact that in SDN data and control planes are separated? If not, how can it be explained?
Logically centralized refers to resolving this problem with many controllers that are widely physically distributed, to provide fail-over redundancy and guard against network partitioning. For example, when considering controller placement you will examine the likelihood of natural disasters (eg. earthquake, tsunami) and look to ensure you have controllers in regions that are unlikely to all be hit by the same event.