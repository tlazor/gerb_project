Nothing (if it's done wrong, though since it's not done at all, it's hard to comment) and yes.  Your browser comes pre-loaded with a bunch of CA certificates, which you use to verify any public certificate presented to you; the question of how to trust your CA bundle is an interesting and open one.
Whenever I think about MITM attacks, I think that any defence requires a "safe" connection to be established for authentication, and that the initial establishment of any "safe" connection always seems to be subject to a MITM attack itself. So for example, if the public keys of the trusted certificate authorities above are indeed distributed with the browser, the distribution of the browser would be subject to MITM attacks. As I understand it, even if you physically handed someone a public key / certificate / anything on a piece of paper, you had better know them from elsewhere otherwise they could be a MITM. 
To conduct a successful MITM attack, all I have to do is get your user to accept my certificate once I've arp-poisoned your connections.  With most end-users, how easy is this?
The best defense for the above scenario is to keep your virus protection up to date and not click links in emails to get to your trusted sites.
It's theoretically possible to change both the certs and/or your browser in such a way that you are unaware of MITM attacks taking place. If your CA certs were changed (by malware for instance) then they would not match on sites that use the real CA but would allow MITM attacks if the browser were to be routed through the evil third party.  I'm not aware of an actual real world example of this happening but I don't think it would be difficult for a malware writer to accomplish.
What stops someone from MITM-attacking the request to the certificate authority to verify the certificate? Does the browser come pre-loaded with the public keys of the trusted certificate authorities (thereby providing authentication)?