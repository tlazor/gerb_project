I realize there are many ways to solve this, but I decided to slap a start screen that starts loading the next scene in the background. When the user actually clicks the start button they get their first feedback of a sound and a fade transition. It also seems to reduce the load time, but this could be due to not having to stare at a black screen or stagnant loading screen after launching. 
This is required by the console manufacturer as part of the standard Technical Requirements Checklist (TRC).  One reason is to allow the startup screen to loop back to a demo mode if no one has touched the controller, this stops screen burn and makes it easy for a store to simply pop in a game and let it run looping action with no intervention.
I recently added a start screen to my mobile game. The decision came after testing it on an older phone. The game front loads a majority of the assets into memory when the game starts, and was causing a significant delay between launching the app and getting the first feedback loop. 
As well as the reasons given above, arcade games are also another reason. Usually an arcade game will loop the menu/intro until a coin is inserted to start a game, however when ported to home consoles, the coins are no longer needed so it looks for a button input instead.