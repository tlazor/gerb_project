In above situation, the OS creates a new explorer process with setting similar to what you describe.
Since Win7, you may have multiple explorer.exe running even when "Launch folder windows in a separate process" is disabled. This is normal behavior that happens even on a clean installation of Windows. It can be triggered by running explorer.exe with one or more well-known command line parameters.
So, to answer your answer, to find what process spawned multiple explorer.exe of {75dff2b7-6936-4c06-a8bb-676a7b00b24b}, you need to identify which programs start explorer.exe with parameters like /select.
When explorer.exe is started with one or more command-line parameters (usually called by programs that implements "Open Containing Folder" by starting explorer.exe /select,<file path>),  it starts with command line /factory,{75dff2b7-6936-4c06-a8bb-676a7b00b24b} -Embedding. It deliberately starts a new instance for each invocation by specifying the SingleUse.
Note that these new explorer processes are typically not shut down automatically if you close the opened explorer windows. So you can well be left with multiple background processes having those command lines you are describing. If you want to avoid this, un-tick the "Launch folder windows in a separate process" option.
When "Launch folder windows in a separate process" is enabled, it starts with command line /factory,{ceff45ee-c862-41de-aee2-a022c81eda92} -Embedding.
While the change and the reasoning for the change is undocumented, it seems to be a deliberate design decision, or leftover from an ambitious design decision that was abandoned right before Win7 RTM. This premise is made based on a fact that if you find the CLSID after /factory, in Registry, you may find something interesting as below.
It is apparently an undocumented design decision. Prior to Win7, there was only one instance of explorer.exe, unless when you have "Launch folder windows in a separate process" enabled, or something went very wrong.