You're going to want regular backups of the configuration and data as well. Without knowing how much data that is, I would say evaluate the needs of each individual server, and determine what your backup destination will require. Once you have that, you get a much better idea of where you can put it. 
I back up 23 machines to one server every night.  Takes a little under 2 hours to cycle through all the machines - but I'm using a local machine.
I personally like backuppc it's free, it pools data, very customizable, uses basic Linux tools, can backup all all kinds of OSs, web interface, and rather simple configs. 
As for the backup server itself, that too is done on the cheap. It's consumer grade hardware with a non-RAID drive. The expectation is that if the drive fails, I'd be there with a new one that day, and we'd rebuild the backups immediately. The software that backs up the servers however, does get sent off-site because that's very small compared to all the other data. It's also just a few custom shell scripts that use Rsync. I make incremental backups by making tarballs of the directories and rotating the tarballs.
Since rsync will move a new file over the top of an old one - the hard links will save a ton of disk space on files that never change (they all reference one inode), yet each copy of the directory should contain every file (not just symlinks to the files)
Hmm. Well, our solution is to have a separate backup server in the datacenter, but without off-site backups. This is cheap for us because we rent a whole rack but only use 2/3 of it (and we're super-cozy with the datacenter provider - that space may even be free). I suggested off-site backups to my boss, but he nixed that as too expensive bandwidth-wise. He also thinks the likelihoood of the destruction of our datacenter is too small. I shrug my shoulders and say "it's your call".
There are some decently cheap 2TB drives out there right now - and you could easily set up a RAID 1 that mirrors your backup drive onto an extra drive that becomes your 'offsite' rotation drive.
Alright, your first step should be to evaluate what you really want, and create a backup plan before you create a backup solution. The dog gets tired of being wagged. 
I use rsync to a central backup server; throw in a little "rotating backups" using hard links to conserve disk space:
If the machines have been created in kickstart, and are well managed, and you can recreate them from documentation, great. If not, do semi-annual images of them onto USB drives. You can use clonezilla and be done in a short time. This will give you relatively rapid turnaround if one of the machines catches on fire, or whatever. 