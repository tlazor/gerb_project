The LGPL was invented as a middle ground for this situation, as it basically means that the GPL only applies to the library code, whereas the code linked to it stays under that creator's licence. This might work in your situation as it keeps the framework open while protecting the licensee's new work. But the definition of 'linking' may not easily apply to your framework and you might end up having to amend the licence, making it less worthwhile.
Basically, if you own the copyright to the code, you are fully at liberty to offer a GPL licence on the code AND to let people make closed-source applications with it also. Offering a GPL licence only affects the code of people who have chosen to accept that licence in order to facilitate their own usage. It does not give them rights over the code used by those who make closed source derivatives with your permission. Closed-source licensees have a licence from you to make a closed-source game with your code and the GPL does not enter the equation.
This is a common misconception, but the licence is not a property of the code. It is a document that tells people one way that they can legally use your code. There can be as many or as few different licences available as you like, and you can decide how to allocate them to people. You can give one person a GPL licence and everybody else a closed licence if you like. The only catch is that the GPL licence then allows that person to also give the GPL licence to others, which is fine because that's how it's supposed to work, but it does not stop you having the right to allow people to make closed source applications based on that code too.
It depends on how your framework links with the game code. The framework doesn't have to be open source to allow other people to make games for it, you could release it either as a program that people can write plugins for, or a closed source library that people link against. In that case, you maintain full control of the framework.
It sounds like you want the framework to be open source though, in which case there are two options. If your framework is a library that other programs link to, you can release it as LGPL and people can then develop closed or open source programs that use it. If you develop your framework as something that the game modules act as plugins, it seems that they would be required to be full GPL as well: http://www.gnu.org/licenses/gpl-faq.html#GPLAndPlugins
If you hold the copyright to the code then of course you can use it for closed source, so long as it doesn't depend on other GPL (or similar licence) code.