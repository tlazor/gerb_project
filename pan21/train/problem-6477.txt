A little bit of background first.  We have many desktop applications that we have written to do various batch processes.  Currently they are all running under a single account.  When one of these batch processes needs to be updated, one of the systems team members logs into the machine, stops the application, uploads new code, and runs the process again.  Currently all the batch processes run under a shared account, and the systems team members all log in to this same shared account to manage the batch processes.  
UserA could shadow UserB's session, so why not configure remote control in the RDP-Tcp properties of the server to allow interactive remote control without requiring the user's permission. That way any member of the system team can "shadow" the session in which the batch processes run and then stop "shadowing" the session when they're done.
If you want to allow them remote access to the same session you could use an application like TeamViewer or TightVNC, since they always share the current view of the desktop. TeamViewer has more features but TightVNC is OpenSource, so can use it at work for free.
Is there a way to give each member of the systems team a separate account, while allowing them to log into a single desktop session where they can update the appropriate processes?  While this would be easy if the applications in question were services, we would rather not convert all the processes to services.  
We are using Windows Server 2008, and remote desktop to log into the remote server and manage the batch processes.
Have you come across Microsoft's SRVANY.EXE tool?  I don't believe MS have released a Win2k8 version, but the Win2k3 version runs fine on Win2k8.  Basically, it's a wrapper that you can configure run your script / program as a service.  It listens to messages from the Service Control Manager (SCM), and stops/starts your underlying code as an when requested.  We use it to run Perl / VBScript / Shell Script as services.
No, that's not possible. A separate session is created per user. UserA can't logon to UserB's session as UserA.