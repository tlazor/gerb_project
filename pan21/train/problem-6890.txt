In this case, this is actually caused by the additional security provided by NLA. This is a feature. A computer that is not trusted by the domain of the RDP server should not be able to gain any kind of information on the account being used.
I'm trying to define logonHours for Remote Desktop users on Windows Server 2012; Network Level Authentication is required for remote connections. When an account with restricted logonHours (defined in ActiveDirectory) tries to connect at a denied time, the client (Remote Desktop Connection) responds with: 
I tested a connection to same server using the same account from my macbook using Royal TSX for RDP and got a warning that the password had expired.
You are asking for an application-layer error message but you want a network-layer security feature. You can't have your cake and eat it too.
If the account tries to login at allowed times, everything works fine. If Network Level Authentication is not required, then the client connects to the server, which denies the logon, but displays the much nicer error message "Your account has time restrictions..."
The RDP client will display a nice, usable error message if you run it from a machine that is joined to a trusting domain, and the RDP client must be able to resolve the hostname of the RDP server (session host).
The network layer cannot connect to the application layer. So the message you receive is completely accurate.
Is there some way to still require NLA, but present the friendlier notice about time restrictions? Am I missing a policy setting or some other configuration?
The error message "Local Security Authority cannot be contacted" prevents information being leaked on whether the user account is invalid, expired, untrusted, time-restricted, or anything else an attacker may use to identify valid accounts, to untrusted computers running the RDP client.