If you are using C++, you can use a vector or list for a list whose size can grow. In Java, you can use a List of which ArrayList and LinkedList
are implementations for a dynamically-sized list. In Python, the list type grows dynamically. Pretty much every language has a notion of a dynamic array or a linked list (depending on what kind of access pattern and storage requirements you need). If you use a database of some kind, database cursors can read over arbitrary numbers of rows. Can you explain why you believe that you need to have a predefined fixed number of permitted contacts?
You can find pretty much everything you need to know to build a GTalk client at the GTalk developer's home page. GTalk uses the standard XMPP protocol, with a few extensions for additional features. You shouldn't need to know such limits if they even exist. If they do exist, there is no reason they could not be raised the next day. In general, it's a bad idea to use fixed-constants for buffer sizes, array sizes, etc. There is no reason to not allow the number of contacts to vary dynamically at runtime.
If you really need a static maximum number for a list, then i strongly suggest you review your approach. What language are you using? In any modern language, the maximum number of elements in a list/array/whatever is irrelevant.They all provide datatypes for that that are only capped by your RAM memory.