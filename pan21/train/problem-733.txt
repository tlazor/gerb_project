There's a couple of way's you can go about that, but it depends on what you need out of the final product. Is this something clients will be using? Friends? Just you? Flask allows you to prototype quick web apps and still maintain a good amount of control over what the finished product looks like. Spyre is an amazing way to make a web app at near light speed, although it may not be suited well to your use case, depending on what you're doing. It's a little harder to make unique-looking things with Spyre, but I always suggest it to people.
Trying to do a web application  from scratch could also not be ok  cause it will be a lot  of pain  when I will modify my  models.
Here is an example of how to Integrate a Machine Learning Model into a Web app https://www.youtube.com/watch?v=mu-R0dQ3-Qo and the code can be found here https://github.com/shivasj/Integrating-a-Machine-Learning-Model-into-a-Web-app
At any rate, the standard thing to do here is to Pickle your model after it's trained and then load it to memory in a web app. After that you can call the model.predict(X) on an X that is sent to your program by a user. 
I am looking  to find some resources about what I wan't to do :I wan't to make some GUI of my machine learning models and  finally deploy them as a web  app.I find R Shiny to be somehow  ok , but it limits me only to use R,and I have also Python things.Looking at the azure ml studio  it brings  somekind of workflow  like in Disco and ProM from process mining, but I am not  sure  how much pain will be to feed everything  like ensembles/grid search etc to those  flow components,also the full paid  version is  very expensive.
You've already written the code that test/trains the model and you're looking for a way to put that model on the web somewhere so users can interact with it?