Additionally you can simply run mtr to rapidly check the network quality. Run it several times as the packets may take different paths.
I am not a developer but I suggest you try to replace non blocking sockets by an I/O multiplexer: select or poll or /dev/poll and check if the socket is ready for writing. It might change the behavior of your program for the better or in the worst case give you more debug and hints about the real problem.
EWOULDBLOCK/EAGAIN means that data could not be sent right away. We need more details about your code to figure it out.
On such long distances all the packets are probably using different routes, going though different AS, so no one can really assess the network quality. A packet may take a long time to arrive and be acknowledged because of a problem somewhere deep in the internet (it's probably near though, otherwise people would have reported it and fixed it), try to join from/to other locations. If a single packet takes a long time to be acknowledged, the TCP window will get stuck and further data may not be processed. You may want to try and tune your TCP window size to a higher value.