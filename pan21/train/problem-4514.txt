The processor is engineered to use one variable for the instruction pointer and one variable for the stack pointer.  All code is written assuming this, if you started playing with two variables you would break every bit of code out there.
What you can do is change around which 4gb of memory you are using at any one time.  That is the PAE that TOOGAM is talking about.  Any one program would still be limited to 4gb unless it jumped through a lot of hoops in order to access the extra memory (and no applications programmer would do this these days--if you're doing something that actually needs over 4gb you have a beefy enough task you can dictate terms to the user:  64 bits or I don't run) and you introduce headaches with interprocess communications.  Sharing a chunk of pure data is fine, sharing a chunk of data containing a pointer will cause problems because the pointer will point to the wrong place in the address space of the second program.  This is the cause of the driver headaches that TOOGAM mentions.