Although none, SYN+RST and FIN+RST are illegal combinations, SYN+FIN is valid now under TCP fast-open (TCP option 34), especially for DNS. SYN packets, even with fast-open, should not be fragmented.  I do not consider rules with the PSH and URG flags as useful.  Don’t confuse connection tracking state with TCP state:  An RST response to a SYN packet is established for tracking purposes.
SYNPROXY is for forwarded packets and adds nothing for locally delivered ones beyond syncookie support.
Unlike some other iptables GUI solutions where you can only manage one iptables configuration at a time, with Firewall Builder you can manage a large number of iptables configurations all from a single application.  Firewall Builder runs on Linux, Windows and Mac OS X, has been around for over 10 years and has thousands of active users around the world.
ICMP error packets will always be in the related state and of length 48:576 if they are valid.  Length 84:1280 for IPv6. All others should be ignored.  As their maximum size is also the minimum MTU, they should never be fragmented.  ICMP requests (pings, timestamps, etc.) will always be new, and replies established.  Drop ICMP packets in other states.
In the filter table, the first (or second, if accepting established state packets first) rule in the input and output chains should accept everything on the loopback interface.  You should trust your own internal packets.  If you can’t, you have bigger problems beyond a firewall solution.
Consider connection state tracking with tcp flags.  For example, a tcp RST or ACK only makes sense for an established connection.  SYN makes sense only for new and related connections.  A SYN for an established connection means either your SYN+ACK was lost or a hack attempt and should be reset as both sides of the connection don’t agree as to state.
I'm sure Linux sysadmins are quite familiar with iptables, the userland interface to the netfilter packet-filtering framework.
Lastly, don’t blindly copy rules unless you really understand what they do.  So many similar lists of rules do that, and most of the time, the result is laughable.
The first rule blocks all ICMP packets whose "fragmentation flag" is not 0. (ICMP should never be fragmented; they should be carrying small payloads)
Now, this "Question" is meant to be a Community Wiki for collecting together various bits-n-pieces of iptables wisdom. Nothing is too common or too obscure. Post anything you know that would help others make the most of iptables.
Like the SSH example with a recent list and accepting only subsequent SYN packets, the same should be done for SMTP, and is similar to “greylisting” on the IP address datum alone.
Use xtables-addons geoip match instead of ipsets for country lists.  Update the geoip data regularly (at least once per month).  The data is more dynamic that a fire-and-forget ipset list.
Full Disclosure - I'm the co-founder of NetCitadel which is the company that develops Firewall Builder.
Another GUI that can be used to configure iptables is Firewall Builder.  It lets users create rule elements as objects in a database and then drag-and-drop these objects into a rules editor to create the desired firewall policy.  The application then generates a script file with all the iptables commands required to implement the rules.