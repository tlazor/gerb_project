Since you're coming from a coding background, I'll base my analogy there.  Imagine that being a sysadmin is just like programming, except you'll be called on to code in a different language every couple of hours.  And sometimes it's Pascal.
They may want to run updates (or fixes) on many of the different pieces of software running on the server, including (but not limited to):
Beyond that, they could also be doing hardware maintenance, such as adding a new hard drive, upgrading a motherboard, putting in faster RAM, or swapping out network cards. There's plenty of things, both hardware and software, that can be upgraded or modified, really.
There are some things you can do while the car is running - add fuel, oil, washer fluid, clean the windshield, change gears, etc.
Now if they have a backup server (or a cluster or something of the sort), this can be transparent, but if it's literally one box serving the pages...well, it pretty much has to go down.
Usually the highest traffic sites don't go down for maintenance. They're designed so they don't have to. (Depending on the site, that can be very tricky. It's not just a case of running multiple servers, although obviously that's the starting point.)
Truly, though it could mean anything.  Sometimes a mouse chews its way into a warm place.  Or a single point of failure makes itself known.  Eliminating downtime is what we pursue ... like writing code that works perfectly on the first compile.
This is rare for very large systems - I liken it to replacing the fuel line on a running vehicle: for many, it's not feasible to do (or worth the effort/risk) at certain skill and resource levels. However, for places that have the skills and resources, they can perform a fuel line replacement on a running vehicle. Liken that to architecture migration; they do it a lot more complex.
However, you can't replace the fuel line in the car while it's running - liken fuel to data; you don't want to lose any, or you'll have unhappy customers.
These downtimes vary based on the level of administrator skill and the complexity of changes. On larger, high traffic sites - the only way this could feasibly happen is if there's a major architecture change; something that, no matter how many servers and redundancies you have, the architecture needs to change all at once.