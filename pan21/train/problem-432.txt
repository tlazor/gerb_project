Wi-Fi networks with browser-based login pages (aka "captive portals") work by intercepting plain HTTP requests, as well as plain DNS queries, and making the response redirect to the local network's login webpage instead of the real server you wanted.
Of course, most networks actually block all non-HTTP traffic until you log in, so the VPN-tunnelled requests end up going nowhere. Quite possibly those 15 minutes are what it takes for your VPN software to give up and close the tunnel entirely.
Other than that, there's no real workaround as long as all of your web browsing goes through the VPN.
An OS could work around this by having a dedicated captive-portal detection service which tests each interface individually, bypassing the system's routing table (e.g. NetworkManager on Linux does this) – and then opening the login webpage in such a way that it bypasses the VPN as well. (Of course, bypassing the VPN is often undesired and many "privacy-oriented" VPN apps try all sorts of things to prevent it anyway.)
But when you're connected to a full-tunnel VPN, those requests are not visible to the local network anymore – they're tunnelled inside the encrypted VPN connection. Indeed, for many people the whole point of using a VPN is to prevent interception by local networks.