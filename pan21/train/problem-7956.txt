Regarding RDS, I was dead-set against moving to it, and now I'm happy about the change. It's reduced my DBA scut-work to about zero hours per week. I don't get to use RUM indexes or TimescaleDB, so I'm not 100% happy.
You're right that I'm banging my head against the wall on RDS, but I'm mostly trying to get my head around event scheduling in Postgres. Different database platforms support scheduled task queues in different ways. Either with an outside agent, an explicit feature, etc. Sometimes it's easy, sometimes it in the box, sometimes not. In the case of Postgres, it looks like the underlying feature is a background worker, but that's not really exposed in a way that makes it look a standard end-developer tool. (No custom shared libraries, and I'm not easily able to access RegisterDynamicBackgroundWorker in my environment. That's got nothing to do with RDS.)
Thanks for the solid answer, much appreciated! I really liked your phrasing on distinguishing "event-driven" and "clock-driven" things. I'm so stealing that ;-) Using triggers for this is super sketchy, for sure. And pub/sub doesn't give you a clock.
I'm figuring that what I'll do is write custom tasks as methods with grants that restrict them to a specific roll, and then implement the scheduler externally. The external program will fire off function or method calls and keep track of when to run. That's all fine, I just wanted to make sure that I wasn't missing something. That does leave me one question, though. Is it possible to launch of query in Postgres in a 'detached' thread? Meaning, can I connect, start the task (stored procedure is fine), and disconnect without waiting for a result? As far as I can tell, the answer is "no". That's arguably a good thing, but there are times when I'd be able to safely launch a task and get out, so I'm interested.