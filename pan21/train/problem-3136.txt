A scope has 2 types of variables. local and global. Global variables are defined in a parent scope, and can be overriden by local variables. Local variables are only available in that scope or the child-scopes. They get removed once the scope is removed. If you name a loca, variable the same as a global, the global gets overridden but it dodsn't get deleted, nor changed.
When i make a script that excecutes at the beggining and has a var ammo and that finishes excecution, will i be able to call the var ammo in other scripts or it will be deleted? If it will not be deleted, will I be able to change its value on other scripts?
In your case, ammo is a local variable to script "A". Once script "A" is finished, ammo gets deleted, and can't be reached by other scripts.
This question can be expanded to almost all modern languages. The short answer is: no, it won't, the long answer is:
In programming, there's a word called scope, a scope is a chunk of code defined by the enclosing statements in the programming language (in most of the languages, they're brackets {}). There can be multiple scopes inside another scopes, creating a hierarchy system.