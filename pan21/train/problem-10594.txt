Android devices are so powerful today you can virtually use it as a stand-alone desktop. I have an old Acer 5515 laptop with a single core AMD processor and I also have a quad-code android and i want to use its processor power(android) to boost my laptop performance. I searched google and there's no one yet out there at this point. So can anyone here suggest anything? I can code in c# and android and i thought of transferring  data using USB interface/API.
First and foremost is the fact that your mobile phone processor and laptop processor have almost nothing in common. They are completely different architectures and are not code compatible. Any code you want to run on one will not be able to run the other without a lot of work. 
You cannot simply "package" up little bits of work and pipe them elsewhere and then get them back without a major infrastructure in place to support it.  The reason Folding@Home does it is because they can package up a dedicated piece of software to run on every machine, and then package up big chunks of work for each machine to do and send the result back.  For each "package" to be worth splitting out it has to take a reasonably long amount of time to do to offset the cost of packaging in the first place.  There is no realistic way you could package up the small amount of work to, say, display a web-page in any way that would be faster than simply doing on your laptop in the first place.
You can try and appeal to me that they both run Java, but Java is an interpreted language and requires a JIT compiler on the machine that is to run the code. That compiler has to be tailored to the architecture it is running on and features supported on one will not necessarily be supported by the other. 
The assumption that your mobile processor is as powerful as a desktop is also a fallacy.  Mobile phone processors are built for low-power and generally have <5 watt processors, laptops have >35 watt processors and desktops anywhere up to 100 watt. Those numbers are not just implying that desktops are massively inefficient, there is an order of magnitude difference in complexity between mobile and desktop processors.
Even if both your phone and laptop processors were architecture compatible this is still not an easy task.  Say you want your phone to do the major grunt-work of playing a video or something.  Video decoding isn't as easy as you think it is.  Your phone has dedicated hardware capable of decoding video, and if you wanted to watch it on your computer you would then have to send the processed data back over the network to your computer.  This means it would have to re-encode it to something your computer could handle and as powerful as you think your mobile is, this feat is difficult enough for a number of desktops and well beyond what your mobile can do in real time.