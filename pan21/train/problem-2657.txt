In theory is possible to make "passive" monitor. That monitor application TCP data and ACK. and mean channel status as Ok when most Data has corresponding ACK. And only when Data is rare, use active test (ICMP ping, TCP ping).
What I would try is to capture some real traffic (ie. while actually using your application), and analyze it with WireShark, looking for the delay between some data sent and the corresponding ACK packet.  That gives you the round trip time (RTT) for your traffic.
The TCP stack has to keep track of the RTT for each connection. (it's used to optimize packet transmission and manage window size). If you're using Linux, and it's your own application, you can use the getsockopt(fd,.. ,TCP_INFO,...) the data returned includes all this internal parameters.  You could peek at this data every second and pipe to a display app.
I'm not sure if you're looking for a long-running monitor, or an application like ping for a one-off test. If you want to profile the TCP performance of a link, the classic tool is NetPIPE. NetPIPE can tell you throughput, and the latency of a two-way communication.
How do you define "how fast the packets get delivered" ?  If you want to know how much time it takes for a packet to reach point B from point A, then I think it can't be done without sub-millisecond accurate clock synchronization.