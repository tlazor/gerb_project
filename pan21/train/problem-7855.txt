You shouldn't need anything from java.sql unless you're using a relational database. java.util.Date would be more appropriate here (or nothing at all).
This line has trailing whitespace. If you can configure your IDE to automatically remove this, you will reduce the number of spurious changes which muddle revision control diffs.
Instead of going from 1 -> X and getting the last value, you could go from X -> 1 and get the first value found.
The name is not going to be very helpful in identifying the purpose of the class in six months' time, and there's no comment to say what the source of the challenge was either.
Actually iterating over objects is rarely the best way to count them. Iteration with filtering even less so. If you spend some time thinking through the mathematics before you start writing code, there's an easy way to tackle this problem by base conversion which takes about 20 milliseconds.
Variables should usually be in the narrowest scope possible. This means that static fields should be extremely rare.
It's best to be consistent in the use of language: either name all the variables in Portuguese or name them all in English.
Do not instantiate a new String. There's no point as you set the value again on the next line anyway.
I strongly suggest renaming your variables to be more descriptive (English). It'll make it easier to understand what your code is accomplishing.
Instead of using indexOf() you could use contains(), although you'll have to do some testing to see if it the performance is better.