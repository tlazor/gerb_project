Also keep in mind scale. A Windows server running 1280x1024 screen resolution at 32b color depth will consume 40MB of RAM just in maintaining the visible bitmap (the actual amount consumed by GDI will be different, but I'm not certain of how much). 40MB is, in my experience at least, a bit less than the RAM-price of running two PowerShell CLI windows simultaneously. 
The GUI-penalty for running servers is a lot less now than it was 10 years ago. So much so that I no longer reflexively turn it off when I'm setting up a new Linux server. If I am RAM constrained in a significant way (couldn't wrangle enough money out of higher management to do it right, or I'm in a RAM-constrained VM for some reason) then I'll disable the GUI as part of my optimizations.
And finally, hardware. Virtual Machines don't have graphics hardware and the graphics drivers tend to be a lot more homogeneous, take video-RAM right off the top, and generally use a lot LESS RAM than actual hardware. The problems you state are greatly reduced in a VM environment. 
Windows is another animal. I have seen various MMCs consume over 200MB of RAM while I'm doing things on the server console, which isn't peanuts. What's more, sometimes these management consoles can be real CPU pigs. It's for these reasons that whenever possible I run the management GUI somewhere else and remote connect to the server. 
Is there a technical reason for avoiding UI on Windows these days? A case can be made, but it is much weaker than it was back around 2001. A much bigger problem is the cost in UI tools not the UI itself.
As for scripting on Windows, remote-PowerShell is as low impact as you can get. The target server will still have to spin up a PowerShell scripting environment to run the thing, but that'll happen whether or not there is a text-box popping up on the console of the server. 