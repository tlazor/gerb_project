If they're not going to set up MySQL replication, then you're going to either be on your own, or charge you a fortune for it. I'm not familiar with MySQL replication (only MSSQL) but I'm guessing this is not a trivial task and needs to be undertaken by someone who knows what they're doing. If you're not going to be duplicating your SQL server, only your web server, then I fail to see how this is going to help your site.
? Wow. How? Every DBMS I've used can potentially lock during a backup - including Oracle and Sybase. Certainly locking is far less frequent with the more recent c-isam engines in MySQL - but it still exists.
My web host suggested a lower configuration server (Phenom Hexacore with 8GB RAM) but to take 3 servers + load balancer...they said that it would help in situations where there is a high amount of traffic and also help when one of the server fails, that there will be a backup server.
I disagree with Farseeker - mysql replication for the purposes of getting a consistent backup is very simple to set up (simple master-slave replication). It does seem a waste to not take advantage of the potential load-balancing capability - but combined with the backup reuirement, this would make the config rather complicated.
First things first: taking a backup makes your DB inaccessible? Either you've got a very poor backup solution, or you have serious I/O issues on the server. It's most likely I/O. I'd look at getting this fixed first of all. If you're on a VPS then your host might be able to assign raw LUN mappings to you, rather than giving you a virtual disk on a shared, abstracted LUN.
You seem to be arguing that the source of your performance problems is exclusively the load from the mysql server - while the proposed solution would handle the HTTP load more effecticely it seems to do nothing for the mysql problem. Are you sure that the DBMS is the cause of the problems when you're not doing backups?
You are mentioning a high amount of writes for a web application, are you sure its 65:35? If you have high MySQL-load, then your issue wouldn't be solved by extending the amount of servers, since you cannot distribute database writes in an easy manner without (usually) heavy modifications to your code.
I am not really sure, will my purpose of an upgrade even be achieved if I have 3 such servers and no mysql replication...they're not very clear on how they'd set it up. Any ideas on whether this is a good solution and what I could propose to them?
I think there's a lot of other avenues to look at first, before deciding to go down the load balancing path, especially if you're going to cluster SQL servers. There is one point that they got right though - if one server goes down, you do have instant failover (if your load balancer is configured correctly), but even if you don't have failover, you do have backups (hence the first point) so its probably not the end of the world.
Thirdly, you've not given us any details about the database, so this is just a stab in the dark, but perhaps there are places you can optimise inside your DB. An Opteron 2212 and 8Gb of RAM is not a slow system. We've got 400 concurrent users 18 hours a day hammering out over 500,000 requests a day on our portal resulting in 10s of millions of queries on a 30Gb database and it runs beautifully on a machine on similar spec. Well designed indexes can save you a lot of money, time and headaches.
On inquiring further they said that no mysql replication will be set up because they charge extra for that but will still be able to configure a set up which will meet my needs. 
I want to upgrade my server because of the high mysql loads causing slowness + whenever there were backup processes running on the DB, the DB would be inaccessible, so wanted some solution. My current server is an Opteron 2212 with 8GB RAM.