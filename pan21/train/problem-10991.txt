Once you do that, you will have an estimated probability for each and every wine, representing the classification model's estimation of that wine's price being positive or negative. Something like this:
I have a collection of 1000s of bottles of wine. I want to understand what could / likely to be driving the price either up or down. Below is an example of the data
Here this is rather easy but if this was extended by 1000s of rows with more categories added, the exercise becomes less easy to see the trend. 
My original thought would be to use the importance of a feature from a decision tree. But is there a better way?
Let's forget about decision trees, and go for ensemble of them, say random forest, for all the good reasons. (I highly recommend you to read why ensemble models uniformly beat the base learner, and how they help with the high bias - high variance problem base learners might have.)
Regarding how to code this, if you are using scikit, you can use this very easy and convenient tool:
What you are looking for is feature contributions to the final score of an observation having a positive or negative price. Feature importances from a decision tree or random forest is not going to help you because a feature's importance is fixed across all observations (wines). They tell a story about the overall model, but nothing about the individual observations. So if you want to know what caused a wine having a negative or positive price, you should look at feature contributions.
These probabilities actually consist of the summation of a bias term and the individual contributions of all features to that observation only:
Looks like all of your features are categorical. Just for a quick look. Try box blots of price for each variable by each category-class. If for some variable you start seeing a clear differences in the boxes (Hight of the box and the whiskers). That will help you claim that feature's importance analytically. Else doing a decision-tree and looking at feature importance seems like a good solution.
From these fictitious numbers i would assume the reason bottle A is up is because pinot is up but more importantly France is up V USA wine. To the same extent Chardonnay is doing poorly but USA again is doing worse than France. 
where $m$ is the total number of features. This is how you can analyze each and every feature's contribution on the final probability of a particulat wine's price being positive or negative.
The first step would be to label your dependent variable, price, as $1$ and $0$, depending on the price being positive and negative ($y = 1$ iff $price > 0$). After the typical exploratory analysis (where you can look at boxplots and stuff as a beginning study) and feature engineering, you can fit your random forest to predict a wine having a positive or negative price (i.e. $y$ being $1$ or $0$).