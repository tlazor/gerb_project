While I agree with not storing critical data directly inside the apache conf files here is a different idea.  Definitely, not passwords of any kind.
Thus apache would still have some configuration data available, and not start as a blank apache install.  Obviously the documentRoot folder is the most important.
If you have passwords used for remote authentication (ie authentication from your webserver to another server or service... such as a database) then you should consider replacing them with pre-shared public/private keys such as used for ssh authentication... not to mention encryption between remote servers (seriously, ssh tunnels, good stuff)... again, stored in files accessible only by the privileged user that starts Apache. And, honestly, Apache itself shouldn't be handling the task of authentication to another service...
Most systems automatically restart Apache and/or reload Apache configs for various reasons. For example, it's typically for Apache to be restarted when its log files are rotated. Many of these automated tasks are necessary for the proper operation of an Apache-based web server. You would have to automate the re-creation of the config files as well... meaning you'll have to store the passwords somewhere else, at which point you've defeated the purpose of deleting the config files.
Additionally, there are unplanned restarts... such as when apache2 crashes. Stable as it is, Apache is not bulletproof. The S.O.P. is to have some method in place to watch the Apache process and restart it automatically if it hangs or crashes. Many modern systems use systemd for this. Again, you can add automate reconstruction of the config files to the restart process... but doing so still defeats the purpose of deleting the config files to begin with.
As @djsmiley2k has said, Apache will continue operating without config files if the config files existed when it was started. And no, this is not a good solution, as he has said and you are aware.
Then migrate all the valuable data to a new .conf file. Now you only have 1 file to delete and re-establish.
The real solution here is to secure your sensitive data. Environment variables should be set by whatever tool you are using to manage the Apache process. Systemd (for example) provides tools for this. Passwords used for local authentication should be encrypted and stored in files only readable/writable by the user that Apache is run by (ie root) and especially not the one it reads files as (ie www-data).