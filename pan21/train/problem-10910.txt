What about using SMS or the new System Center Configuration Manager?  I can't afford to play with SCCM but from what I understand it is much easier to deploy / update software than SMS was.  It might be worth looking into anyways.
I've never used a third-party patch management tool, so I can't comment. Patch management tools that claim to automate the patching process have always given me a bit of pause. Tools that do "snapshotting" aren't actually capturing the logic in an installer, and could do the wrong thing under circumstances different than when the snapshot was taken. Tools that "silently install" patches often require the same amount of work that I'd put into writing a script to install the patch anyway. As such, I'm dubious of the effectiveness and reliablity of "patch management" tools over using software assignment, "Redeploy...", and hand-written scripts to deploy patches.
If when you say "manager", you're really after update caching, there's a free, open, passive plug-in to the linux-based firewall IPCop called Update Accelerator. You'll not only get your Adobe updates; you'll also get update caching for Apple, Avast, Linux (.deb and .rpm), Microsoft, Symantec, and Trend Micro if you want them. It also supports the ability to add custom sources.
If they do go to EXE-based updates, I'll write scripts to deploy them silently via computer startup scripts. (If you've got the money to pony-up for Microsoft's System Center Configuration Manager, you can use the built-in System Center Update Publisher to deploy these types of updates.)
I install Adobe Reader via Group Policy and software assignment. I've been applying MSP-based patches to my Adobe Reader installation points and then instructing client computers to reinstall via the "Redeploy..." functionality in Group Policy. I don't particularly like doing things this way, but it's the least labor-intensive method I can see.
Ultimately I think the best solution is to toss out the idea of 'patching' update and do a remove/re-install with each new update/version.  If you want to take the time to wrap the adobe installer as a MSI installer then you could deploy it using GPSI.
This recent Adobe Reader patch (9.1.2) is MSP-based, so I'm able to deploy it in my usual manner. If Adobe decides to start distributing EXE-based patches, then I've got a problem and have to begin writing scripts. (Hopefully they'll stick to a Windows Installer based patching regime from here on out. We'll see...)
Having the client computers download patches themselves via the built-in updater functionality in Adobe Reader is useless to me. I need to be able to centrally control the deployment of updates such that I can test the update prior to deployment. Users don't have "Administrator" rights on their computers and can't install any updates themselves anyway. I disable the updater as a transform to the MSI for Adobe Reader.
A branch of my organization has been using it for about a quarter with great results (and, may I add, much needed results, as there isn't a ton of bandwidth available to us in Africa). If you like the plug-in but could care less about IPCop, I would just implement IPCop with Update Accelerator, yet neuter the IPCop configuration to the point where it doesn't do anything except direct updates through Update Accelerator.