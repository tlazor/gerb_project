One thing you can do to troubleshoot what's going on is to use MD5 or SHA-1 hashes of that zip file.  I assume you have the original zip available to you offline.
Using Cygwin, you can compute a SHA-1 or MD5 hash of your zip file then publish the result.  Hashes are really cool because they can be used to verify to the bit level that one file is exactly the same as another.  For example:
If file on client side have correct size, this situation might be caused by faulty memory on client PC or faulty network equipment in between. Often random bit-switching is not especially apparent in many applications, but when it comes to checksums that are used to check archive integrity, every bit matter and those errors become obvious.
If I remember my ASCII right, there's only a single bit difference between the two strings but as you can see there's a huge difference in the resulting hashes.  Publishing an MD5 or SHA-1 hash is a very common thing to do in the software development world since it's a very good way to ensure that you're files aren't corrupted.  After publishing the MD5/SHA-1 hash, you could have your customers take a hash of the zip to see if it's actually corrupted or not.
There are plenty of utilities out there for Windows, Linux and Mac that will generate MD5 and SHA-1 hashes.  I use Cygwin because it's free.