If CommandLineTokenizer implements ICommandLineTokenizer, then it will automatically be registered as both CommandLineTokenizer and ICommandLineTokenizer. You shouldn't need to register types with parameters explicitly; AutoFac will look at the parameters and inject them automatically. Actually, you really shouldn't be registering types explicitly; I don't know the exact syntax, but you can register a whole assembly at once.
I can't say for sure without seeing the whole code, but I think this is violating the core principle of DI. You should never access the DI container anywhere except the composition root, which is where you resolve the startup class of your project and start doing the actual work. So, the registration code should be in the composition root where you do all your other registration, and you should just be able to inject an ICommandLineExecutor into whatever other constructors need it.
Finally, if you really do need a different container here, then what you do is inject an ILifetimeScope instance into your class and do something like:
AutoFac automatically resolves types as their interfaces, so the last part of this code is redundant: