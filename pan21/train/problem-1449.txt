Having said all that, usually game developers prefer the canvas, because a lot of video game programming is done with the output being a rectangular area, so someone who has a game already for other platforms can easily port it to an HTML5 canvas. If you only plan to make a game on javascript and no plans of porting it, you can use any technology that would work.
In programming, usually there is no should. Can you make it work with any other technology? Then feel free to use that. From my experience however, HTML and CSS behaviour is different from android to iOS. An experienced web developer can handle that and make a consistent experience in both platforms, but that's up to you.
If you want to. I've made a game in the past using only the canvas and custom javascript. It wasn't the best performance-wise because it wasn't using the GPU for accelerated graphics, but it was working.
Assuming you plan to wrap your game in an app, you'd need to create a minimal android project and an iOS project, that simply take javascript code and run it. If you simply plan to publish your game on a website that mobile users can also visit, you can skip this.
The HTML5 Canvas simply creates a rectangle in the screen, where you can draw custom graphics. It is usually preferred for games, because of the need to draw a lot of different elements, with complex animations.