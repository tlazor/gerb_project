The issue here is the ELB itself. Some time ago we did some performance testing and found out that the ELB starts having big latency when there are more then 250 requests/second. We found this out when testing the ELB, then doing these tests against one of the instances behind the ELB - the instance(a m1.large instance type) was doing fine(although had some load) with 250 requests/second, while the ELB with a few instances behind it was dying. At the same time, when testing the ELB the instances had little load.
My suggestion is to get an instance which will act as a load ballancer(configure nginx on it preferably for this) for the other instances and don't use any ELB.
Don't forget there may be other ways to increase the traffic your website can cope with. Eg. Varnish
Micro instances are not designed for sustained load. They allow bursting CPU, but after a short period of time (think 15-30 seconds) at heavy load they will be severely capped.
Micro instances weren't designed to sustain heavy load. They are for CPU bursting. I can assure you though that micro instances work fine with elastic load balances.
Check the load on the single servers. ELB does not balance equally the traffic to all instances when this is coming from a single IP (like in the AB test case): it just switches from one instance to another. The final load then cannot be the double of a single instance, but on average it is in any case better than directing all the traffic to one single instance (due to reduce load and faster response)
Make sure you haven't accidentally selected sticky load balancing. This would cause the same user to be directed to the same instance. 