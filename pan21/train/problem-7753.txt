It has been quite a while since I personally used replication, so I am not current on practical problems. A publisher with multiple subscribers is pretty common. However, Microsoft suggests using multiple Distribution databases when you have multiple Publishers.  The following post has direction: 
"However, if multiple Publishers use a single Distributor, consider creating a distribution database for each Publisher. Doing so ensures that the data flowing through each distribution database is distinct."
You can check the execution plan of the queries and verify that this index is actually being leveraged.
I just wanted to share what I did to work-around this problem in case someone else runs into it.  Once again, the fundamental issue is caused by simultaneous changes being made to multiple publications, which share the same distribution database.  After analyzing the code of the Microsoft queries, which are reported by the deadlock trace (see my original post above), I found out that MSsubscriptions table is missing an index, so I went ahead an added it: 
The index helps, but since I have to make changes to dozens of publications at once, it still was not enough.  So the second part of the fix was to simply introduce a random delay. I added up to 3 min delay to my deployment script and this scattered the queries enough to significantly lower probability of deadlocks (but not eliminate it completely :(