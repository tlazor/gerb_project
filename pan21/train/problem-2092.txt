Most likely it's a permissions problem on the new server.  Your SQL logins don't carry over automatically and if you manually create it on the new server it'll get a different SID which won't jive with the one that's granted access to the database.
One of the things that changed from 2000 to 2005 has to do with a new-in-2005 database-level permission called CONNECT.  In SQL Server 2000, being a user in a database also meant that you had access to the database.  However, in SQL Server 2005, being a user in a database is not enough by itself to grant a user access to it.  Normally you wouldn't even notice this since creating a user in SQL Server 2005, either through DDL or through the GUI, will automatically grant your user that CONNECT permission.  Is it possible you lost this during the upgrade somehow?
If you are certain that the user is not orphaned, I would either go into Permissions page of the Database properties through SSMS and verify that your problem user has a Grant for the CONNECT permission, or I would run the following query:
You won't have an issue with Windows-based logins as they are not associated back to the databases by a SID.  This is the case with SQL logins as does cause "orphaning" as a result.  Best bet is to use sp_help_revlogin as addressed (proactively) or use sp_change_users_login (reactively).  I used the following script I prepared all the time before discovering sp_help_revlogin years ago.  This still works:
This shouldn't be a problem for Windows logins as SQL gets the SID from Windows, although you'll still need to set up the Windows login on the new server.  sp_help_revlogin will handle this part for you as well.
Was it an upgrade or did you detach and reattach? If you detach and move the database to another server the users appear in the database, but they don't necessarily get the security hooks. You may need to either reset their permissions on the server, or delete the user and recreate it.
Best way is to use sp_help_revlogin (KB918992 in case the link ever dies) to generate a script of the logins on the old server and then run the script on the new server.  This procedure will carry over SID and password information to the new server effectively recreating the login on the new server.  Once this is done the permissions set up in your database should then be in sync with the login(s) on the new server.
I can recreate your issue by creating a login and mapping the login to a database, and then going to the database and issuing a REVOKE CONNECT TO username.  When I try to access that database through SSMS as username, I get the same error message, The database is not accessible.
If no rows are returned, then your user needs to have the CONNECT permission added back in order to access the database as expected.