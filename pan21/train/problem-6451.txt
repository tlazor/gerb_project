One way that combines authentication with key selection is that the clients chooses a random session key and encrypts it with the server's public key. If the server can decrypt it, it must have the corresponding private key, and therefor is the correct server, and know the session key the client selected. If it doesn't have the correct private key, it won't be able to decrypt the session key, and therefor not decrypt the data sent.
One flaw of this is that if the server private key gets known later, all previously recorded sessions can be decrypted. So a way to agree upon a session key that can not be discovered later is Diffie-Hellman key exchange. This is also called PFS.
The private key is never sent across the network, otherwise it would no longer be private. The private key of the server is used to authenticate the server, not to encrypt. For the actual encryption a session key is used, so the question remains how do client and server agree on a session key without making that known to an observer.