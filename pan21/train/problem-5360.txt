Another good point about this when developing is that if something goes haywire, you can just shutdown the system and bring it back up again and it will be clean and fresh.  Shared folders are automatically configured as well so you can drop anything you want into the root vagrant directory on the host and it will be located in /vagrant on the virtual machine.
I would strongly suggest you look at Vagrant.  It will do exactly what you I believe and it much easier to deal with.
Some of the advantages to this are you can add a script that will automatically run when you start vagrant, this can configure your environment how you choose and make sure it is always identical every time, Chef/Puppet/Ansible/? can be used as well to great effect.
If you don't feel like keeping a lot of virtual machines around, you have the ability to delete them and then when you need them again you could just download the box again and run the script.  
If you use a tool called packer, you can build the vagrant box and also other types as well including OVF, Digital Ocean, and AWS.  Racker is a great addition to packer as well.  At some point you may want to deploy and this will ensure the image that is being deployed will match 100% the image you have been working with, in fact Packer is what vagrant and a lot of other companies use to build vagrant boxes.