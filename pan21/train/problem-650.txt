The problem is sometimes the services stop working but continue to display a status of 'Running' in Windows service mgr. and if you use command line query of the service. It is only when you then proactively attempt to stop and restart the service that you realize the service is stopped as attempting to stop it from the Service mgr console times out and returns a generic 'Service is not responding in a timely manner.' message. You then have to kill the process thread it is running on to stop it.
So the service is still reported as running, but not delivering the normal functions that is should be.... Try using performance monitor to see if one of the process counters for this service goes out of whack when it stops operating normally. If you can find performance data to indicate the service is unhealthy:
I am support for an application that uses two Windows services to perform two very different tasks. One controls scheduled executions of a app, one runs continuously listening for HL7 messages being transmitted on a particular port.
Nagios Core is a free tool that can be used to monitor Windows services, and can automatically restart services that fail. They have a paid product as well (Nagios XI) that is great for larger environments.
I would suggest to set "automatic service restart" in Service properties or in case the needed service returns an event to event viewer. You can create a scheduled task, which will be triggered by specific event id and then restart the service.
Here's where you can find the pitch and download link: https://www.nagios.com/solutions/windows-service-monitoring/
Both of them have a propensity to fail. We have identified that failing connections to database servers, network shares and the like is the likely culprit of the failures and the services most times restart with no issue.
Apologies for the wordiness. Trying to balance as much information as useful vs spewing out the hours of putzing about I have spent working on this.
Two: Is it possible to use the default Windows service recovery options to do a scheduled restart of the service that would function through the time out and error message when attempting to stop the service if it were in the misreporting status state? 
One: Is there a way of monitoring services that would be able to return more information than just the reported status of the service? Open to third party options.