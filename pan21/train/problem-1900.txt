That leaves the third way, which wouldn't quite work perfectly, but would work "good enough" for very basic usage. Write a program to run in place of tty0 that executes a command, captures its output as text, and write that to the display. Something like the python subprocess command would do this. You'd read in a line of text, execute it as a command, capture the string output of running it, and then display that.
There are 3 ways to approach this. The first way would be to write a kernel driver for a frame-buffer device on the LCD display. This is prohibitively complex. The second way I know would be to create a terminal emulator program (emulating vt100 for example) and then have this launch in place of tty0. The keyboard input would go into the application, but the display would come up on the screen. This would probably be the best way to do it if the vt100 terminal protocol made any sense at all. Unfortunately, from when I looked into this it's miles and miles of spaghetti to me.