Take a look at http://www.opennicproject.org they specialize in custom TLDs. They have a lot of information about setting them up and all their domains are free to use. My favorite is .geek lol then .pirate :P
It all hinges on DNS. You have to make sure that the DNS name intranet gets resolved to an IP address. I know how to do this only one way: installing my own DHCP and DNS service for the infrastructure. Bonjour-style should work as well, but I have no experience doing it that way.
I'll assume the Apache server has the 192.168.13.1/24 IP address. I'd put an A record like s01.srv.example.corp. pointing at 192.168.13.1 and a CNAME like intranet.example.corp. pointing at s01.srv.example.corp. and if you need sub-sites I'd put in site.intranet.example.corp. as well, pointing at the full s01.srv DNS name.
This is how the short-names will work. Onwards to name-based virtual-hosting, like @Iain said. Let's assume your Apache's configuration says:
The technology you are after is name-based virtual hosting. You would typically configure your DNS server with an A or CNAME record that for each domain/subdomain that you want to serve that points to the address of your apache server.
The operating systems I know of support DNS suffixes, like .local or example.corp. You'll control the DHCP server on your network, correct? Lets assume it will give out addresses like 192.168.13.128, with a 255.255.255.0 network mask and most importantly, it will give out the address of a DNS server that knows how to answer authoritatively over the example.corp zone and it will say to the DHCP clients that their DNS domain is example.corp. Most operating systems will then try to access http://intranet.example.corp if you type http://intranet.