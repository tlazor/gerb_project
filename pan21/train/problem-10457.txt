If you do this, don't forget to turn off ASCII-armouring for gpg, otherwise your backup file will get 30% bigger than it should be.
I do that with my colo'ed box's backups, and can then happily store them on my colo's online storage, without endangering myself.  My colo'ed box doesn't need my private key, either - only the public one, to encrypt to.  I'd do the decryption at home if the need ever arose.
Why not use gpg locally to encrypt the dumps to yourself?  Then you can transfer them over HTTP, or over FTP, or post them on usenet, or do as you please, without imperiling your security (well, you probably shouldn't post them to alt.binaries).
Since you're already running apache, why not create a separated VirtualHost, a self-signed certificate and add basic auth to the directory where the database dumps are located? That should allow you to securely download database dump files faster. It maybe a workaround, but it should accomplish the goal. Two useful links are:
I had a similar problem, and eventually it turned out to be due to my ISP throttling (or otherwise messing with) traffic on non-standard ports. They apparently think that anything which isn't on ports 25/80/443 etc is file sharing and intentionally slow it down.
I suggest you try to switch ISP, or at first you can also try configuring the sshd to listen on port 443 (assuming you don't have a web server with SSL on that machine) and try this way.
Although normal http/https download speeds (via Apache file serving) are >>300kb/sec, when I use scp for downloading the dump I'm only getting around 30-50kb/sec speeds.