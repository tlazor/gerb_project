User1 must be a member of the group that is assigned to the group that has rwx (7, as in whatever for the user and other permission, but a 7 listed for the group permission).
Putting both users in the same group is not enough: by default, files are not group-writable unless explictly made so (with chmod g+w). To change the default permissions for most newly created files, add the line umask 002 to ~user1/.profile. Also many programs restrict files that should normally be kept private (password files, mailboxes, ...) to be readable only by the user; the umask has no effect on this.
Finally, giving user1 this direct access may not be the best method to solve the underlying problem. It may be more reasonable to give user2 access only to the files that actually need to be shared (either using a common group or using ACLs). Consider also giving user2 the permission to run programs as user1 through sudo (run visudo and add the line user1 ALL = (user2) ALL).
A way that will work most of the time is to use access control lists. First, make sure that the filesystem containing user2's home directory is mounted with the acl option (it's off by default on Ubuntu 10.04). Install the acl package. Then run the following commands (warning, typed directly into the browser) to give user1 all accesses to the files in user2's home directory and give this access by default to newly created files:
If user2 keeps files outside his home directory, apply this command to the other directories as well.