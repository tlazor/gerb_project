Each Exchange server with the Mailbox role installed can have one or more mailbox databases, so if you only need to split your database load, you will need to create a mailbox database on the new server and move some mailboxes to it; end of the story. Of course, this means that if a user has a mailbox on ServerA and ServerA goes down, there will be no fault tolerance; users whose mailboxes are on ServerB will be fine, but users with mailboxes on ServerA will not be able to access them.
As far as connecting to the server, that part is handled by the CAS (Client Access Server) role. Splitting out mailbox access across CAS roles can be tricky, but this guide has some ideas for you: MSExchange.org - Load Balancing CAS
You also need to take into account that Exchange is not only made by mailbox databases: in order for it to work, you will also need at least an operational server for each of the two other main roles, Hub Transport and Client Access. Hub Transport servers are automatically load balanced and redundant, so you will only need to install the role on the new server and everything will be fine. The same is not true for Client Access: other than installing the role, you will also need to create a Client Access Array in a load-balanced configuration, which needs to be handled at the IP level. Ordinarily you could to that using Windows' built-in Network Load Balancing service, but there's a caveat specific to a two-servers scenario like yours: a Database Availability Group relies on Failover clustering, which is not compatible with Network Load Balancing.
If you want redundancy, you will need a Database Availability Group; in a DAG, each mailbox database has one or more copies on different servers, only one of which is active at a given moment; if the server where the active copy of a mailbox database resides goes down, another copy will be made active and users will be automatically redirected to it. The down side of this is, you will at least need twice the disk space (because each database will have at least two copies), and some processing power of your servers will be used for data replication.
If you're trying to just separate out the databases without fault-tolerant replication, you can just install the mailbox role on the second server and move some mailboxes.
The end result of this is, if you want a fully-redundant setup, you will need two multi-role (Mailbox, Hub Transport, Client Access) servers, a Database Availability Group, a Client Access Array, and an external hardware load balancer, without which you would need to either give up redundancy for the databases or for the Client Access role.
DAG would be good, as long as you have the storage space to accommodate it. You're correct: in a 2-node DAG setup, both servers would have a full copy of both databases.