This question is impossible to answer, because you are (in essence) mixing metaphors.  The "tier" model is about distributing functions in an application, and has no relevance to the discussion about how to architect an Active Directory (aka AD) implementation.  So, in your scenario (separate hardware for AD), the actual answer is NONE. The separate AD domain controller will not be in any of the "tiers".
However, as noted by others, AD is  not the best choice for authentication alone and is almost certainly overkill, particularly for you since you don't know how to use it. If the number of users is going to be small and not change much, you can use local Windows authentication which is built into IIS.
AD is more complicated than it looks.  There is more to it than running setup.  Active Directory requires at least one "Domain Controller" (aka "DC"), which is a server running the "Active Directory services".  It is strongly advised that there be more than one DC in an AD implementation, so that the ability to login isn't lost if the one DC fails. Other servers in an Active Directory are known as "member servers". Additionally, there are some special services (aka "FSMO roles") which can only be activated on a single DC per domain or location. It is also strongly advised that Exchange, SQL Server, or any high-traffic application not be run on a DC, for performance and redundancy reasons.  It is also generally recommended that a DC not be exposed directly to the internet, because there are lots of services running and ports open on a DC.  Further, AD requires that it be the primary DNS for the domain.
That said, if AD is just going to authenticate users for a web application, there is no real problem having it on one of the existing servers.  I would choose the "app" tier server, because it is better not to have it on the web-facing server for security reasons, and better not to have it on the DB server for performance reasons.  