Function FindKthSmallestElement_BinarySearch's two arguments start1 and start2 should apply to multiple statements. 
It is Sunday Dec. 17, 2017, 10 months after I posted the question, I had a mock interview and then peer asked me to solve the algorithm Leetcode 4: median of two sorted array. So I shared my solution using the above code, but the peer sent an email to tell me that the code has bugs. 
I spent over 60 minutes to fix all the bugs using the code to solve Leetcode 4 algorithm. Here is the C# code to pass the Leetcode 4 online judge. 
And what may be that 'wrong' thing? We're not encapsulating our data. The fact that we have three variables with a suffix of 1 or 2 tells us that we could encapsulate those and save ourselves several parameters, since they're co-dependent.
This reminds me of the C/C++ days and when I did DirectX programming. Every single method had the parameters listed out like this because we didn't have the powerful Intellisense then, and it was easy to lay them out in headers like this to allow us to reference easily. But it's 2017, and this is C#, we don't need to lay things out like this, it should be a red flag that we're doing something wrong.
The start1 and start2 variable should be applied to the index value of the array in another four places. The comments are added starting from "bug fix", the variable's declaration of firstNode1, firstNode2, newStart variables. 
What I'm even more interested in is the fact that you wrote this algorithm so clearly that it's easy to follow and read. Personally, I think more people should take that page out of this playbook and write code for clarity first, then deal with whatever issues may arise.
The rest of it looks great. I won't comment on the algorithm, because I'm not an algorithms person, and it looks like it does what it wants.
The interesting thing here is we may get an increase in performance by making this array mutable, but at least it shortens our method prototype: