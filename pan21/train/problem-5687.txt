If your distribution does not support EFI-mode booting, you can add your own EFI boot loader to make it do so. See the parent of the preceding page, and particularly the sub-page of EFI boot loader installation, for background on how to do this. That page was not written specifically for people who want to make bootable USB drives, though, so you'll need to sift through some irrelevant information (like efibootmgr) and focus on using the fallback boot loader (EFI/BOOT/bootx64.efi, at least for x86-64 systems). Note also that, if your medium must support Secure Boot, you'll need to use Shim or PreLoader as bootx64.efi and GRUB (or some other boot loader) as the follow-on boot loader. If you want to boot a distribution that does not itself support Secure Boot, you'll need to sign grubx64.efi, at a minimum, and likely the kernel itself and its modules. Most of the major distributions, such as Ubuntu, Fedora, and OpenSUSE, support Secure Boot directly, so jumping through these extra hoops should not be necessary with them. Alternatively, you could disable Secure Boot in the firmware; Windows will continue to boot with this feature disabled. The trouble is that you'll then be missing out on Secure Boot's security benefits.
If you do enable the CSM and boot Linux in EFI mode, explicitly disabling Secure Boot might or might not be necessary, depending on the firmware's design. I've seen some that implicitly disable Secure Boot when doing BIOS/CSM/legacy-mode boots, but others require disabling Secure Boot before you can enable the CSM. Most systems make it possible to switch between BIOS-mode and EFI-mode booting on a per-boot basis, but you normally must access the firmware's boot manager to do so. My rEFInd boot manager can make this a little bit easier; by uncommenting the scanfor line in its refind.conf file and adding a suitable BIOS-mode option (biosexternal for USB drives), rEFInd can boot either EFI-mode or BIOS-mode OSes. Using rEFInd in this way might be worthwhile if you have a regular need to switch between an EFI-mode Windows installation on your hard disk and BIOS-mode OSes on USB flash drives.
I recommend against messing with firmware settings simply to boot a Linux USB drive. Most Linux distributions these days support booting in EFI/UEFI mode, although some tools for creating bootable USB drives omit the necessary EFI boot loaders. The appropriate approach is therefore to use a tool that supports writing EFI boot loaders to your USB drive. See this page of mine for more on this subject.