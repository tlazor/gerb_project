Graphics budgets tend to be the most important things to get right because they're the most expensive to revisit. Environments are harder than characters. 
1) Dead reckoning. Got someone on-staff who's written that kind of game before? Got someone who has really good instincts? Maybe they can tell you. If you're real lucky, their response will bear at least vague similarity to reality.
In time with experience you can better anticipate where stumbling blocks will occur. The more you work with an engine or hardware you get a feel for it's limitations and the relative cost of different features.
You aren't expected to know exactly how many resources will be allocated to each aspect of the game before you get started, although you should have a rough idea. But a team does expect you to be able to react intelligently to learning that some feature costs twice what was expected and that means it either needs to go away, be redesigned in a simpler fashion, or something else gets cut to make room. 
As a designer what you need to focus on is the priority of your features, and the minimum bar needed to pull each of them off. As you start prototyping and learning the various costs of certain mechanics, you'll use those priorities to figure out what gets cut back and what is axed completely. 
Don't concentrate on the nitty gritty reality of how many polys you can render per frame. Once you have a design that must be made into a game, you will be able to work with a programmer to write up what gets resources and what gets stripped.
There's a third, if you're using a well-established engine in a way that many other people have used that same engine, and not planning on doing anything fancy or out-of-the-ordinary:
As this question seems to be coming from a designer, my response would be: design isn't about numbers, it's about ideas.
If you want to see what other games are doing, I believe PIX will tell you what is going on (there's a windows version). Your have different limitations across different generations of cards as well.
Also, and maybe in line with what you're asking, I know the God of War guys give each designer a flexible budget for things like RAM, processing, etc. so they can choose what to emphasize for their levels. These are techniques and not solid numbers, but may be useful to you.
In my experience, and I'm probably doing it wrong, there is a lot of dead reckoning and adjustment with performance. AI too expensive? run it less often. UI? optimize and hack. etc. So the things that are hard to do this with you have to get right early.
As a designer, your role is to make the best usability model of the game problem. You must iterate through different control layouts or strategies, and try to mentally play through the game numerous times, trying out different progressions. Some designers I've worked with even wrote out paper versions of games they were developing just to see the flow better.
Real games have limited budgets, and programmers work with designers to provide information about what each feature costs. Poly counts and AI time are features that can be optimized so you can stretch a little, and normally, a programmer can provide an alternative solution that provides the effect the design requires without actually implementing the specified feature that a designer may have assumed was necessary.