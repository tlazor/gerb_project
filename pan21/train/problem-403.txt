There are pros and cons to both.  I'm biased; as a developer and entrepreneur, I went through the process you're going through, and I decided that it didn't make sense to front-load the effort and back-load all the benefits, so I started Cloudvox.
Cloudvox is free to sign up (as are SIP calls, like for testing), so I'd encourage deciding for yourself. help.cloudvox.com has more docs.
If you're looking to do that yourself, Lylix - or any dedicated server provider - is a viable solution.
It's pay-as-you-go cloud-scale Asterisk hosting.  Since we expose the same protocols (AGI, AMI, SIP), you can still use Adhearsion, PHP-AGI, Asterisk-Java, and other native Asterisk libraries, plus SIP phones and lightweight JSON HTTP scripts.
By that I mean the work required to run a telephony hosting environment.  Stuff like configuring and maintaining Asterisk and Linux (like the security note above), tweaking and/or licensing call-related features (ie, text-to-speech, g.729, conferencing muxing/audio latency, DTMF), choosing carriers, troubleshooting app problems, and maybe scaling it.
On the other hand, if you want Asterisk without most of the effort, Cloudvox may be a good fit.  Cloudvox lets you write and operate Asterisk phone call apps, associate SIP phones, send and receive SMSes, get realtime status via a self-service Web portal, and consume a simple REST API for phone numbers and the like.  Your apps still run on your server, and they tell Cloudvox what the phone call should do (over the Internet).