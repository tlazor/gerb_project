I would consider a hybrid solution which could be achieved with OpenSolaris, SolarisExp 11, OpenIndiana, or Nexenta. Hybrid pool would be a lot less costly, and with a few thousand bucks worth of RAM, you will have your 150k+ IOPS with mostly normal spinning disks. At Nexenta we have many, many customers who do just exactly this. ZFS is a robust filesystem, and with enough RAM and/or SSDs for additional Read/Write caching you can have a very robust solution at a relatively low cost. With Nexenta Core, which is community, you get an 18TB at no cost at all. Of course, a new release of OpenIndiana would allow a lot of the same functionality. Add to this snapshots, cloning, replication usinf ZFS send/recv and you can build a SAN that will give any EMC a run for its money at a far lower cost. Lots of SSDs are nice, but there are other options, some not half-bad.
Doing all of this as a single server with expensive disks might not be the best answer. Given your budget and needs I would recommend looking at STF. It was designed as an image storage for one of the largest blogging services in Japan:
This second server, if filled with SSDs like the first one, might make it so it's almost cheaper to buy a centralized storage device that supports SSD, if it has no single points of failure. If, however, you keep your second server in synch using real hard drives, you can save a large chunk of change without affecting performance. Since most of the IO is reads, the load on the drives will be minimal except during times when the primary server is offline. This would allow you the financial flexibility to buy more than one replication target, and maybe even move some offsite in case of a site failure.
150k IOPS with 4k blocks is 585 Mb/s throughput. Make sure your controller and backplane can handle that. As for raid, remember that protection against SSD failures is all it'll buy you. A controller failure (or memory fault, processor outage, or failure of any other single point of failure on the server) will render your data unusable. Keeping another identical server around in synch would be needed to avoid downtime and potentially having to go back to tape.