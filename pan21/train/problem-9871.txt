For plug-ins, the disadvantages are similar.  One has to ensure that every WWW browser has the plug-in, and it is rarely the case that one plug-in is available for all kinds of WWW browsers on all platforms.
For nearly a decade, I used the first approach myself.  Its disadvantage is that WWW browser handling of PAC scripts is fairly dodgy, even today.  It's easy to make a script that won't work on all WWW browsers, the failure modes are atrocious (RealPlayer's in-built WWW browser hangs/crashes if presented with an incorrect PAC script, for example.) and the interactions between PAC scripts and the WWW browsing protection mechanisms employed by some anti-malware tools are often less than stellar.  Nonetheless, it's an approach that I can vouch from experience will work, as long as one is very careful, across a wide range of WWW browsers running on various platforms.
Setting up a DNS server is the next step when one wants to distribute a hosts file to multiple machines.  That is, after all, pretty much the reason that the DNS came about in the first place.  So a blinkered answer to your questionis "Yes.".  That's what one does to scale up serving such data to an entire LAN.
You could use OpenDNS. You can set the router to use its dns servers and on the Website you can add either their lists of sites to block or your own or both. Then also instead of a blank screen when one loads a blacklisted site, you can have a customized page.
I now use the second approach.  It has the advantages, compared to PAC scripts and plug-ins, of being entirely browser-neutral, and only requiring debugging in one place (rather than in multiple WWW browsers of different types, including all of the built-in WWW browsers in tools like media players, hypertext help systems, desktop gadgets, automatic software update tools, and so forth).  
Let's deal with some silliness first: No.  This isn't the 1950s.  Computers can run more than one server at once.  Many Unices have been happily doing that, including running their own fully fledged resolving proxy DNS servers, as standard — out of the box — since the 1980s.  Use the always-on computer that you say that you already have.
However, the DNS is the wrong tool for the job that you want to do.  I know that it may have seemed like a whizz-o idea to set up a hosts file with lots of names in it and block advertisements that way, but it's not scalable — as you've already discovered and as others discovered back in the 1980s — and (even if modified to use a content DNS server) it's not appropriate.  It's not granular enough, and it's a layering violation.
There are two choices of right approach, both of which operate at the HTTP layer and both of which have a finer granularity than entire domains: