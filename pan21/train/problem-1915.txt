I do not have full details of the application arch, but since it is all file based, I feel that a front-end needs to be written to handle this.  ( Note that I'm an application guy, not an admin.  I only play an admin on tv.....  I do know enough admin stuff to be extraordinarily dangerous, so no need to be TOO simplistic  ) 
I'd re-think the approach, and possibly isolate each client to a subdirectory that only they have permissions to.  You would then be able to isolate the client to that location only by sharing the client's specific directory level upwards...and they could browse all they want, because there is nothing else to see.  When they connect/log in, they only get access rights to "their directory"...it won't matter that there are other directories because they don't get access to them (lacking the correct privileges).
Sharing a specific directory (and no higher) in Windows is as simple as right-clicking the folder you want, clicking "Share", and adding users.
The problem with your setup (assuming I understand it correctly as "have all files in a single directory") is that a clever client can guess the filenames of other people, and gain access to their data, so it doesn't matter that they can't browse, it only matters that they can pick up any file by name, and that means other client's files.
basically, they know a filename and a location, so they can open it directly. ( assume they will be pasting the entire path\filename into the file / open  dialog.
In other words, obscurity does not imply security, only that it is out of sight, out of mind.  Someone with a little imagination will come along and see right through that.
My feeling is to put all these files behind an application front-end, give permissions to the (web) app, and remove all direct domain user access to the files.  Utilize app security.