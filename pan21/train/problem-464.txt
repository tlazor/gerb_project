Let's say your server is connected to Router A. When you're on Router A, and you connect to 192.168.0.x, you're connecting to a computer that's also connected to Router A - your server. When you're not on Router A - let's say you're on Router B instead - and you connect to 192.168.0.x, you're connecting to some computer that's connected to Router B - not your server. Your connection never even leaves Router B's network.
Because of this you need to connect to Router A's public IP, not your server's private IP. Then, you need to configure Router A to forward inbound traffic to your server. This effectively makes Router A's IP act as your server's IP for inbound traffic.
Note: I realize that explanation was not the greatest in terms of being easy to understand. Please let me know what I can do to improve it.
Why? Because (probably, AFAIK) your router has a public IP and each of the computers inside your network have a private IP. Your public IP looks like this: 71.32.87.80. It's pretty random, and changes occasionally. Your private IP looks like what you typed in your SSH command; it was assigned to your computer by your router when you connected. Every computer that uses a given router is assigned a private IP.
However, because traffic goes through your router, traffic acts as if it's come from your router, and hence, your public IP. This is why if a website uses logic based on IP addresses, every computer inside the network will look the same. This is also where the notion of private and public IPs came from: your public IP is the one everyone sees. No one except your router sees your private IP.
Based on your comment, you are using ssh [user]@192.168.0.[some number]. This will only work if you're connected to the same network.
tl;dr: you need to configure port forwarding on your router, or set your SSH server outside the DMZ, or something like that. Then, use your router's IP address instead of your server's.