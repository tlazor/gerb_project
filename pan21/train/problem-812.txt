Did there happen to be a Domain Controller being shut down when this happened? This looks remarkably similar to the scenario described in this article: 
The solution proposed in this article is to stop the netlogon service on the Domain Controller before shutting the server down. This makes it unavailable for authentications before it enters the shutdown state and forces the client to find a new DC.
I'm pretty sure it was coming from RDP connections over the internet without network level authentication.
I had the same type of events on a server. There were hundreds of login attempts with different user names but no process ID or IP address visible.
For Windows Server 2008 or equivalent, you should disable NTLM logins and only allow NTLM2 logins. On Windows Server 2008, there is no way to get the ip address of NTLM logins. Use secpol -> local policies -> security options -> network security restrict ntlm incoming ntlm traffic -> deny all accounts.
When Windows enters the shutdown state, it should tell new clients attempting to authenticate against the DC that they need to contact a different DC. In some cases, though, the DC will reply to the client that the user does not exist. This will cause repeated authentication failures until the domain controller eventually finishes shutting down and the client is forced to switch DCs.
The idea is simple: IDS monitors your server's security log for the suspicious logon failure events. Then it soft-locks the IP address(es), the attempt came from. You can also configure a hard lock when the attempts from the soft-locked IPs continue.
I would suggest to install a simple Intrusion Detection System (IDS). You may want to consider RDPGuard (commercial), IPBan, evlWatcher. Myself I use Cyberarms IDDS. This one is simple, has an friendly interface (requires .NET Framework 4.0 though).
Локальная политика безопасности -> Локальные политики -> Параметры безопасности -> Сетевая безопасность: ограничения NTLM: входящий трафик NTLM -> Запретить все учетные записи