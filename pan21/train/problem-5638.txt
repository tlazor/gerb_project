Assuming that you're asking this question in the interest of developing a game that doesn't do this, the modern technique is to data-drive your game engine.  This means leaving everything game-specific, like levels, entity definitions, or even rules, outside of the executable.  Usually you'd write them in a scripting (Lua, Python) or markup (XML, JSON) language, or a binary format that you release a tool for.
This is a double bonus, because while it allows modders to easily add new content, it also allows the developer (yes, you) to rapidly iterate the standard content.  If you're tweaking enemy health values through the native code, you need to recompile and reload the game every time you want to test them out.  If you data-drive, you can make the necessary changes on-the-fly (while testing the game).
Nah, not really.  Although much of their success rides on user-created content, Mojang has done nothing to actually enable modders to do their thing.  Because mods are basically just Java classes injected into the game code, it's very easy for an update to break everything.