If you turn off 'swapfile', (and with :set autoread) you can open the same file in multiple Vim instances in parallel. So have both your customized Vim, and a plain / different Vim open at the same time, and switch the instances (Alt + Tab) together with the people.
If you're willing to try something very new, and have a Python-enabled Vim, you could try installing the CoVim plugin to allow collaborative editing in Vim. That way both you and your coworker can edit the same file at the same time in different Vim instances.
Then you keep two Vim configs. Quit your Vim, start a new Vim instance for your coworker, and when they are done repeat to reopen your Vim.
You can combine this with session files to sync the opened files (or just use that with opening and closing Vim instances if you don't want to live without the safety net of swapfiles).
I've added a lot of small mappings to my vimrc that help me work, like noremap H ^ and inoremap jk <esc>. It's diverged enough from vanilla vim that other people at work have trouble coding on my computer. This has been making it harder to pair program with people and get help reviewing code. What I'd like is a way to quickly toggle on/off all of my custom mappings and switch between my vim config and a more 'conventional' one (like relative vs absolute numbering). What would be the best way to do this?
I think probably, it would be best to find a way to easily start where you left off when you exit and restart Vim. That could be sessions, some session handling plugin, persistent undo, custom mappings, a combination of all these, or something else.