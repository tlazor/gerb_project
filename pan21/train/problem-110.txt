I try to restrict a backup daemon's user (that needs root access to client machines) so that it can only use the one command it needs. Thus, in /etc/sudoers, I use
The only issue with argument lists that I'm aware of is when people try to combine an allowed command with attempting to exclude certain arguments using !.  For instance, allowing someone to rm as root but not letting them erase the entire system could be attempted with a command list like
I heard from a colleague that that method is no longer considered secure, but I could not find any details. Are there any security issues I need to be aware of?
Your clarifying comment makes your colleague's assertion sound like "I have a friend who has a friend who heard of a security hole in foo, but we don't know what it is" -- Security is something to take very seriously, but absent a known flaw we could be talking about someone acting on 5 year old information about security flaws in sudo and waving their arms...
You'll have to make sure that /backup/command is secured against shell-escapes and similar characters. A common pitfall is, for example, the presence of '\n' in filenames, which allows insertions of arbitrary lines into xargs input and similar stuff. Many backup solutions don't take high precautions to secure their inputs, so you'll maybe want to check the correctness of the backup script.
except that this wouldn't really solve the problem since the user could still run rm -fr / or rm -r -f / or rm -rf . while in the root directory, or rm -rf ../../../../../../.. and so on.