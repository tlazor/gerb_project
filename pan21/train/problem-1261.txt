However, it may ultimately be easier to just author the collision capsules directly into the mesh, tagged so you can process them appropriately during export/import. Authoring capsules in modelling tools is pretty easy, and this gives you the flexibility of making some special capsules that fit more loosely for special attacks, or the like.
Animations can include metadata for enabling or disabling particular collision capsules (or perhaps just specific collision responses) during the animation, if needed. You may need to export that as a sidecar file.
Basically, you're on a reasonable track. Both of your options are viable, although what I would prefer is probably closer to the second choice. And even if you do the first option you listed I'd recommend trying to do that computation when you export rather than when you load into the game, since it won't change between then and you'll save your users a bit of load time.
I'd generally suggest you store the bounding information in the mesh, not the animation, and just weight the bounding primitives similarly to the way you weight the bones. This means the animation can be reused on similar characters of different girth (thicker arms, for example) more easily.
If you just want reasonably accurate, tight-fitting oriented boxes/capsules/rectangles around the actual limbs and body of the character, it's probably reasonable to compute those boxes by processing the bounds of all vertices affected by a given bone ID (that is, all the vertices weighted to the forearm bone are used to compute the bounding capsule of the forearm in the mesh).