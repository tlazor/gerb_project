But if I add this brief comment before the same code, it greatly clarifies why I'm storing the timestamp as the Item. The comment takes the guesswork or assumptions out of the reading.
By using C:\Program Files\ as the test directory, it generated a list of over 9,035 folders. It took about 30 seconds to process all of them.
I think what you have in your code will largely work, though I would comment on a few of your habits that should be addressed to safeguard your code against future potential problems. My implementation of a sorted directory list is somewhat different though, so please stick with me to see if you feel the difference is worth it.
Your comment in this case only restates the VERY obvious fact that you're declaring variables here. That's unhelpful and unnecessary. But if you feel it's needed to clarify or help understand the code, adding a comment that describes "why" you need the following section is often helpful. For example, if I were to show you this section of code, you can easily see what is being done, but it's not exactly clear WHY:
I decided to use the Dir and FileDateTime built-in VBA functions in a recursive routine to build my Dictionary of folder information. Though I rarely use recursion, I think it applies well in this situation and makes for cleaner and more compact code. The routine uses a top-level Dictionary supplied by the original caller to populate an unsorted list of folders. This top-level Dictionary is built up at each level. But each time the routine is called, it uses a "local" Dictionary just to keep of list of ONLY those folders at this particular level. I thought it would get confusing to combine it all immediately into a single Dictionary.
The top-level calling routine makes it easy to call the GetFolderList routine. The sorting is something I leave to folks much smarter than I. So I created a separate module with the code from Jon Peltier, both the SortDictionary routine from this page, and the required QSortInPlace from this page. Reduces the sorting now to a single procedure call. 