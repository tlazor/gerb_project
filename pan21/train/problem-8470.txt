First thing is that main() returns int, but you never actually return anything. The standard thing to do is return 0 when your program ends successfully.
Your variable names could use some work. You should try to name your variables in such a way that if someone tried to read your code, without knowing what the program does, they would be able to figure it out fairly easily.
As the code may be changed to have bigger arrays by modifying ASIZE. I would make the user instructions reflect this automaically.
ASIZE - I could probably guess that this means "Array Size", but that doesn't tell me what this really represents in your program - the number of user input numbers. Something like NUM_USER_INPUTS would make this much clearer.
Your output could be clearer too. You should make it clear to the user what it is you're outputting assuming they've never seen your program before or the code. If some random person came along and used your program, they'd get asked to enter some numbers, then they'd be told about two arrays... what do these arrays mean? Maybe printing something like Input numbers: and Cumulative totals:. Another thing you could do to make it even nicer is do some output formatting so that the input numbers line up with the totals in columns. Try looking up how to do output formatting with printf into columns.
The user should provide the 8 double numbers for the program to set the cumulative totals in the second array.
array and array2 - If I didn't know what your program was for, it would take a while to figure out what these arrays are actually for. If you named them something like userInputs and cumulativeTotals, this would be clear without even having to read the rest of your code what the arrays are for.
cal - The most I would be able to say from this name is that it stores some calculation, which doesn't say much. What calculation does it store? How about cumulativeTotal? Combine this with the array name changes, and it's very clear that this single cumulativeTotal is getting added into the cumulativeTotals array - makes this much easier to follow.
For a beginner, your code is very good.  There are some issues, as others have indicated.  One extra issue is that you have repeated code.  That is usually a undesirable. You can extract the printing loop into a separate function and call that function twice.  You can also combine the first two loops so that the output array is computed as the input is read.  Below is an example. Even if you haven't covered functions yet, I think it is fairly self evident what this does.  Note also that I am not a fan of long variable names.  There is a balance to be struck between long descriptive names and short concise names.  The rule many people use is that the more local a variable is, the shorter its name may be.
Please tell me how bad is the code...in the book he said it's possible with either nested loop, or 1 loop
You don't need x (its really index1. As all the variables are tracking each other you don't need index2 as index1 is the same value each iteration (and allways do the increment in the for() loop.