However, I wonder what's wrong with HTTP as a file access protocol? Can't server B have it's own web server and serve its files for itself? Split your webapp so that the part that processes the files resides on server B?
I didn't read OP carefully enough. If "geographically separate locations" means long latency, both drbd and nfs may be suboptimal, depending on the exact use case. If there is more than a 50 ms latency between the two locations, I would try to use different web servers that both talk directly to the end user, if possible.
The short answer to your question would be NFS, I think. Alternatively, for a more fancy setup, you could have the two servers share a DRBD volume.
sshfs is what you're looking for.  http://fuse.sourceforge.net/sshfs.html  -- you can even use fstab entries to automount it on boot, or set it not to mount, but then you can just do mount /pre/defined/mount/point to mount it.  sshfs can be slow, but it's definitely secure.  It requires fuse to be active, either as a kernel module/compiled into kernel, or as a userspace program.