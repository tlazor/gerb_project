M. Vazquez-Abrams is quite right.  This is nothing to do with quotation marks making things that are already strings into strings, or some wrongheaded idea that = in bash's built-in [ command is anything other than a string comparison.  (Read ยง 6.4 of the Bash User Manual, people!)  It's everything to do with what happens to empty fields after field-splitting turns words into fields.
Of course, the empty string is not equal to the four-character string true, and the command's exit status is non-zero.
If the shell variable loop is empty or null, then $loop expands to an empty field.  After field splitting, empty fields are discarded.  Note that field splitting and the check for empty fields precedes quote removal.  So "$loop" expands to the field "", which is not empty and is thus not removed.  After quote removal it is then an empty field, that becomes an empty argument to the command.
The [ command requires its = operator to have two operands, fore and aft.  Anything else is a syntax error.  Since an empty field is removed, the sequence of wordsexpands to four fields