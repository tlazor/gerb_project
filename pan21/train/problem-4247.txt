Sequential numbers are tricky to coordinate across multiple sources of data. One option for coordinating is to assign a range of numbers to be used by each source. The Montr√©al office uses numbers under one billion, and the Paris office uses numbers starting at one billion. Such schemes have proved clumsy or failures in my experience.
UUIDs were invented for such purposes because they require no coordination between sources of data.  The original Version 1 UUIDs eliminate any practical chance of collisions. Even the entirely-random UUIDs will have no collisions for any limited number of records if generated with a quality random generator. 
By definition, "replication" means an exact copy. So the data type of your ID (primary key) columns is irrelevant. Whatever data is written into the master database gets written into the replicants be it integers, UUIDs, or text. Think "Xerox copies of each invoice as written", not "writing new fresh separate invoices".
If you are exchanging data between systems, or federating multiple database systems, then your primary key becomes a critical issue. 