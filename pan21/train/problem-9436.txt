This sort of comment is redundant.  And empty if-statements aren't particularly helpful, so just write:
The first thing I immediately notice is that your class has no instance methods and no properties.  It's nothing more than a collection of methods.  I have a hard time justifying this as a class.
And actually, Apple knows this.  UIAlertView and UIActionSheet are technically deprecated as of iOS8.  They've been replaced by a new class, UIAlertController.  I haven't actually used UIAlertController because well before it was available, I took the time to write my own class to handle this sort of stuff.  If I were you, I'd investigate UIAlertController and rewrite this code using that.
Two comments about this.  First of all, if this is a TableViewController subclass, it has a property, tableView, which is a reference to the table view that the controller controls.  So we don't need the first property.  When we need to update the table view we're controller, we can just reference it via: self.tableView.
Your profile base class would probably just have a dictionary property called profileInfo which is just an NSMutableDictionary.  But realistically, your other projects should be subclassing the MPProfile class and adding the necessary properties by hand (even if these properties are actually just stored in the profileInfo property of the base class since I can see you're writing to/from file).
Putting them into this common dictionary means the superclass implementation for reading/writing to file doesn't have to be messed with.  We can easily save the entire thing to file and re-instantiate the class using property list stuff if we're really lazy about it.  But with that said, we'll want to use the reverse domain thing for our dictionary keys so as to avoid name collisions on keys with multiple subclassing, etc.
The second comment is about _indexPathToDelete.  There's nothing wrong with this per se.  Given the default Apple UIAlertView, there's not too much of a better approach than this.  And we really want to have the user confirm before they delete something, so you're pretty much forced into this.  However...
This class, rather than being "ProfileTools" should just be a "Profile".  And included with the profile class are the tools we need to use it.
By default, table view's have 1 section.  We only need to implement this optional protocol method if we need multiple sections.  Otherwise, just don't include it at all.