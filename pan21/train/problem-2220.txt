You were correct in using ARP. Because you don't want to rely on the device telling you its on the network which is another way, you could do it yourself. ARP can facilitate that, and not only will it give you the mac address but it gives you the ip address they are using on the network as well. When you clear the arpcache, it will repopulate as needed. Meaning, it will only populate the cache with the addresses it has had to communicate with on the network.
So to re-cap, you can just keep clearing the arp cache as it will reliably repopulate as its needed for the TCP/IP protocol for the exchanging of packets betweent computers and routers etc. however it will just put a load on your network interface. Or in the app, have it detect when it connects to the company network and send a ping to your server on a different port than default icmp, have your server listen for said pings, and you can document everything you need. Or just have the app ping your server every so often. Just because the device doesn't accept pings, doesn't mean it can't send one.
A better solution, if you are going to know the mac addresses of the clients already, you could assign them static ip addresses in the network. This will solve your caching problem to an extent as the cache does periodically become stale. Which means the next time your network interface has to communicate with the device, it will do another lookup. Now, since you have the problem with Apple devices not pinging back, was going to suggest, you can always ping your networks broadcast. so for example, if your gateway is 192.168.1.1, the broadcast is 192.168.1.255 and if you sent a ping to that, all devices that accept pings will respond to you.