It is probably less irregular than you think. Wave propagation simply has a direction, time, a magnitude (amplitude), frequency, & some sort of dampening variable. In this case the direction is simply 90 degrees to the car's velocity. 
On DirectX 9 you have the vertex shader reading that texture and displacing the vertices of the water mesh based on the values in that texture.
Mystagogue: how does such a "water disturbance shader algorithm" account for continuous interaction with irregular shapes?
Knowing the point of entry into the pond and the car's speed & direction (velocity), the propagation is simply calculated.
On DirectX 11, where, as well as vertex shaders, you have geometry shaders that can create vertices, it is also subdividing the water mesh to add additional detail. And it's probably generating that detail based off information originally coming from the texture describing the wave (adding small ripples and turbulence and so on).
(It wouldn't surprise me if the pixel shader is also using the same texture, generated by the CPU, to figure out where to draw foam on the water's surface.)
To answer your base question - a vertex shader does not modify the vertices of the mesh that it is acting on. A vertex shader is basically a transformation function that the vertices pass through when they are drawn. So vertices of the original model cannot accumulate movement.
You have a texture (probably quite low resolution) that is generated each frame (or couple of frames) on the CPU that describes the waves that are moving through the water (probably height and velocity). Because it's on the CPU it can easily be accumulative.
I am not entirely sure, but in the video you linked of Dirt 2, I believe the water is handled by a 2d height-map height map simulation of the water, and then that data is used by tessellation shaders to make a high resolution 3d displacement of the water without using too much GPU or CPU time.
Other games do something similar but use vertex shaders. I have seen some games that use pre-baked animations for the ripples and stuff so they are not additive, and some games use the 2d height map fluid simulation.