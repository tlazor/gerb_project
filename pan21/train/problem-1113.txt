Another thought that comes to mind is having a clear escalation path in case of a future issue.  Do you have someone you can page should you need something done in a pinch?  Will they be monitoring the health of the system?  Can they have your team notified in case of application failure?  
as the service user.  For example, you may want to run vim as this user to modify configuration files.  If they want to be more restrictive take a look at the naming conventions of the configuration files.  Perhaps a rule that allows vim *.conf (or a more complex glob or globs).
Second, definitely include whatever is requried to stop and start the application.  Sounds like the vendor installs an init script, so that's probably all you need.  Also access to less any log files if they are stored in a system location such as /var/log and not readable by unprivileged users.
First, I like your initial approach of finding all executable files.  It seems that the vendor has a bad habit of marking everything executable, though.  I really hope there are not 2,801 binaries in the product!  You could probably pass all these files through file and see which are actually binaries, scripts, etc.  That should narrow the scope.