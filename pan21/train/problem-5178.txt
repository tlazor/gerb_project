So, if this is for getting perfectly timed images at a racetrack for a science documentary, you probably want to invest in some much more expensive equipment.  However, if 250-500 ms latency is at all feasible, you might be able to achieve that over wifi, although I think there will be some percentage of inconsistent shots.  Using some kind of direct radio signal might get this down to 100 ms -- but I think a requirement for anything less than that is a requirement for completely different, very specialized, hardware.
This is largely a constraint of the fact that the operating systems available for the pi are generally multi-tasking (as opposed to real-time).  
very fast moving objects, 1 ms is totally irrelevant:1 Consider an object moving 100 km/h * 1000 = 100000 m/h / 3600 = 27.777 m/s / 1000 = 2 cm/ms.
I have built a system to do exactly this.  I have a central Pi (called Pi0), with a bunch of slave Pi's (Pi2 - Pi12).  Pi0 is set up as a wireless AP, and all the slave Pi's connect to Pi0 as stations on the same wireless network.
That's not very feasible on a single pi sans networking, by which I mean, if you write a program to take a series of photographs spaced with millisecond granularity -- #1 at N, #2 at N + 1014 ms, #3 at N + 5135 ms, etc. -- this timing will fail badly.  You might be able to get them within 10-100 ms of the target, but again, this is with regard to one pi, no network.
When a photo is triggered, Pi0 uses a network broadcast to send out a single udp packet to the entire subnet (to port 6789), to the subnet broadcast address.  All of the slave Pi's are listening on that UDP port, so they all receive the trigger messages at the same time, and all take pictures.
However, before you go down the RTOS route, you might want to re-evaluate your requirements.  Unless you are taking pictures of 