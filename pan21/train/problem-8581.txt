Inner file diffs Most and particularly the big files are binary. It's hard to imagine a reliable patch algorithm for binary files if the file to be patched has a small change like, e.g., a different build time stamp. For text files on the other hand the old diff and patch algorithms applied by git would probably work well but it's probably not worth the effort.
Fedora developed 'delta rpms' to ship incremental package updates. Amusingly, because my computer has a fast network connection but a slow processor, these are actually install slower for me.
Package level Only transmit updated packages. This is already done. If you look at the download sizes of packages you see that most of them are really small. Thus this safes the most bandwidth.
Google Chrome invested a lot of smarts in developing incremental updates for Chrome binaries http://blog.chromium.org/2009/07/smaller-is-faster-and-safer-too.html . 
Summary: What could be done easily and reliably is already done. The rest is up to the package managers to make small packages to keep updates small.
Principally, it's technically hard for the developers. And bandwidth is cheap - or rather, the bill is footed by users.
Files within a package Transmit only changed files within a package. Package management is more than just copying files to fixed locations. There are configuration files which may have been automatically adapted to your system. There may be manual changes. It would be hard to reliably figure out the difference without uploading the installed files first.
Another problem would be that you don't know which old version will be updated. Users may have skipped intermediate updates. Of course, the package manager could request the server to send a diff to a certain version, but that would put a huge load on the server to generate diffs. I doubt the server maintainers would allow that.