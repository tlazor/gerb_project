You need to configure OpenSSH to use its internal SFTP subsystem.  This needs to be in /etc/ssh/sshd_config
If you still wish to proceed, the information you are looking for is called a 'chroot' and is very possible, but you probably won't find it looking in ftp documentation.  Start with this in Google:  chroot an FTP user
Notice the permissions for the user's home directory (/home/chroot) are NOT writable even by the owner (an account named chroot).  I have created an upload directory that allows modification as an example.  In this setup, the user chroot does NOT have write access to their own home directory.  This is intentional and required for sftp chroot.  Again, all parent directories must have similar permissions.
If you were to switch to ssh where you can use sftp, you can set up a chroot environment within about 5 minutes if you're aware of what needs to take place.  Read on to find out more!
The user's home directory MUST BE OWNED BY ROOT!  This is not optional.  Not only that, but it must also NOT be writable by any user EXCEPT root.  The home directory and ALL parent directories most have these same restrictions.
Quick, dirty. It isn't SFTP or FTPS or FTP over an SSH tunnel, but it is what I was asking for and it works really well.