If there is at least one file of the desired extension, then you can use egrep -ir.  find and xargs show their power with single flat (but very big) directories that grep fails on and extra qualifiers (for instance if you want to search for .inc, .php, and php3 files only).  But it loses quite a bit of convenience and speed in my experience.  For human written class declarations a big problem is going to be whitespace.  So use egrep instead of grep.  Also LC_ALL=C for extra speed.  For convenience, I often use:
Probably you want case insensitivity and whitespace tolerance, and grep will terminate if it doesn't find any instances of the desired file pattern in the current directory.  It needs to know where to start, as it were, and no files matched produces no starting path.
will search for class MyClass in all files in all sub folders, then only return the ones that have .php in them.
This can still match comments, such as // class myclass exists in file, but I find those to be small relatively, and they can be filtered out with ... | fgrep -v '//'
You can also include more complex file masks (for instance, to catch most .inc and .php files) on the egrep file pattern like so: