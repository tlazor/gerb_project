If I were presented with this problem, I suppose I would start out by compressing each file individually to a temporary location (or in memory, without writing them to disk), just so that I could get an approximate compressed size for each.  With that information, it would then be possible to decide which files should be grouped together by any of the standard approaches to the Knapsack Problem and create the actual zip files.
Add the files to the zip either by starting up winzip and adding or drag and drop into winzip or right click on the files and winzip 'add to zip...'
Doing it with compression - now there's the challenge.  You can't predict the size of the files after compression - all you could do is keep adding files to the zip in descending order of size until it exceeds 20MB and then remove the last file replacing it with a smaller one until it drops below 20MB. If you exhaust all the files and it's still >20MB then just drop the last file and move on to the next zip.
Assuming you have a scripting language available to you and you know how to use it, I would expect this approach to be fairly straightforward to automate; doing it manually would be quite tedious if you have more than a handful of files to deal with...
The trivial solution, of course, would be to simply zip each file independently, but that fails to reduce the file count any, so I suspect it would not be a satisfactory solution.
What you're proposing is essentially a variation of the Knapsack Problem, with the added twist that, due to file compression, you don't start off knowing how much of your 20MB "knapsack" each item will occupy.
I recently wrote a script to gather files into subdirectories not larger than 4.3GB for easy storage on DVD, but this was all uncompressed.
Letting zip do the splitting for you will be much easier to automate than trying to figure it out by yourself.  If your goal is 20MB zip files, you will have to estimate the compressed size of each file before adding it to the archive.  Is there a reason you don't want to just let zip do the splitting for you?  Here's how you'd do it with gnu zip: