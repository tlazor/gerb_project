Winskel's book, already mentioned, does a bit of both the aspects.  And, it is a good beginner's book.  An equally good, perhaps even better, book is the one I started with: Gordon's Denotational description of programming languages.  This was my first book on semantics, which I read soon after I finished my undergraduate work.  I have to say it gave me a firm grounding in semantics and I never had to wonder how denotational semantics differs from operational semantics or axiomatic semantics etc.  This book will remain my all-time favourite on denotational semantics.
I really enjoyed reading Winskel when I was taking the undergrad course on semantics. I can't tell if it's dated, though, since I don't do research in this field. A plus of Winskel is that you can find it translated in other languages than English. 
You will not find free drafts of these books, so if you have a restricted budget go for the "might" in Radu's answer.
For a further reading, more at a graduate level, I'd suggest John Mitchell's books Foundations for Programming Languages and Concepts in Programming Languages. If you read only the first chapters, I guess they also meet your requirement of conciseness.
I would divide the books on programming language semantics into two classes: those that focus on modelling programming language concepts and those that focus on the foundational aspects of semantics.  There is no reason a book can't do both.  But, usually, there is only so much you can put into a book, and the authors also have their own predispositions about what is important.
The best books on foundational aspects are Gunter's (which I regard as a graduate text book), and Mitchell's (which is good reference book to have on your bookshelf because it is quite comprehensive).
For a complete beginner studying operational semantics, I would suggest Programming Languages and Operational Semantics by Maribel Fern√°ndez. Everything is explained in a very simple manner which is easy to understand.