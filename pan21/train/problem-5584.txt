Very much a newbie on DB work, so appreciate your patience with a basic question.  I'm running SQL Server 2014 on my local machine, and I have a small table and a basic client application to test different approaches with.  I'm getting what appears to be a table lock during both INSERT INTO and UPDATE statements.  The client is an ASP.NET application with the following code:
I run this code, then from the management studio I run SELECT * FROM LAYOUTSv2.  During both cases when the client thread is paused (i.e. prior to commit/rollback) the SELECT query hangs until the commit/rollback occurs.  
The table has field LAYOUTS_key assigned as the primary key.  In the properties window it shows that it is unique and clustered, with page locks and row locks both allowed.  The lock escalation setting for the table is Disable...I've tried both the other available settings of Table and AUTO with no changes.  I've tried SELECT ... WITH (NOLOCK) and that returns a result immediately, but as is well-cautioned here and other places it's not what I should be doing.  I've tried putting the ROWLOCK hint on both the INSERT and UPDATE statements, but nothing has changed.  
The behavior I'm looking for is this:  prior to commit of an INSERT, queries from other threads read all rows except the one that's being INSERTed.  Prior to commit of an UPDATE queries from other threads read the starting version of the row being UPDATEed.  Is there any way I can do this?  If I need to provide other information to clarify my use case please let me know.  Thanks.