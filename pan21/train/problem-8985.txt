So when the range is written 1500-42 is does not mean 1500 minus 42, it means anything from 1500 to 42 bytes is valid. One the wire, this tagged frame could be as large as 1522 bytes ( if only one tag is used, or 1526 if two tags are used).
After a frame has been sent, there is an enforced silence on the wire which is called the inter frame gap. This is equivalent to a transmission of 12 bytes. This is also not counted or capture but if it were it would get us to 1538 bytes.  The only way to now get to 1542 from 1538 is to say that the frame is tagged (i.e. it does contain the 4 byte plan tag).  Phew, 1542 at last.
To get to this number, you need to consider how a frame can be sent on Ethernet. There is no clock on an Ethernet LAN, so a series of 1's and 0's are sent by the transmitter of a frame to set a clock. This is called the preamble. Not every listener will 'hear' all of the preamble, but most should hear some part of it. To signal the end of the preamble, one of the last 8 bits sent is flipped so that instead of 10101010 it becomes 10101011. This byte is called the Start of Frame Delimiter (SDF). This is not technically useful to capture off the wire, so the 7 bytes of the preamble and the 1 byte SDF are normally not counted but if they were our original 1518 would now be 1526. Still not 1542..
This is why the range is from 46 bytes ( add this to the two addresses and the type and the FCS and you get 64 bytes -   46+6+6+2+4=64).
It's all in the terminology.  A standard frame is 1518 bytes on the wire (as far as any capturing device is concerned). A tagged frame (single tag) is 1522 bytes on the wire. These take up 1538 bytes or 1542 bytes of transmission space on the wire.
take it like this a 2 way highway with a whole bunch of semis vs the same highway with a whole bunch of small smart cars which are both going to the same destination semis carry more payload but are slower and can congest easier smaller cars carry less but travel faster MSS is not the same as MTU either
If the frame is on a network which supports multiple vlans and you need to tag the frame with a vlan tag, then one extra field is added before the type field. This is 4 bytes.  This now means that the range of sizes for the payload can be reduced by 4 bytes at the bottom end and still have 64 bytes as a minimum. Hence the 42. (So 42+6+6+2+4 + 4 for the vlan tag = 64)  
This is made up of 6 bytes for each of the destination and source address, 2 bytes for the type field between 46 and 1500 bytes for the payload (in your case the entire IP packet with its IP header and UDP header) and 4 bytes for the FCS.