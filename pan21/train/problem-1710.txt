Complicated pseudo-solution on Win10 post-November-update; not really recommended but mostly functional: replace the MSHTML libraries with their EdgeHTML equivalents. This works... about as well as the earlier hack did for the previous build. Dev tools get a little screwed up and drag-and-drop stops working, but otherwise it mostly does the trick. Note that it does not change IE's user-agent string, which means that a lot of sites will still think you're using Trident instead of just testing what HTML/JS features your browser supports.
I have managed to create the symlink on Windows Server 2016 RTM, that lacks Edge on default, like Windows 10 Enterprise ltsb . I had to create it directly in System32, since mshtml.dll is missing from Program Files/Internet Explorer. But the browsing engine test pages showed Internet Explorer 11. Restored the previous version of the files and discovered that edgehtml.dll is a phantom dll, it is actually mshtml.dll renamed, I so this at version number, it was 11, instead of 14. This is why webpages so it as IE. Maybe this is why you failed in enabling edgehtml.dll in IE, because it seems to be completly absent.  You can try, if you want, to check to version of the file edgehtml.dll in Windows 10 Enterprise ltsb, on the Details tab, if it is so.