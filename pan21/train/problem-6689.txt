Note that, if you want protection against intentional modification (made by an attacker), you need a way to verify that the reference hash you obtained is correct and from a trusted source (e.g. signature via PGP or X.509 certificates for example). You may also need a better hash algorithm (e.g. SHA-1, SHA-256), as collisions attacks have been demonstrated against MD5.
Sometimes, files transferred may be corrupt, either intentionally by an attacker or due to a faulty connection.
Why do sites offer an MD5 hash of a file?  How does that help you verify the integrity/source of the file?  Wouldn't paying attention to your URL be enough security?
Cryptographic hash functions (such as MD5) are designed to change if there's a change in the original file. As such, you can detect such alterations.
It offers a defence against a possible man-in-the-middle attack. Suppose a malicious party had somehow been able to hijack the request for the file, but had not been able to alter the text of the web page itself. The MITM would be able to get you to download a different sequence of bytes, but would not be able to make the hash of his file match the hash quoted on the qweb page, that of the real file.