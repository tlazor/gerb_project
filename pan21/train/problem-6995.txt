I have a duplex printing emulation system written in bash.  It prints the odd pages first and then the even pages.  It needs to know if there's an odd page count so it can eject the last odd page that doesn't have a corresponding even side.  It also uses page counts for reporting purposes.
I didn't know how to do this correctly, so I wrote code that looks at the end and, if necessary, the beginning  of the postscript file searching for "%%Pages:" which is followed by a page count.  This works on almost everything except files printed by the Opera browser.
Postscript files tend to be rather large with a lot of non-human-readable content, so I haven't yet spent a lot of time pouring over the ones that come out of Opera.
The following Ghostscript command will reliably count the pages in your PostScript file -- but it can be rather slow, because it requires the file to be completely interpreted (run), as @afrazier already stated in a comment:
I found this little snippet somewhere, it will process the document very fast and print out the page count. This can help if exiftool do not print this meta-data information because the document was not generated correctly: