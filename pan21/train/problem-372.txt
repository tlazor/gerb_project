So it’s fairly odd, but the explanation seems to be that under some conditions, when using Segoe UI, Win 7 shows “☰” for “♡”, and this should be taken just as a strange symbol, different from the common rectangle, for “cannot show this character in the current font.”
The character encoding has to be consistent and unicode derived, like UTF-8, UCS-2 any localized encoding will 'break your heart'. This makes cool characters fall over constantly.
The strangest thing is that if i use the heart symbol beside another unusual symbol, such as one of these: ♞♣♢♦♨♫, it will display correctly as a heart; yet if I delete the symbol which is next to the heart it will revert to the 3 lines symbol. All of these other symbols display correctly when used alone.
When I test with your test string ♞♣♢♦♨♫ with ♡ inserted, namely ♞♣♢♡♦♨♫, then file rename shows only ♣ and ♦ property, others are substituted by small rectangles, the common way of indicating lack of glyphs. This is really the expected behavior. But if I delete the rectangle corresponding to ♢, then the next rectangle (for ♡) changes to ☰.
I can't get this character: ♡ to display properly in Windows Explorer, it instead shows up as a symbol of three lines, similar to this ☰.
Microsoft Sans Serif has that three-bar symbol at U+2661, while correct Unicode fonts have the heart there. Assuming you're not using Microsoft Sans Serif in the first place, Windows is most likely defaulting to Microsoft Sans Serif when you use U+2661 because that character doesn't exist in whatever font you are using. However, when you use another character nearby in the Unicode table, which Microsoft Sans Serif lacks for whatever reason, the system is switching to yet another font.
I can confirm that on Win 7, if you try to rename a file to ♡, then indeed the symbol is displayed like ☰. Win 7 uses Segoe UI in Windows Explorer, and Segoe UI lacks ♡, so this appears to be some odd font substitution. But none of the fonts in my system contains such a glyph for ♡.