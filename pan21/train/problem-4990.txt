But realistically, who writes C code today for non-mass-market products? I would consider Python code with Tornado, or a similar event-driven webserver in a high-level language to be a better match.
Choose between lighttpd and nginx for static content. Choose Apache with modules that do in-house fastcgi process management efficiently (mod_fcgid, mod_wsgi, mod_passenger) for generating the dynamic content.
nginx is the current favored choice. LigHTTPd still works fine, but is less actively developed nowadays. LiteSpeed is also a good choice, and may be the best if you want commercial support or a nicer GUI. All of these are very fast, raw speed will not be a meaningful competitive differentiator within this group of webservers.
If your talking about the fastest/easiest web server to setup, i'd point to HFS File Server .  It doesn't support anything but static content, but its SOOOO easy to use.
Hmnn, a custom extension module to nginx is the lowest overhead option. But writing modules in C / C++ is seriously time-consuming. OP says "any language acceptable", well, if that is so then nginx with a C extension, or maybe Apache with a C extension to benefit from Apache's richer set of modules and documentation.