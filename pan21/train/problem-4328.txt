But what your DevOps colleague was complaining about is the very nature of what makes DevOps challenging and difficult, especially when appointed the role of DevOps engineer, and not simply being a cultural mindset.
It sounds like a silo within a team; old habits die hard.  A coder may not feel comfortable spinning up and hardening a server, but in a pure devops model, they should have the tools to do so.  An ops person in a devops team shouldn't responsible for delivering infrastructure for the app itself, but they should provide some insight into what is needed and some guidance on how the app developers can do it themselves.  It's almost a meta-infrastructure model; ops engineers build infrastructure that can build infrastructure on demand when requested by the development team.
Lack of culture and management support is only one part of the equation. The other part is in my opinion that the detail DevOps knowledge often refers to complex contexts and it is important to have advice and reference to working examples.
This answer is just my unique perspective from experience, and may not be indicative of norms or best practice... 
Consultation, communication, and blending of responsibilities are all crucial to the success of a devops team.
Therefore - do not feel like a lone wolf; participate in DevOps communities like this one here or tool-specific groups and GitHub - the feeling is at least then you are not the only lone wolf ;-)
Expect him to contribute to the Dev effort if there are no Ops-like tasks to be done. Some DevOps I know seem to find database work a natural extension of their area of expertise, not sure if that can be generalized.
Personally, I like being a lone wolf, because I still make valuable contributions, but also get to set my own limits, whilst persuading others to help themselves, thereby helping me, breakdown IT silos.
Some silos remain intact, and that’s okay, it’s DevOps mission to work around that and try to make that silos as insignificant or invisible as possible.
So to make the DevOps engineer feel less like a lone wolf, invite him to teach the developers how to run the systems, while acknowledging that he is the expert how to design the infrastructure. 
My first thought is "why is the he the only person doing ops, on a dev team,  especially when he gets to work with loads of automation?".  I think there's an opportunity there to address the lone wolf syndrome; particularly in a dev environment, infrastructure-as-code provides a great framework for sharing the load.  Ops people should be experts in determining and defining infrastructure needs for application, but they should also be able to build a platform to let dev roles do as much as they can independently.
Get him involed in high-level architecture from the beginning, so that he can introduce the concerns of his specialty. (Before we had DevOps, our architecture drawings always glossed over "little things" like load balancers and redundant servers. Now such things are part of the very first sketches.) 
I see a lot of great answers here talking about DevOps as a culture, suggestions about how to work with management, and help defining the do’s-and-do-nots of a DevOps team or engineer. I think each of them is great, and really illustrative of many answer can be 100% right, and still be very different, or even completely ambiguous, from each other... That’s DevOps!
Expect the Devs to take some of the daily routine Ops tasks, both to build redundancy into the team and to spread the "drudge" jobs fairly. 
For me, DevOps means that the development and operation of a software system becomes the responsibility of one team, instead of separate dev and ops teams. This is a two-way street. The best teams are made up of "T-Shaped" people who are experts in one field and familiar with several related fields.
It’s possible your coworker may be realizing, or hasn’t yet realized, that he or she does not like being a DevOps engineer.