adduser is more user friendly and interactive than its back-end useradd. There's no difference in features provided.
The main advantage to adduser over useradd is dealing with system level users. With adduser the system level users account when created puts a user directory in home for the system user where useradd does not automatically. If you read the man they are essentially the same except for system level users and associated  home directories are automatic. adduser creates a /home/user directory automatically for system level users where there is not a provision in useradd, except if specified by -m option. The other readings I have come across generically state that UID and GUID are assigned by accepted conformal Debian standards in adduser.
As in the new systems they create "personal" groups, to remove the newly created user you would need to:
In a couple of Redhat instances I checked (4.9 from 2011 and 6.9 from 2017), adduser is simply an alias to useradd, not a Perl script. Here it is in Redhat 6.9:
Within raspian (I would need to check for other OSs), 'adduser USER' starts a dialog (TUI) while 'useradd USER' does NOT.
The way I remember that useradd is the 'correct' program is this: adding a user is just one operation in the CRUD spectrum. You also need 'modify' and 'delete' operations ('read' is presumably covered by viewing /etc/passwd). And so, the programs are named user* (useradd, usermod and userdel respectively). I suppose the alternative *user naming convention (adduser, moduser and deluser -- these don't exist) could also work. But it would be slightly more awkward (for a reason I cannot express clearly at the moment :)
Apparently, using adduser, once the dialog comes up, the full 'useradd' command is already executed. Even if you CTRL-C your user is there.
useradd is native binary compiled with the system. But, adduser is a perl script which uses useradd binary in back-end.