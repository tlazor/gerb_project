If you can share more information on what you're planning then obviously this might cause the answer to change accordingly.
Depending on the project the pi's might not be accessable/powered etc and so you'll have no way of having a user 'enter' the data at the time.
I was thinking about every PI being a TCP server, with webserver being a TCP client. Webserver will then connect to PI's TCP server, send him data and PI will answer with log files. Is this good way to solve my problem?
If I was you I'd have a central server which holds whatever data users have entered. As for which is the tcp 'server' and 'client' this doesn't matter, nor make sense. TCP doesn't have an understanding of servers and clients, it simply transports data from A to B and possibly from B -> A. In the first one, A is the 'server', and in the second one 'B' is the server.
I'm running webserver on Raspberry PI, and I'm planning to set multiple PI's on different locations. Those PI's will communicate with webserver via TCP connection (webserver will send them data that users enter (data will be different for each PI, PI's will send back log files). The biggest problem now is, which device should be client and which should be server? 