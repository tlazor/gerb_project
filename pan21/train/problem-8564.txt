You can even insert this script in the /etc/init.d/apache2 file. This way, when you do a service restart or reload (with service apache2 restart|reload), all files are updated in the DocumentRoot directory.
By "htdocs", do you mean the entire contents of your website?  If so, then the answer is "maybe" by using mod_cache+mod_disk_cache.  You'll need to run some kind of spider to crawl all your pages so that Apache loads them all into the cache, configure the expiration date for everything millions of seconds into the future, and turn on just about all of the options that apache warns against due to serving "stale" pages.  This isn't a perfect idea though... if there's any files the spider misses or if you add new files to your htdocs directory, people will be able to see them (and add them to the cache for everyone else) if they can figure out the URL.  You might be able to figure out how to use the security warning here to your advantage by allowing everyone to access the cache but not the actual site but I suspect that everyone else would consider trying to do that a "bug" rather than a "feature".  When you want to update the site, you'll have to erase all of the cached files and re-spider the site.
Without knowing what you're trying to do, I can only guess at better ideas. If you are just making changes to your website and don't want anyone to see them until you're done, then what you should do is have two different directories with a copy of your website.  The Apache configuration should point to one directory as DocumentRoot while you make changes in the other.  When you're done making changes, you edit the Apache configuration, point DocumentRoot to the other directory and restart Apache so the new site is live.
You set up your server so that the DocumentRoot and the FTP directory are different. Then you write a script which copies all the files located in the FTP directory to the DocumentRoot direcory.