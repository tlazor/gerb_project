The easiest way to handle the objects is to create them at the top at a random position.  Once you've done that add it to your collection.  Each update move the objects downward via the logic you prefer(as mentioned above), and when an object gets past the bottom of the screen, remove it from the collection.
Also I would recommend looking up information about various collection types for your language to see how they are used and what their limitations are.  You likely will want something dynamic that you can add to easily, but others may be able to call out specific implementation details.
Now this is by far not the most efficient solution, but it's a good starting point.  If you end up needing more efficiency, consider doing things like not removing from the collection and instead marking ones that pass the bottom as "dead".  That way when you go to make a new one, you can first see if you have a dead one to recycle.  
Remember though that everything in programming is a trade, the above example adds look-up time to creation while saving you on allocation and collection resizing.  Don't solve for problems you don't have.  
If all your objects are the same shape, all you have to do is pick a location to drop them from at the top of the screen and then lower them each update either by a fixed amount or by a velocity that increases via downward acceleration (gravity)