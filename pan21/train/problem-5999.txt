There is a lot more than just maintenance and Indexing in SQL Server. My suggestion would be to read up on any content posted by below sites ... (They are the best !!)
Once you have a handle on these, and you can work on SQL Server without having to use MS Access, using mainly types T-SQL, then you could move onto learning more about the basic DBA type tasks, such as:
Note: While most of the SQL 2005 Microsoft Certification courses have probably been discontinued, you can still use the available resources for SQL 2008 R2.  I might get shot for saying this, but SQL 2008 R2 is similar enough to SQL 2005 (in the context of what you want to learn) so that you could study 2008 R2 and still be OK.
For anyone starting with SQL Server, I would recommend to start with learning the basic building blocks first, before you get into the DBA type things.  
As you learn more about SQL Server you will discover (to your delight) a number of things you can do in SQL Server at the database level that you previously had to do in Access at the application level. Some examples include:
Stored Procedures: Somewhat similar to Access macros and those little VBA procedures (Subs) you built in Access to do "useful stuff", except that in SQL Server they are part of the database itself. So, you can write a Stored Procedure (SP) once and use it (almost) anywhere, even across applications that share the same database.
One of the best soluton for Maintenance is SQL Server Backup, Integrity Check, and Index and Statistics Maintenance
Maintenance: what are the most important (check database, reduce database, update statistics, rebuild etc)
Indexes - I don't know as much as I should, is there a good book/ blog etc that can teach me the basics upwards?
Lastly, check this training from SQLSkills -- one of the best offered. I personally have taken IE1 and IE2 and trust me.. You will feel the difference !
Microsoft's MSDN & Learning sites will have very useful lessons and tutorials for you.  I understand that it is not always clear where to begin, but if you roughly follow the above lists, you should be SQL-ing in no time.  
Don't get me wrong, I still think Access is an excellent tool when used appropriately, and should be given serious consideration as a way to 
I have started working with SQL Server Reporting recently, but it can be a pain to set up - for most business cases, getting Excel to retrieve data from a SQL Server Stored Procedure is often more flexible for managers.
Note: There is a plethora of information out there on the web with excellent Bad advice as well. So my advise would be to get educated from the people who have worked and are working with SQLServer on a day to day basis.
By working with SQLServer on a regular basis, you will feel the need to get more knowledge in different areas like Disaster Recovery, Performance Tuning, High Availability, Database Corruption, etc. 
Triggers: Procedures defined at the table-level to make stuff automatically happen whenever there is an INSERT/UPDATE/DELETE on the table.
Functions: These are somewhat analogous to the little VBA Functions you wrote in Access to incorporate into queries, except that SQL Server Functions, like SPs, are more tightly bound to the database. Also SQL Server Functions can be Scalar-valued (return a single scalar value) or Table-valued (return a rowset).
I could go on, but these are the things I remember discovering early on that got me "thinking in SQL Server".
Finally, even though you will be working with SQL Server 2005 I highly recommend that you get a copy of SQL Server 2008 (or 2012) Express for learning, mainly because of the IDE enhancements in SQL Server Management Studio (namely, auto-completion and interactive debugging). Just be aware of any newer (2008+) features you may encounter and don't rely on them for your production code. (Or, use them as bullet points for your pitch to upgrade from SQL Server 2005....)
Fun SQL tricks: There are lots of SQL features available in SQL Server that are not supported in Access (Jet/ACE) SQL. "Common Table Expressions" (CTEs) and "RANK and PARTITION" are the ones that gave me "'aha' moments" as I was getting started. 