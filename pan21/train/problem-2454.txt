If you simply copy files without asking the o/s to retain the permissions (usually a -p flag to 'cp') then the files that get copied are re-created on the target area owned by the user that issued the copy.  For example, if I (freudy) copied a file that was owned by Ahmed in /tmp to my home directory:
As already noted, the userid's and groupdid's are stored numerically in the /etc/passwd and /etc/group files. Copying files between systems (whilst preserving the file permissions) with different id's will result in the copies being 'owned' by different users.
Copying from source to target whilst preserving permissions will have any files that were apparently owned by 'testuser' on the source, appearing to be owned by 'rupert' on the target.  This is commonly a problem when restoring archive files (i.e. tar files) as tar stores id's in the same way as the o/s does. 
Unix file and group ownership is not coded with the names but with numeric ids within the filesystem. These are translated to the names with /etc/passwd and /etc/group. If you move a disk to another system and that system hast different names for those ids the owner will change. If the ids are not used at all, ownership will usually be displayed as the numeric ids. If you later add a user/group with that id, s/he will own the files.
this will create a new file owned by remoteuser. In order to copy a file to a new machine, you need to somehow get access to the new machine. This means you will have to log into the new machine with some kind of user name. Copying files means creating new ones on the new machine, these are data, not physical objects so you are not actually moving anything around. Since you will be creating new files, normal rules for file creation apply. 
Archiving files into tar on the source machine, and extracting on the target will demonstrate the username switch. 
Note, this is all on same machine to illustrate the point behind retaining permissions (ownership and file attributes).
This will depend on how the files are copied but almost certainly no. If, for example, you copy the files using scp: