2) If you want to force everyone to HTTPS you will need to do a redirect or a mod-rewrite. Apache will gladly host both HTTP and HTTPS content at the same time and for most people this is what they want. It can be a major PITA to get all the external resources you pull into your site to be HTTPS which will throw warning messages to your users if you use HTTPS on say your home page. If this is not a problem for you though then by all means use HTTPS everywhere. 
Setup your own self signed certificate for testing if you haven't already done so. http://www.akadia.com/services/ssh_test_certificate.html
Then I create /etc/httpd/conf/ssl.crt, /etc/httpd/conf/ssl.key, /etc/httpd/conf/ssl.csr folders. You could just as well put these in the existing /etc/pki/tls folder but I like keeping my website stuff seperate from any other CA stuff that may be going on on the server.  I put the key and the certificate and optionally the csr into the folders I created.  If there are any intermediate certificates I chain them togeter into one file and put it in the /etc/httpd/conf/ssl.crt folder as intermediate.pem.  
1) I have never seen or used SSLCertificateChainFile Im assuming its the intermediate certificate bundle which I would use SSLCACertificateFIle for.  
I normally keep the configuration for each virtual host in its own file under /etc/httpd/conf.d/vhosts/. (make sure your main apache configuration is set to read in any *.conf files from this folder).  So I may have a file called /etc/httpd/conf.d/vhosts/www.mysite.com.conf.  This file will contain two  directives one for port 80 and one for port 443.  If I want everyone to use SSL you could do a mod-rewrite like in this example. 
First I edit SSLCipherSuite and SSLProtocol in /etc/httpd/conf.d/ssl.conf to harden the install a bit.  
Try commenting out SSLCertificateChainFile and see if that helps. I run a lot of ssl enabled sites and i've never needed to use that file.
If you're running securesite.com on both port 80 and 443 then yes, you will need to do some type of redirect if you want to force clients to https. You can use a .htaccess file to direct certain pages, directories, or the entire site into using https.
Replace the []'s with <>'s even in pre tags it was trying to read them as html and not showing properly. 