This means, then, that your backend ELBs only need listeners on port 80, for HTTP requests.  (Or port 8080, or whatever port you want those backend ELBs to use.)
One suggestion I might add is that you create a separate "frontend-elb" security group, and a separate "backend-elb" security group.  The frontend ELB (and frontend nginx instance!) should use the "frontelb-elb" security group, and the backend ELBs (and backend webapp instances!) should all use the "backend-elb" security group.  The "frontend-elb" security group should allow incoming requests from anywhere (assuming, of course, that you want your services to be publicly available).  The "backend-elb" security group, though, should only allow incoming connections from the "frontend-elb" security group.  This will ensure that the only way to reach your webapps is through that frontend ELB, which in turn ensures that only HTTPS requests will reach your webapps.
Assuming the above is correct, then to ensure that only HTTPS enters that first/frontend EBL, you can configure that frontend ELB with an HTTPS listener on port 443.  That's it.
As for your first question, the requests coming out of the ELB to your backend server (the frontend nginx) will be HTTP.  You have to go out of your way to configure an ELB to use SSL for the backend connections.
As for your nginx proxy configuration, I think it looks OK.  I should point out, however, that AWS ELBs will automatically set the X-Forwarded-For (and X-Forwarded-Proto) headers; you may not need to set that explicitly in your nginx configuration.