The "empty string at the beginning of the line" is simply the non-content (that exists) before the first character of the line. The empty string at the end of the line, similarly, is the similar non-content found after the last character of the line. An empty string can be thought of as consisting of "empty string, empty string" whereas a string with some content can be thought of as "empty string, Hello world, empty string".
I'm sure most of us know that when we want that some regex matches with a string at the begin of the line we must use "^" ...
So "^H" would not match "\0abcd" (just as "^Z" would not match "abcd"), because "\0abcd" starts with the null character and not "H".  
A "null string" is not the same as a "null character". A null string is the empty string, "". The null character is a character with all bits set to 0. It can be represented in double quotes as \0, so the result of your dd command was "\0". The append then made it "\0Hello". This was not a null string. The pattern "^Hello" only matches lines that begin with "Hello", which yours did not, because it began with "\0", instead of "H".
A string in C is represented as a series of non-0 bytes followed by one or more 0 bytes which indicates string termination, but that is completely separate from "the empty string" in regular expression parlace and really largely an internal choice in the C programming language and standard library. Few other languages do it that way, but even so can represent empty strings.
Well the first thing I must confess didn't expected, before of Hello there are a null character, so why is it not matching?