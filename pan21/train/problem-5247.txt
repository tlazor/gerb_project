As I stated in the original question, we've just moved from an older server - Windows Server 2003/SQL Server 2000 - to a new one, that uses Windows Server 2008 R2 64-bit and SQL Server 2008 R2. I didn't set up the original server, and paid someone to migrate stuff to the new server, giving him the instructions, "Just set it up the way the old server was set up." Heh.
On the new server, when I loaded an ASP page that called a stored procedure, SQL server used all the processor allocated to it and just hung there and all websites were stalled, until I killed the process in SQL Server. After a bit of research, I found out the same thing happened - all websites stalled - when running any kind of an endless loop, even if SQL server was not involved, and that recycling the app pool would "fix" it.
The final solution was to separate most of the websites into their own application pools (duh), and adjust the timeout values for ASP according to what was appropriate for each website.
It all came down to assumptions/perceptions: The timeout on the old server was short enough, that when debugging something, I never realized the all of the websites were locked, because it was only for 15 or 20 seconds, then the page would timeout, I'd fix it and move on. When the timeout is set to 120 seconds, though, that's a whole different ball game. Since SQL Server was stalled, I thought it was a SQL Server issue, but it was hanging because the record and connection weren't closed because the page was stuck in a loop...so it only appeared that SQL server was part of the problem.
The old server was 9 years old, a dual Xeon processor machine with 1 GB of RAM. The original server was set up with two websites - our booking system and the company website - both using the same application pool. As websites were added over the years, they were added to the default app pool. With our resource issues, that was the best we could do. And at some point, someone must have set the timeout to be a very short value, probably because the server got a bit clogged at times.
The solution to this problem comes down to perceptions, when someone - like me - isn't really familiar with server management.
The new server has 32gb of RAM and a 4 core processor. But the consultant I hired did exactly as I asked - almost - and set everything up the way it was on the old server, including putting all of the websites into the same application pool. The one thing he did not do, apparently, was set the timeout to the shorter value that was the old server must have been set to.