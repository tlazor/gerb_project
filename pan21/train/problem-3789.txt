Well, if it needs to be a general solution for any IP-based application, then you're pretty much describing a VPN server. Every VPN connection establishes a tunnel which allows exchanging packets in both directions.
There are also application-specific relay services, which (unlike VPNs which carry arbitrary IP packets) only support specific protocols, such as only TCP, or even only HTTP. For example, multiplayer games often use a relay server. One generic protocol is TURN, but the program still needs to be written to use it; it cannot be simply bolted on.
(Alternatively, it might mean that your PPPoE connection doesn't actually go all the way to the ISP, but only to the building's own central router – which again only has one IP address and forces everyone in the building to share. Not usually called CGNAT, but it's nearly the same thing in the end.)
In either case, this behavior is not actually part of PPPoE in general – it is something specific to how your ISP configures its PPPoE service.
Most commercial VPN providers don't allow incoming connections (as they tend to be more privacy-focused), but some do sell such a service and can even provide a public IP address dedicated to your VPN connection. (Though it is often simpler to rent a generic VPS / cloud server and set up your own VPN on there.)
This usually means that your ISP doesn't have enough public IPs for all its customers (and/or finds this a good opportunity to charge you for a public IP address). As a result, your router is behind a second layer of NAT and shares the public address with other customers in the building – a practice known as Carrier-grade NAT.
Alternatively, If Minecraft only needs TCP, you can also use any SSH server as a relay (if you have administrator rights on it). Provided that the server is configured to allow it (GatewayPorts option), you can use the "Remote forward" feature in most SSH clients to configure a relay connection.