You can reuse the single image to form arbitrary animations by feeding a script to a function which copies the sprites:
The main reason why sprite-sheets are being used is to make the best use of power-of-two textures and to reduce draw-calls. Both things that are relevant if you use a 3D API like OpenGL or the new 3D API for flash. If you're planning to port the game to another platform (eg. iOS, Android or similar), then having sprite-sheets might come in handy, because these systems will benefit from the sprite-sheet approach.
In case of MovieClips, your approach of single images is going to be simpler, because there's no way to directly use sprite-sheets in flash, unless you create your game with an engine like flixel which directly supports sprite-sheets.
One possible way to do this is: sprite specification is 10px square, you have 100 frames, then you might create a 10 x 1000 px image, and reference the frames by the y-offset.
So in short: If you're sticking with flash and would like to animate your sprites using the flash timeline, then single images is the way to go. Using sprite-sheets would mean a paradigm change in how you animate things and you would have to write some code to parse the sprite-sheet information and for animation. It's up to you to decide if that's worth it. If it's for the file-size saving alone, I would certainly not do it.
You can save some memory by using sprite-sheets, because a good packer will ignore transparent pixels around a sprite and place the sprites as close together as possible. The benefit in file size is really marginal though.
Is this a WIN over flash sprites? No idea. But you certainly can have multiple sets of animations with a single sprite sheet.
The sprite sheet concept is to have a single image loaded into memory and then blit (copy) smaller portions of the image. Implementation is application dependent, but one would typically load a script file of some sort which lists the tile sprite size and offset for each "frame" of animation, and that list order can be arbitrary. So you don't create loops of animation frames, you create scripts of pixel offsets.