If it just attributes points to actions/outcomes, without any sense of motivating the user/player to do better, then it is not a game.
If an application uses a point system to encourage extended and more skillful interaction with the system, then it is a game.
This is where we end-up with this bastardized serious game that is neither one thing or another and is pretty no more useful than a text-book.
I see this as a false dichotomy, a mere semantic issue.  The only real difference between "game," "simulation" and "application" is the mindset of the person using it.  The only reason "gamification" even entered the vocabulary is because of one TED talk and marketing (a fuzzy science to many) people do love their sound bites and justifying budgets.
Game development is about crafting a fun and rewarding experience for the player by offering them understandable systems, and the means by which to manipulate that system towards a desired end. Fundamental to game mechanics is the concept of developing mastery over time. Then intrinsic joy of gaming comes in large degree from the reveling in the development of that mastery. You can't just bolt game mechanics onto software after the fact, they have to be integrated and designed into the user's experience.
The biggest problem in serious games at the moment is for more 'cognitive' tasks where the it is more difficult to tell whether the user has learned anything or not. Coupled with the fact that the clients don't fundamentally understand what a game is, and in what ways people can learn from it, we get these 'gamified' textbooks.
Serious games do quite well when the topic is to teach people how to drive a boat, how to fly a plane, etc. Note that these type of games work particularly well when the simulation is realistic (crashing and sinking for example) because the user needs to think that the simulation is realistic for them to believe they can, and actually, benefit from it.
A client can start off wanting a serious game, but will also want everything he's used to; pie charts, QA's and generally things that don't go well with games at all. This is probably due to the fact that the money that is put into a serious game is considered an investment, and people will want figures to justify that investment.
Current gamification is focused on extrinsic rewards that drive people to do otherwise unpleasant and inherently unrewarding tasks. It's like giving your dog a treat when he sits on command. Doing this never makes the task of sitting fun, but it makes it bearable enough because you know a reward is coming. 
I believe that the solution is for developers to find new and innovative game mechanics that will enable them to properly test the users' knowledge and give the client this information without having to actually ask a single question.
Serious games are typically constructed like traditional games, with a combination of understandable systems and the means to manipulate them towards a goal. However, this software is often designed with a mindset towards delivering the player an experience which can offer some type of off-line learning. So mechanics and systems that might be streamlined away from reality in a gaming context where fun is the primary goal, may be kept in place because the software's goal extends beyond second-to-second enjoyment.