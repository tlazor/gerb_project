All mainstream CMTS's support backward compatibility on configuration file versions, there are certainly benefits to using service flows, both for the ISP and the customers.
For DOCSIS 3.0 there is nothing new that can be provisioned in a configuration file since DOCSIS 3.0 was mostly about the introduction of bonding upstream and downstream channels for higher throughput potential (think 100Mbps or more), as well as other items that are configured in the CMTS only and must be supported by a DOCSIS 3.0 modem.
I have found that Perl has in CPAN very nice implementation of config file encoder/decoder written not as a single program, but as a library, works great :)
Usually when people distinguish cable modem config files as being "DOCSIS 1.0" or "DOCSIS 1.1", they are talking about whether the config file specifies Class of Service settings, or Service Flow settings, respectively. That's the only difference.
DOCSIS 1.1 config files are completely fine for DOCSIS 3 modems, and this is precisely what ISPs are doing. There isn't a different kind of config file for DOCSIS 3 (or DOCSIS 2 for that matter). In short, you do not need to make any major change to these config files just because you changed from DOCSIS 1.1 to 3.0, or from DOCSIS 2.0 to 3.0.
There are really 3 different versions of a DOCSIS configuration file. 1.0, 1.1 & 2.0, all are supported by the DOCSIS project compiler, which I have used extensively over the past 8 years.  
Is there any tool like that docsis project, witch will be able to generate bootfiles for docsis3.0 modems?
The difference between 1.x and 2.0 configuration files are as snacky indicated, DOCSIS 2.0 brought about the ability to support multiple service flows for upstream and downstream. These are generally used for assigning bandwidth and QOS priorities based on the type of traffic (using most of the same rules as a Cisco ACL). This allows an ISP to give a higher priority to services such as IP telephony and IP Video (usually thier own) and lower priorities for other services. Service Flows are not supported by a DOCSIS 1.x and therefore this is a DOCSIS 2.0 only feature, which a DOCSIS 3.0 + CMTS will recognize as a DOCSIS 2.0 configuration.
We have been using docsis project ( http://docsis.sourceforge.net/ ) for generating DOCSIS cablemodems compliant bootfiles, from templates, for docsis 1.0 and 1.1 devices, now we want to move one of ours CMTS to docsis 3.0