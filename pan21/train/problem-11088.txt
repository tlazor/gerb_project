The critical step in this case is selecting correctly what output do you want for your network (classification algorithm) and how do you want to associate that output to further insight of that classification. 
A network basically classifies an object based on the input parametersand outputs the predicted value. Putting a basic network generation, you can classify what car you are looking at based on 3 certain features: "motor size", "number of seats" and "country where the car was designed". From the network you can extract the model and production year (if enough data is provided)and predict what car you have. However, due to the method you are obtaining an output with smaller dimensionality than the input (usually N_output=1). 
If I'm understanding correctly you want to model a set of data (in a network form in this case) for which you give 5 input parameters and you get N objects as output of your model, with N>5.
The algorithm itself to create the network depends on the data and what output do you want. For example, in a basic KNN of the previous case, you select the output as a "compound weighed effect" of all the inputs that result in the network. 
I am plaining on training a network for body generation, i.e. given some specific measurement,(5 features)  the output will be the a set of vertices representing the obj of the bodies. I am wondering what kind of machine learning algorithm is best suited for this scenario.
However, you can associate certain information to that output. In the previous example it could be a technical datasheet of the car model the network outputs. This technical datasheet can contain many features that were not considered in the model (network), which result in N_output>N_input.