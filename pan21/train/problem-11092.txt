I am assuming that your request is ONLY for test lab use.  If so, in order to decrypt 802.11 packets, as you mention above - You must provide the SSID and the passphrase to the Wireshark application.  You MUST also capture the association process (basically all the initial management packets) when the stations associates to the Access Point in order to decrypt the packets.  If you've got an encrypted capture file and you have the SSID and the passphrase, your capture must include the association process.  You can also use savvius (https://www.savvius.com/).
Second, realize that each client, each time it reconnects, works with the AP to generate a new encryption key (the Pairwise Temporal Key or PTK) that's only used for that connection. So every client gets a new key every time it reconnects. These PTK's are generated from a combination of the WPA2 passphrase (PSK), plus some random numbers called nonces that the client and the AP generate when a client [re-]connects.
First, you'll need to know the WPA2 passphrase or PSK for the network. If you don't have that, you can't do anything.
Once you have the WPA2 passphrase / PSK for the network, and the nonces from the handshake for a given connection from a given client, you can do the AES-CCMP math to decrypt the traffic from that client session.
Let's say you have an 802.11 monitor-mode packet trace of an Wi-Fi network that was using WPA2-PSK, and you want to decrypt it manually without using Wireshark's feature.
The details of how AES-CCMP works is beyond the scope of a SuperUser question, but it is publicly documented in the 802.11 spec (freely downloadable from the IEEE) and in the AES documents that it references.
So to decrypt a given client's traffic for a given connection session, you need those nonces, so you need to look in your packet trace and see when the client connected, and find the EAPOL-key frames (the WPA2 handshake) from the beginning of the connection. Look in those frames, which will be in the clear, and get those nonces.