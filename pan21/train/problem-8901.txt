On top of that you also want to run it on multiple platforms for which a considerable proportion of this functionality is going to range from being completely different to having weird corner cases and gotchas that need to be handled.
Now, there's absolutely nothing wrong with supporting multiple platforms; it's a great thing, but your job right now is not to support multiple platforms, it's to learn the basics of how to build a game.  So focus on one thing at a time, assimilate it, then move onto to the next, because taking on all of this together is too much.
So, for the first game, pick a single platform, learn how to set things up properly and get them working on that.  Once you know how to handle input, timing, networking, whatever properly on a single platform, then you can go and port it.
Otherwise take the (IMO good) advice in the other answer and forget about the engine, use something like Unity that handles all of that stuff for you (somebody else has suffered so you don't have to) and focus on the game itself.
You're starting out, you want to make a first game, you're making the engine yourself, by definition you have no idea what you are doing.
You need to learn so so much; how to structure a game loop, how to handle timing, how to handle input, networking, sound, display, possibly networking, communication between a client and server, storing and update of game states.
Forget it.  You have enough to be getting on with in the first batch of stuff you need to learn.  Adding multiple platform support on top of that is going to spread yourself too thin.