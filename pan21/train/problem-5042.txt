This will raise it as the correct error and still print the string you're passing as the explanatory message.
A ternary expression is basically an expression that will return one of two values, based on a tested expression. In your case you can test if current == '/'. It seems backwards to use the negative case here, so I flipped it.
Avoid using file as a name. It's also the name of the builtin file constructor, so you're shadowing it by using it in your for loop.
The bare except in end is definitely a bad idea. It will ignore any error that possibly arises when trying to quit the FTP, and then just tell the user that it closed fine. This is a bad idea generally but especially if you're not closing connections correctly. For instance, if you had made a typo and just written self.fto.quit() then your except would be ignoring it, and you won't be indicating that it happened at all.
Don't use is or is not for string comparison. It will often work due to something known as string interning, but there are cases where it can fail. The keyword is allows you to check identity. This means you're trying to identify if two things are the same, not just that they're equal. This is best used with is None, or when trying to tell if two names refer to the same object. Strings aren't a good use case because though it will often produce correct results it is unreliable and context dependent. Instead just use == and !=.
You did a good job following the PEP, stylewise you're matching it for the most part. Though as Maxim pointed out you should use modern formatting. I have some small notes about things.
If the comment is supposed to mean something else... then what? It's not clear from context, so it's not doing its job.
This will use either the string '{}{}{}' or '{}{}/{}' depending on whether or not current == '/'. It's debatable whether or not this is clearer or more readable, but I think it's better for indicating what difference that result actually makes.