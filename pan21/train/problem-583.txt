How about playing the game on the top of some closed, finite 3d surface, such as a sphere or cube (or a noise function perturbed version of one of these to make it a more interesting generalized polyhedron).  This will give you the effect of wrapping around, which will make the inifnite chase scenario somewhat trickier for the players.  Having a 2D overview map would still have the popping off the one side and popping up on the other side issue, so perhaps a 3D map may be better: i.e., a simplified zoomed out overview of the 3D polyhedron model rendered with transparency.
Technically you can implement this just fine. However, since they lack complete battlefield overview, it will confuse the heck out of the players if their opponent pops out of/into existence. 
I'm currently prototyping a simple two-player adversarial game, where the players are able to move around and shoot at each other with cannons. I would like the playing area to feel essentially unbounded, but I don't want one of the players to be able to stall the game by just rushing away from his opponent.
Will this be enough to make this design work? Can it be made to work better with some tweaks? Is torus topology and third person perspective just a really bad idea?
The actual topology doesn't matter as much as your viewpoint on it.  You could pull exactly that old 2-D trick by making any 'view' on the world never be able to display an area larger than the world itself - so there's only ever one opponent (though you may be able to reach him by running in either of two directions) and no ghosts.  Mark the edges of vision (very far away) with a haze of grey if you must.
The standard solution to this dilemma in the 2D days was to introduce a torus topology: if a player leaves the screen from the top, they enter at the bottom. If they leave from the right, they enter from the left. I am looking for a workable analogon to this system for games played from a third-person perspective.