So, you can't just change the parameter and increase the number of collections for an existing database - that will still be at the old value.  The setting actually alters the size of the <dbname>.ns file when it is created - if that is already in existence (for an existing database), then it stays at its original size (default 16MiB) until you cause it to be recreated.
You could also look to clean up some of the collections in that database to give yourself some head room and time to sort it out.  Are you actually using all 24000 collections, can some be pruned?
If you are running a replica set, then the best way to cause that recreation to happen is to shutdown a secondary, make sure it will restart with the new nsSize parameter, and then wipe its data files and allow it to sync from scratch.  Since that will include creating a new .ns file it will pick up the setting and create the larger one.  Then repeat for all secondaries before finally stepping down the primary and doing it there.  Once complete you will have the setting on all nodes.
Neither of those options are going to be particularly quick, so hopefully this is a replica set and not a standalone instance. 
I have a mongodb database with a single (relatively big, around 130GB) collection, with 3 indexes, on which I'd like to do some profiling.
I have verified the nssize setting (I have nssize = 2047 in mongod.conf and I have checked the result of db.adminCommand( "getCmdLineOpts" )