When you want to find a file, you specify it by its "path".  The computer starts at the root of the path ("/"), finds the name of the first object in the path ("usr"), and then
However, it's safe to summarize that the "metadata" about a file (name, attributes, location on disk, etc) is stored in a reserved space not intended for file content called an inode. 
It seems, both from your original question and your follow-up questions, that you don't understand how filesystems work.
In most Unix-based file systems, the filename is stored as a name/inode lookup table in the "data" section of the directory containing the file (that is, the space on the disk where a normal file would store its data).
When you format a hard drive partition, it depends on the partition type/file system, but typically some of the space on the partition is reserved for things like file names and the directory structure. That is where the name lives.
Then there will be a "data" area.  For a "normal" file, the file's contents will be stored here.  In the case of a directory, what is stored here is a list of filenames (one name for each file contained inside that directory) and the inodes that each of those filenames refers to.
Many Unix-based file systems, for example, EXTFS and its derivatives, will logically divide a disk into multiple sections.  One section is the "inode table".  This area contains the "inodes".  Each inode refers to a specific file and will describe, for example, what type of file it is ("normal" file, directory, device, socket, etc), the owner, the permissions, and the section(s) of the "data" portion of the disk where the file's data can be located.
A "disk" is nothing but a very very long string of zeros and ones.  A computer must use a standard method of managing these zeros and ones, called a "filesystem".  There are many different types of filesystems on various types of computers -- FAT32, NTFS, EXTFS, ResierFS, and so no.  The choice of filesystem is critical to the relationship between the computer accessing the disk and the zeros and ones stored on the disk.  If a filesystem is formatted as an EXTFS, but the computer decides for some reason to use ResierFS to manage the disk, it will end in complete data corruption.
There's no correlation of a file being stored in a "directory" on disk. A filesystem is what's responsible to make it appear that there's an organizational structure of directories containing files, but underneath it all there's no real structure except metadata and addresses. 