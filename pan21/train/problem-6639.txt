It does memory monitoring and divides it into constituent parts.  There is almost zero configuration.  You install a daemon on each linux box and then designate one central box to record the RRDs.
Free ram is free ram and buffers are cached ram which can be reclaimed. Most of the monitoring tools I've used present this difference in an accumulative area graph which presents at least used, cached and inactive memory stacked under the 100% level and swap over these. The only way to have a correct knowledge of how server is performing is to view all of them.
If you only can graph a value I'll recomend to you graph the used memory, and consider 'free' the rest. Oh and i will recomend also switch monitoring tools. Even munin with the default config has a decent memory graph. 
Go and take a look at linuxatemyram.com. WUG is telling you what Linux thinks is used (used+buffers+cache). What you have decided to monitor (used/total) seems reasonable to me especially for a graph as it requires no knowledge of the system specifics.
Each exec script returns a few OIDs with things like the name of the script, the exit status, the return value, and so on. The unfortunate part is that the return value is a string and not an integer, so WUG has some problems graphing it (it still graphs it, but the real time graphs won't work). So in this case where we know the value will always be under 100, I set it to the exit status and then I poll that OID.
To monitor it in WUG create a custom SNMP performance monitor and monitor the OID of the exit status of that exec script. You can then create custom alerts and what not.
I've been using a custom bash script to retrieve the memory (Used / Total) and then converting it to a percentage.
I then use a custom SNMP counter to execute that script and return the value. In the snmpd.conf file, it looks like this: