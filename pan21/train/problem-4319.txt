This is not an ideal world however, so game-specific performance improvements may come from one or more of the following (not intended to be an exhaustive list):
Game developers push the bounds of GPUs. We can make an analogy to a game and a game engine. The more advanced the requirements of the game, the more advanced the game engine needs to be to support it. This is the same with graphics cards. 
PC GPU driver updates often cite improvements made to performance of specific, recently released games. Why is this game-specific updating needed? How do the game-specific changes interact with the game code?
Likely the reasoning behind including the specific games in the driver update release notes is PR. It not only shows that card manufacturer X is going to work really well with game Y, but it shows that game Y is going to be even better than it was before.
Game-specific drivers are part of a marketing effort by GPU manufacturers to try to get an edge over other GPU manufacturers.  If they can show better performance in popular games by having custom-tuned their drivers for those specific games, then (the theory goes) they attract more players of those games.
These updates may include bug fixes that the software guys found, or improvements the hardware guys have made to support the requirements of the software guys. You'll find this relationship all over.
It's important to note here that none of these should actually be "required".  So long as both the driver and the game's API usage are conformant, things should work.  But sometimes special-case tradeoffs to be able to extract max performance may be seen as appropriate.  I'll refrain from commenting on whether or not that's a good thing.
Computer games and GPU manufactures are good bed fellows. It's in their best interest to work together to improve the GPU, thereby improving the game. This is the classic software guys working with the hardware guys relationship. Both parties have something to add when it comes to designing the interface between software and hardware. That interface is the driver. 