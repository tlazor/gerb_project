Well, Mono is probably the most light-weight option, with the best system integration. It also has the highest risk of compatibility problems.
Mono would probably be the best option if the application can operate currently with the subset of the .Net framework that mono currently provides. If the application is not yours then this will not be a good way forward as you are unlikely to get support from your supplier unless they officially support mono. It would be a lighter-weight option than virtualisation though.
Try Mono first. If you cannot get it to work, you'll probably have to use virtualization. I've heard good things about Xen, but others are also good. It probably makes sense to try a virtualization solution you are already using, if there is one.
My gut reaction here is to use a VM solution despite the extra system resources that this may need. VMWare have a tool to migrate physical Windows machines to VMs which I have used successfully in the past (the only problem we had was the length of time it took to migrate a large machine and having to reactivate Windows afterwards), so this may be your path of least resistance.
At the very least that will tell you it won't work on Mono without changes. If you have access to the source code or you may be able to get it changed so that it will work, although that will incur a greater testing penalty.