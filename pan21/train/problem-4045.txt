dnsmasq provides various methods for aliasing addresses - it can convert internal addresses into external addresses (which I don't think is likely needed here).  It can act as a general resolver, or just as an authoritative server.  And, you can bind it to various interfaces or ports.  For example, we use dnsmasq on port 53 as a front end to our internal bind/named servers on 5353 to do various inserttions and translations.
You could probably set up your DNS server to use conditional forwarders, pointing at the other DNS servers, for the domains you want it to resolve.  This is not completely transparent, but it will pass the queries through and the results back.
The public-facing server also runs a DNS server. It should work as proxy for all the internal servers, aggregating their zones and translating the address to the public one.
This sounds like a job for dnsmasq ( http://www.thekelleys.org.uk/dnsmasq/doc.html ) which makes it easy to define authoritative servers for different domains.  For example, if example1.com DNS is on 192.168.1.2 you could tell dnsmasq --server=/example2.com/192.168.1.2.
There is one machine facing the Internet, with a static IP assigned, and a group of machines having only local addresses.
Each "private" machine runs a DNS server, each resolving a couple of domains. Let's say that we have something like this:
Is it possible to accomplish something like this, considering that I have no control over the "private" machines? They can be considered black boxes, that are not aware of the "proxy" server
It would be better if the world-facing DNS server was not also your gateway as you're risking exposure of your internal DNS data.  Why not host your external zone elsewhere, such as at your service provider?  If you can move the world-facing DNS server to a different box (or even a different network), the DNS server on the gateway should only listen on port 53 on the internal NIC.
Otherwise, you would have to configure a load balancer to inspect the queries and send them to the right server.  I don't know of any load balancer which would support this, though you could construct one with iptables and layer 7 filtering, using DNAT to redirect the queries and SNAT to "proxy" them.