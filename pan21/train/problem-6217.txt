You would expect the software to throw an error over an illegal port number but that is not necessarily the case; some software will happily accept whatever you hand it, resulting in very odd behavior.
I documented a similar incident back in the Feb 2002 issue of SysAdmin Magazine in "Increasing Reliability Through Forensic Operations" (copy) Ideally, these things  should never happen but between naive software and developers ignorant of the specifics of the underlying network (i.e. range of legitimate ports) one still needs to guard against such 'impossible' incidents. My preferred approach is to work with developers to make sure their code is ops-friendly but often ops and development aren't on the best of terms.
Here's the issue: The port number is an unsigned 16-bit value (0 - 65535) and in some situations, applications will accept larger numbers but only use the lower 16 bits. This has lead to baffling cases where a startup script specifies a port of (say) 90000 and the application is found listening on port 24464 (90000 mod 65536 = 24464)