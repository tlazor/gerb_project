To keep the integrity of those two servers, I'd like to make a third "Sandbox" server. It'd be another VM, copied from the "Staging" server. With this server she can experiment with code, try new things and not worry about making the Staging or the Production servers FUBAR.
I need some ideas on how our work flow compares to some others. We have a single developer that works on our marketing website and she knows how to code and that's about it (no source control experience, no command line.... nothing). In the past the developer has always edited everything directly on the server using Eclipse. Meaning, if she fat-fingered something and saved it, it was viewable to the world. 
Part of what is missing here is fundamentally how to manage and execute a release, and/or a formal change control mechanism.  I'm not suggesting that there be an actual application, but there should be a process that includes:  
The time window would be agreed-upon in advance, that typically precludes doing something at an obviously bad time.  (Who pushes code on Fridays?)  
So after dozens of "mishaps", I've been tasked with creating a new workflow that's more appropriate than just editing the files on the live server. Here's what I've got so far..
If she were to work directly on the SANDBOX server, but make the document root itself a working copy of the 'marketing' repository, then the only extra thing she has to worry about during her edit-refresh cycle is an occasional checkin. She'll soon be wondering how she did without VC. The value of tags and branches might be harder to get across. Make the deployment to STAGING and PRODUCTION as easy as possible by scripting them.
As could be expect from someone who's never used source control in their life and is used to editing the file, pushing ctrl+s to save, and then refreshing the browser, this is a nightmare. I'd love to find some middle ground, but having a hard time doing so if we're to keep the Sandbox/Staging/Production set up.
Ideally someone besides the developer or person executing the change would perform the validation, and a document or checklist describing the validation.  
Edit Code in new branch > sync to SANDBOX. Repeat until satisfied. Merge changes to Trunk, create a new a tag from trunk and sync to STAGING. Do a QA check. If everything looks ok, sync to PRODUCTION. (I'm very open to new ideas for this process)
When I proposed this plan, I got a lot of grumbling and moaning from multiple parties about how much work this creates for her. The flow would be:
I would be careful to not impede the process.  If they want to push code every day, the system should not be a barrier to getting things done.  