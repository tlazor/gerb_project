And that's it! Save the file, and just for fun try to comment out some lines in it - you'll see all the # comment characters are in column 1.
The first thing you need to do is install Package Control if you haven't already. Then, install PackageResourceViewer. Open the Command Palette, type prv to bring up the PackageResourceViewer: options, and choose PackageResourceViewer: Open Resource. Scroll down a bit, select Default, then scroll a little more and select comment.py to open the file in Sublime. You can now hit Esc to close the Command Palette. The first two function definitions look like so:
First, comment out all the lines of advance_to_first_non_white_space_on_line() except the final return statement:
If you're really adventurous, you can clone the file, rename it, and modify it to include logic to only indent like this with certain languages, but that's beyond the scope of this answer. Ask on Stack Overflow if you want to know how to do that.
Now, this obviously will change the behavior for all languages, not just Python, so be prepared for that. To undo the changes, just replace the two function definitions with those in the first code block above. Oh, to get to the file again, you don't need to go through PackageResourceViewer. Instead, select Preferences -> Browse Packages... (or Sublime Text -> Preferences -> Browse Packages... if you're on OS X) to open the Packages folder in your operating system's file manager (Windows Explorer, Finder, Nautilus, etc.). In Packages/Default you'll find comment.py, just as you changed it. If you want to go back to the way things were before, just delete that file and you'll be all set (the original is stored elsewhere, but is overridden when an identically-named file exists in Packages).
Doing this involves messing around with one of Sublime's core files. Don't continue if you're uncomfortable with that.
That being said, the changes you'll be making aren't that drastic, and are easily reversible. Don't worry, I'll make it easy.