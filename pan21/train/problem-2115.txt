Except, if some developer threw in varchar(max) it won't work. It happily would, however, on varchar(4000). If the data contained over 8000 characters, you would be stuck in varchar(max) and unable to perform online rebuild, which would be an operational issue the higher-ups would surely notice.
Just to give you one example, there is a useful feature called Online Index Rebuild, that is an enterprise-edition only feature.
Allow me to sidetrack a little; After a long period of use, indexes become fragmented and need to be rebuilt. However, the usual builds would cause significant locking on underlying tables and while the index is being rebuilt, the index is not usable, which makes queries dead in water on very large databases. It's not just "hmm..it's kinda slow", it is "2 seconds query takes 25 minutes!" kind of emergency. So, in a 24/7 system it's not an option. That's where online index rebuild comes into play; if you paid $25,000 or so for core license of the privilege of using the Enterprise Edition, you can magically rebuild index on a 24/7 system without impacting users.
Now, let me add a little bit of operational perspective that has a lot to do with your decision. Since you are currently on varchar(max) apprently there's no issue for you, but getting away from it has certain advantages in performance and operational capabilities.
If you are in a smaller shop with no dedicated DBA, provide more detail about the use of the table and operational requirements (Is it 24/7 with five-nines requirement? Is it clustered? How long is your service window? Current edition and future plans for edition changes?) and the community can give you better recommendations. I may be asking too much info, but then it's the sort of detail experienced DBAs count on to make the right call.
..and that is just one example. So my recommendation is to talk to production DBA in your organization and and ask them what they like and don't. Since you are currently running varchar(max) I take it that it's not an issue, but you can future-proof it by removing it. Although, you would be perfectly fine with the use of varchar(max) if the table is for infrequently accessed storage with no need for online index rebuild. This is the sort of call only your production DBA can make. 