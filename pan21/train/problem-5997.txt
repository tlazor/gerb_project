The result is similar to your description.  ARM becomes more complex and improves speed.  x64 reduces power consumption and becomes cheaper.  It is a process of incremental, market driven improvement.  Here's hoping they keep going.
All CPUs are a collection of trade-offs.  As technology advances, we learn what trades are more efficient.  Fundamentally the two concepts are diametrically opposed (expensive, complex and focused instructions vs. cheap, simple and general), but neither practical implementation (x64 or ARM) adheres strictly to these principles.
This question has bothered me for a while. I understand their difference in ISA, that x64 has more complicated instructions. However, I can't see the essential difference in their designs. I have looked into the diagram of cortex-A9, there is also out-of-order execution, branch prediction, speculative execution... Is this true: arm has lower power consumption, while used to have lower performance than x64; now it begins catching up on the performance, and still has the low-power merit? 