The transport layer is probably what you're talking about when you talk about "transmit[ting] data"; that's the layer, when you give it some bytes, will get them to the other end in the order you sent them without losing any of them. But once the bytes arrive at the other end, the receiver needs to know what to do with them. Save them to a file? Forward them as an email? Return a web page?
OSI model is not something which can be used to send/receive data. It is a model which can be used to build on a further higher level application.
Further, FTP needs to be secured. And thus, we integrate the SSH into FTP to get SFTP in order to have more secure data transmission.
That's where the application-level protocols come in: they determine how you format information between the two ends to get the job done that you want done. As Richard Huxton mentioned above, there will be various sequences of bytes that indicate a user wants to log in with a given name and password, that a directory listing is requested, that the following data should be written to a file with a given name, and so on.
The layers below the transport layer (layer 4 in OSI, TCP in the TCP/IP suite) handle sending data without reliable or in-order delivery. They generally vary between each other in how they handle addresses, e.g. IPv4 will have the actual end host as its destination address but Ethernet will have an intermediate router as its destination address.
The OSI Model is seven layer model of how you can build a networking system. The TCP/IP networks that we all use does not follow this model and roughly ends at the transport layer with higher-level concerns left to individual applications. So - there is no in-built standard encryption, character-set translation etc.
There are quite a few OSI specifications handling various services, and I studied some of them at university and encountered a few implementations shortly after. The fact of the matter is though that 99% of networking is done over TCP/IP nowadays, and a substantial chunk of that over HTTP/HTTPS so the OSI model is more useful as a way of thinking than a blueprint for applications.
Actually, all layers have the function of transmitting data. But they also have another important function that makes it more clear why they're separated: interpreting the data and taking the correct actions based on that.
Clearly none of these are covered by the transport layer. In the OSI model these are described in higher-level specifications (read up on FTAM).