Yes you can! Labels, e.g. :start, are a great way to use batch files. You can jump to them, goto start, or just use them as section comments. Take a look at this revised code. I added some labels, and answered your question. Instead of just running the command c:\backup.exe, the batch file jumps to the section labeled :backup. Which displays your message, and then executes the program.
There’s a few things to note. Instead of SET, I used the CHOICE command which is meant for this purpose. While it makes things slightly harder because it uses errorlevel, it provides better customization and control over the prompt, including default selection time-out and defaults to case-insensitive (which makes things much easier most of the time). Next, I used proper formatting and indentation to make the script more readable and maintainable. I did the same with the output, which makes the text and prompts easier to see in the console window. I also threw in a bit of error-detection where it will loop the menu and notice the EOFs; they are necessary because the shutdown command initiates shutdown and returns, even with the start, so you need to avoid falling through to the next “function” (you can actually call labels like functions, but that would unnecessarily complicate a simple menu like this).
I also recommend that you add the switch -f to your shutdown commands (shutdown -r -f -t 00). have you ever had to hit "End task" before your computer shut down? Well, the -f switch does that for you if you are not there to do it.
A variation, and (I think simpler and clearer) solution based on that of @emb1995. I have shortened for brevity. The solution assumes Windows 7 and command extensions enabled: