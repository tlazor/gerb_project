It's easy to think that setting the PreferredBackBufferWidth & Height to different resolutions will have the desired effect, but the resultant buffer is then squashed down to 480 x 800 for drawing on the phone screen (regardless of the device's resolution). As an example, in the WP8 720p emulator the game buffer is being squashed from 1280x720 to 480x800 and then stretched back up to 1280x720 so although it looks like it's working there, really it isn't (I have seen hints that the aspect ratio is kept, so there's a chance it's being squashed to 480x853 - see http://msdn.microsoft.com/en-us/library/windowsphone/develop/jj206974(v=vs.105).aspx - but you get the gist)
XNA for WP7 does not support multiple screen resolutions. As previously mentioned, you will have to move to MonoGame to implement this (in most cases, this is surprisingly easy).
If you do want to target WP7 as well as 8 then you can share the vast majority of your code between MonoGame and XNA. Uploading 2 .XAP files to the marketplace targeting the two operating systems will then provide a transparent system for delivering the two versions to different phone users. The marketplace will serve the XNA version to WP7 users, and the MonoGame version to WP8 users.
Unfortunately MS have stated they are ceasing future support for XNA and this includes upgrading it to work nicely with WP8. You could also not write code in native C++ for WP7, so MonoGame is not available for those devices.