I'd also add 'swapping' to the list of ErikA's results, though that is technically just a reason for very high I/O contention.
I have to admin a mysql server, and was hoping people could give a few of the top reasons a mysql server might stop responding?
MyISAM, the default storage engine, is especially vulnerable to this as it uses table-level locking instead of row-level locking that InnoDB uses.  It's theoretically possible to have row-level contention, but it's far, far less likely to have lock problems when running InnoDB than MyISAM.  I'd read up on table locking if I were you.  I think that's much more likely.
While I agree with everything that ErikA said - those are very much frequent reasons that MySQL will crash - I have to disagree that any of those are the most likely reason that a MySQL server might stop responding.  Rather than MySQL crashing, in my experience it is far more likely that you will encounter database contention which will cause everything to get locked up behind one long-running query.  This is especially likely when you are making long-length and/or complex reads on the same tables as are being written to.  
Vague question I know, but I'm looking to read up on preventative measures as a learning experience before I get some problems of my own.