Snippet to Resize Root Partition : parted -m "$ROOT_DEV" u s resizepart "$ROOT_PART_NUM" "$TARGET_END"
You can choose to use the default raspi-config provided resize script by including the package in your base image, or, you may choose to create your own script to package with your image, using the same approach to do whatever other first-boot configuration you wish. 
After: dwc_otg.lpm_enable=0 console=serial0,115200 console=tty1 root=PARTUUID=23668fa2-02 rootfstype=ext4 elevator=deadline fsck.repair=yes rootwait quiet splash plymouth.ignore-serial-consoles
You can't, or at least, you can't use a static image.  You could write a script to resize it dynamically depending on the size of the target medium.
Before: dwc_otg.lpm_enable=0 init=/usr/lib/raspi-config/init_resize.sh console=serial0,115200 console=tty1 root=PARTUUID=23668fa2-02 rootfstype=ext4 elevator=deadline fsck.repair=yes rootwait quiet splash plymouth.ignore-serial-consoles
The Raspbian Approach is as follows, I would duplicate this approach. raspi-config provides a resize script that uses parted (a command line utility) to resize the filesystem on boot. This script is located in /usr/lib/raspi-config/init_resize.sh
Use the package piclone, it's installed by default on the full Raspbian image. Great way to build, tweak, clean up and backup an installation.
A 16GB SD card with Raspbian can be striped to less than 8GB and then written to an 8GB SD card. I've got images down to 4GB and used a 4GB card to receive the backup clone. The card can then be read to an IMG file on a PC using Win32diskimager.