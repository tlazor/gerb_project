For example, you can know what sites they are connecting to because all HTTPS traffic through a web proxy uses the CONNECT method to initiate, which is the initial bit transmitted in the clear. This information can be used to help decide whether or not to allow a connection to continue.
If you whitelist, you'll have loads of false positives - banks you didn't think of, useful sites that require HTTPS to login or access, etc.
I'm not going to get into ethics here - maybe you want to do this on all sites you don't "know" the domain for... anyway, ethical issues aside:
You must NOT monitor the content of HTTPS traffic even if you can, using man-in-the-middle techniques. It will weaken the security of the entire thing and just destroy the point of using HTTPS in the first place. You can, however, monitor the HTTPS traffic externally.
You can also monitor the bandwidth usage of the HTTPS traffic. This can give you insight into whether they are using it to stream videos or they are using it for online transactions such as banking.
It is possible, definitely need to add bits for squid2, but AFAIK squid3 will do this out of the box. As will some commercial web filter vendors. MITM style attack is generally the only way.
The entire point of HTTPS traffic is that it's encrypted between the server and the end-user so no one else can snoop on it - including your filters. You won't be able to do any content filtering on it. The only HTTPS filtering you'll be able to do is blocking the SSL port to specific IP addresses.
This is something that needs to be addressed at a policy level, not a technical one. If someone's goofing off on porn sites at work and using proxies to get around your filters, HR should be smacking them on the hand and threatening termination if it continues.