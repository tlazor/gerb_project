If you have binary logging turned on then you can just recreate a table first if you have schema. Make sure you create schema while you have binlogs turned off. Or you can just skip for the session. Then you can replay the binlogs up until the last statement which was drop table itself. 
For future you may like to have a delayed slave something like 10-24 hours behind. You can create delayed slave using percona toolkit(pt-slave-delay)
Here's what I did.  In the mysql directory (for Ubuntu this is /var/lib/mysql, for Mac using Homebrew this is /usr/local/var/mysql), I found some files.  First I copied the myapp_development/ directory containing the particular schema into my local mysql directory.  Then I backed up my local ibdata1 and copied the server's ibdata1 into the mysql directory.  Killed mysqld.  (ps aux to find the PID, then kill PID).  Restarted mysql, it started in crash recovery mode.  Then fired up my local mysql client and generated a full dump of the tables I needed.
And, 15,000 rows representing weeks of work entering metadata we thought were gone forever, are saved!!
If not then you can restore using a backup dump if you have any. If you have csv files then you can do load data infile method to recover data. If you are recovering from mysqldump then you may consider restoring a single table from the dump file rather than restoring full database. If data size is too large then you may consider disabling keys before loading this will significantly increase restore process.