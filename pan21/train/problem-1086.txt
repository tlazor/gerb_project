You don't have dependency problems with Linux packages. The package knows what it needs and the package manager knows how to get any dependencies. And on Windows, a package is never self contained because any kind of program heavily depends on the system libraries.
Now if I would want to have two versions of the same piece of software, I could always opt to install it by hand (e.g. build it myself). With Linux I get to choose, with Windows I don't.
Here is one point that you forgot: What about updates? On Linux, you have one source for everything and one system update manager that knows about all your packages. On Windows, you have multiple "keep me up-to-date" task tray apps fighting for resources and many, many programs that you will have to update yourself.
Maybe you should look at Linux Mint.  The short way is to tell you that it's just not the *nix way.  Bundling everything easily leads to stagnancy and dependency on outdated versions of libraries, to say nothing of the size of the WinSxS folder (how many copies of the VC2003/5/8 runtimes do you think you have?).  It's certainly possible to do it the way you're suggesting (and a lot of packages you install yourself will, in fact, do just that in /usr/local), but the system package manager does not.
This is horrible nonsense on Windows and on Linux, how difficult is aptitude purge package? Not much I would say.
That would heavily depend on the program. Just try that with IE. And besides: why would you want to?
Do you really remove software on Windows by deleting its folder? Your registry must look like a bloated toad by now ;-) Those de-installers are there for a reason! With a package manager, that too is way easier than on Windows.
It's a one-stop-shop for application installation, and is certainly less complex than an installer, and it will install dependencies automatically.