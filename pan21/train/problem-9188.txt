The way it works is very efficient size-wise, by trying every combination of compression parameters you have a guarantee to find the better one.
Your best bet would be to use Optipng, there are links to GUIs projects for it on their homepage if you need one.
The drawback is that it will consume more cpu than other techniques because it compresses the same image multiple times to find the smallest one, without any assumption.
PNG compression is a lossless compression.  However, a caveat to this is that there will be times when compressing an image will not always yield the results you want (% compression ratio won't be that great).  In contrast to lossful compression (like JPG compression), where you will almost always get a filesize reduction (% compression ratio might be higher), but you actually lose image quality.
You should check if you PNG files do really need all the features PNG offers. If it doesn't have man colors, maybe you should switch from 24-bit color to a colortable? If you don't use alpha channel, turn it off. This can make them much smaller.
PNG compression works better for images that have large areas of flat color, like cartoons that are colored with simple color fill, as apposed to a painting which has many colors which look similar, but really aren't.
The cool factor here is that you can adjust the optimization level to spare CPU time at your convenience (-o level), in that case assumptions will be made but generally you will not gain anything at testing every possibility.