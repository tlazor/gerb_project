I then create a script on my game object called CommHub where I hook up all the component events to component functions. This works really well and I love it. I love having completely decoupled components and 1 central place to see how the communications between them are setup. It gives me a high level, while being functional, view of said game object and some game objects can have a lot of components.
My question is now entity to entity interaction and how to do that while keeping this idea of 100% decoupled components.
My components are 100% isolated. No component knows about anything outside of itself in any way. Components have functions that operate on it's internal state and events to inform what's happening to it's internal state.
For the zombie, it would determine the target entity id when an unknowingly hostile entity enters the aggressive radius of the zombie.  When the AI check detemines an entity has entered that space, it raises an event and sets the target on the StruggleComponent.  This causes the zombie to move to the target and start attacking.
Internally, the target entity may likely distribute that event to all its components allowing each component to handle that event as it needs to.  The most notable would be that the Health related component would reduce its HP by 25.
The way the player entity is notified of the attacks would be to use that target entity id to dispatch an event to that entity directly, like as follows:
In this case, the zombie used the target entity id to get the entity reference from the entity manager and then send it a direct event of an attack of 25 damage.
A system for communication between the entities is what I'm interested in talking about while any system still keeping with components not being aware of other components directly (ie. no component knowledge from within another component). I can't think of a good way to do it like I have with inter-entity components.
Say we have the player game object and a zombie game object. Each are made up of components. The high level idea is the zombie looks in a radius around itself for all entities and if one is the player it'll walk towards it. When in a certain range it'll start a struggle with the player. This is the first interaction between 2 entities. The zombie controller component is the one that checks if it's in range of the player (it's target found from the search component) and if so needs to communicate with the player to tell it to start a struggle with this zombie.