To pick an update frequency, you can disable all update functions and software, wait a significant amount of time (eg 24 hours, 1 week, etc.), and then manually trigger an update and observe the difference to see how many seconds (or minutes‽) it was off by. You can use that to determine a good interval that allows you to keep the system time correct without making excessive, unnecessary calls out to the time server.
You can use NTP software (or the built-in functionality depending on the OS) to update the time. If it supports custom servers, you can find plenty of them, including NIST's servers (they have their own atomic—caesium to be specific—clock and are the USA’s official time keeper). Even if the system clock isn’t perfect (and few are), you can simply configure your software to update the time more frequently (eg every hour or every 10 minutes, etc.)
The cellphone networks are not as highly synchronized as people seem to think. Cell phones do get their time from towers, but towers maintain their own clocks and may deviate by as much as 1-2 minutes at times from the network average. I believe towers do attempt to synchronize, but they don't seem to do it well. Look at your phone and a friends phone and you'll probably find that they show a time a few seconds off. I think this is because phones accelerate time at a limited rate to sync with each tower, in order to avoid there being an obvious jumping around of the time as you move.
Windows 7, by default, will synchronize it's time to time.windows.com (right click your clock, press Adjust Date/Time, and switch to the Internet Time tab to see this), which in turn synchronizes with the NIST (National Institute of Standards and Technology), maintainers of the "official time" in the US. You can synchronize to the NIST directly via the NIST Internet Time Service. time.nist.gov  is the best-known NIST-ITS server, but it's recommended against because high load makes it unreliable. Instead, use one of the other official servers listed at the NIST-ITS webpage. I use ntp-nist.ldsbc.edu (mirror provided by the LDS Business College) on the west coast and nist1.columbiacountyga.gov (Columbia County, GA government) on the east coast, because both are official NIST-ITS mirrors but are fairly obscure so load is low (= fast and reliable sync).
Other countries will have their own national official time, which is usually kept in good synchronization with NIST time (for example, I believe by diplomatic agreement the UK's standards agency works with the NIST to maintain exact synchronization across the ocean), but may vary somewhat.
Your exact reference depends on your exact application; the NIST-ITS provides a time that is official for US Government purposes and accepted as the standard by most industries. Other highly time-synchronized systems, though, might operate to a different standard. For example, the GPS system was initially synchronized to the USNO Reference Time, provided by the US Navy, which is standard amongst the armed forces and precisely synchronized with the NIST time. But, over time two differences have appeared: (1) the GPS time does not account for leap-seconds while the NIST/USNO time does, so GPS time is now 14 seconds behind, and (2) because time synchronization between GPS satellites is ad-hoc, it can acceptably deviate from the NIST/USNO time by severall hundred ns. I doubt times in the nanoseconds will matter in your application, but that 14 seconds is a pretty big difference that you'll need to compensate for if you choose to receive GPS time. Don't worry, the GPS system broadcasts the current offset. more details here.
On a more technical level, the NTP system should ensure a time accuracy well below one second (theoretical accuracy is apparently in the nanosecond range, but that requires a large pool of time sources).
If you want to get really interesting, the NIST does provide machine-readable radio broadcasts via their shortwave station WWV.  These broadcasts can be received throughout the US and much of the world. When you see "atomic" wall clocks and such they work by synchronizing to this signal.
there are lots of good free time servers, part of the NTP network. I don't know if Windows supports NTP, but any Unix system, including Mac OSX, ought to work with it.