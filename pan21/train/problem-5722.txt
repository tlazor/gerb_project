I'm calling Time.frameCount inside Update() and then immediately Debug.Break() to pause the simulation before Update() is finished. This of course happens (supposedly) on the very first frame, and yet Time.frameCount returns 1, as if one frame had already been rendered by at that point. Also, I'm calling Time.deltaTime the same way, on the first frame inside Update(), and it returns a value too, as if a previous frame had been rendered and took X milliseconds.
Update() is called during a frame. Time.frameCount counts the number of frames that have occurred. It's a count, not an index, so during frame zero (the first frame) the total number of frames (Time.frameCount) will be one.
There is no invisible first frame. It's typical to initialize "delta time" values with some reasonable small number for the first frame, because any values that are "technically correct" such as 0 or the time since you last launched the application are generally meaningless for the purposes of running the game simulation.
Considering Time.deltaTime returns the value of the "time it took to complete the last frame", and I'm calling it on the first frame and it's returning a value, is there an "invisible" first frame that Update() doesn't run on?