This is a perfect example of the Java Enum class. Take a look at https://docs.oracle.com/javase/tutorial/java/javaOO/enum.html, it's a good tutorial on how to use it. 
Your class gui extends JFrame, but it does not add new behavior to it. You just configure its content, but this can be done from "outside".
Almost all *Listener interfaces have only few methods to implement, usually only one. They are meant to be implemented as anonymous inner classes.
You should rather create a separate JFrame object in your main method pass that  as parameter to your classes and use this for configuration:
In most GUI code I've seen, you can create an init method and put all the initialization code in there. It helps to keep the constructor clean, but it's no big deals. It's what I'm mostly used too, but it's been a long time I've done any Swing related code.
There are plenty of good free to use IDE and tools. This goes in pair with the Java naming convention/ Java Style recommendation.
Take "David" for example, it does represent the same named font in all your case. You could then have a private static String DAVID = "David" to represent the font. 
I don't think you need to create the Font object every time, you may use an const Font object to reduce object creation. It's a small thing that not improve really but it could help in other cases.
This will go a long way to help you, at first glance, know what the variable is about. For the next person that read your code it will be easier too. 
This is a special case from your previous point. Since you hard-coded the action command names, if you change it at one place you have to remember to change it in other places. 
You should use an IDE or a tools to automatically correct any styling or indentation error. The spacing of your variables declarations are not correct and your indentation of your if-else are not correct either. 