The bad side I can think about is that if the tick rate is increased, it would affect the game logic. While having a base update rate and a multiplier(that can be applied to everything that is tied to tick rate) would probably fix this, I am not sure if this is a good approach.
If the need is simply to have a stable replay it's also possible to record the delta times along with the replay data to ensure the physics end up with the same rounding errors.
In the past I've done cooldowns as a specific time in ms, but I was thinking isn't having tick based cooldowns better. This would be more accurate and efficent(not sure).
And it's possible to mix both even if exact, reproducible game logic is needed: Use delta time for inconsequential things like particles & UI animations so long as they don't affect game logic.
Fixed tick-based logic update is useful when you need to easily insure game physic & logic is 100% reproducible as delta-time updates will cause different rounding errors depending on the time elapsed.
It depends on how the rest of your game runs. Either use ticks or time, but choose one and use it everywhere. I prefer using ticks, and setting a max framerate. If the game slows down, so be it. I don't want any quantum tunneling to happen. It's simpler, and i like it. But you could use delta time, and get different framerates with the same game speed. That's up to you to decide. But whatever you do, make the choice once, and use that in your entire game. If you add time based cooldowns in a tick based game and the game runs slow, the cooldowns are suddenly relatively shorter than they're supposed to be, and vice versa.
Delta time ensures that the correct amount of actual time is perceived by the game logic, usually delta time is handled in ms.
Anything that can affect the fundamental outcome of the game in this manner should be based on delta times.
You can still use delta-times with tick-based updates for calculating the number of ticks for convenience.