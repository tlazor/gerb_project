The server-side authorized_keys file can supply a "COMMAND=" argument which means "If someone used this key, ignore the command that would have executed on the server and run this command instead."  This command is given all the flags and options that the default command would have received.  You can supply a command that removes flags that you don't want and then runs the expected command.  An article about something similar is here: https://cybermashup.com/2013/05/14/restrict-ssh-logins-to-a-single-command/
The problem with this answer is that I'm not sure if the "-t" flag is communicated this way, or is it in the RSYNC protocol.
I've tried googling, but I can't seem to provide the right constellation of terms to weed out all the articles/questions by people trying to use rsync from the client side.
I run a server on which we provide sftp credentials to clients for delivery of files of various size.  It's important to me to retain the time uploaded, and I honestly couldn't give a crap about the time it was created or modified on the original system.  Unfortunately, many of our clients insist on using rsync -av to upload their files.
I've already done a lot - used chroot to sandbox users, prevented ssh access, etc, but this continues to be a pain in our ass.  Is there a way to prevent rsync or sftp from changing creation/modification times server side?