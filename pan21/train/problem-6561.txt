Keep in mind that doing a periodic / manual sync is NOT better in any way than continuous.  Logging time changes due to clock drift for extended durations without synchronization will not give you a supreme level of accuracy.  Clocks don't necessarily drift at a consistent rate; it can change based on temperature and other fluctuations you cannot measure.
Just to be clear, you're more likely to get consistent time when running ntpd continuously since it also keeps clock drift at bay. Different computers have slightly different clock speeds, and just synchronising clocks at the start does not guarantee they'll keep in sync for the next six hours. ntpd is designed specifically to correct this.
If you were just using Linux I'd use mcollective for parallel execution of the ntpdate command. My ntpd doesn't have a -q option.
Method 2 has the advantage that it is more simple to implement.  However, the clock will not be very accurate.  "one shot" mode doesn't set the clock as accurately as running NTP.  It is mostly for fixing a far-off clock before you start NTP (see above).  However, if your benchmark only has to be accurate to about 1/10th second you'll be fine.
(And I should note... the drift will be different not just brand-to-brand, but between particular machines.)
Are you looking for the specific command to start/stop NTP on Linux and Windows? Those are different on different Linux distros.  It will be something like "/etc/init.d/ntpd stop" on some, different on others, and I'm not sure on Windows.
ntpd is designed to keep a constant synchronization, hence the "d".  ntpdate will get you a one-time sync.
Method 1 has some advantages in that the clock will be correct all those times that the you aren't running benchmarks.  The clock will also be more accurately set for the benchmark.  That is, NTP maintains the clock very accurately even between NTP packets.  The NTP packets on the network are simply fine tuning.  Between packets NTP uses past experience to nudge the system clock faster or slower.  The disadvantage is that when you start NTP again, it will refuse to start if the clock is too far off.  This is not a bug, it does this on purpose to prevent syncing to a server that has gone bad.  To prevent this, do an "ntpdate" or "ntp -q" right before you restart NTP.
The caveat is that the benchmarks might not be benchmarking what you think they are benchmarking if you turn off NTP.  The computer's clock will drift without NTP running constantly.  That's ok if you are benchmarking how much drift the computer has but not much else.