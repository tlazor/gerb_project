However doing that to a real user account is both a security risk and may potentially prevent legitimate execution by other staff group members.
Note that every time you reboot the Mac you'll need to mount the image (with the sudo hdiutil ... command) and start MySQL manually as it will fail to mount when launchd tries to start it automatically before the image is mounted.
First off, if you haven't already done so, be sure to verify that your version of MySQL will support symlinks for the table(s) in question.  According to this 2008 article, symlinks were only supported for MyISAM tables at that time and "For files used by tables for other storage engines, you may get strange problems if you try to use symbolic links."
This may be far fetched, but if you are soft linking to a separate partition, you could always mount that partition at the soft link point, then do a soft link where you would normally mount it.
Once you're convinced that your version of MySQL should support what you're doing, double-check which user you're trying to start mysqld_safe as and compare that against the permissions on /opt/local/var/db/mysql5/.  Since you used cp -a, it's likely that the directory is owned and writable by the _mysql user (which is why it works when you sudo -u _mysql touch...), but you're getting failures when trying to start MySQL from your normal user account (which isn't _mysql and, therefore, wouldn't have write access to the directory).