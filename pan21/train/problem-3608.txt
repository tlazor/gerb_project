Think about that: to give you a graphical user interface, your hypothetical hypervisor need a video driver and a window system. This automatically means that it is a full-flegged OS, rather than a thin hypervisor layer.
While it might not look like one, Hyper-V actually is a type-1 hypervisor, because the virtualization layer is placed below the Windows operating system and mediates all hardware access (some time ago, before hardware-assisted virtualization improved a lot, it was very common to experience really slow graphic performance on Hyper-V hosts, due to the O.S. sitting above the virtualization layer).
In short, the type-1/type-2 etc argument is moot, nothing but marketing to distinguish the dedicated hypervisor systems from the on-desktop virtualization software. 
As for KVM, it simplifies the approach, using the Linux kernel for most things (because it already can do those things, quite often better than any hypervisor - it's been around, developed and optimized for much longer after all), but the hypervisor bits are as "baremetal" as in ESXi or Xen. 
So, no type1 hypervisor can do that. Heck, true type1 hypervisors really are firmware-based (think to IBM/Oracle partitioning and virtualization systems). On the other hand, even embedded hypervisor as ESXi are not true type1 hypervisors in the strict sense.
Perhaps you can use device passthrough on ESXi to pass a video card and USB (keyboard/mouse) to a guest VM that you then use to manage the other hosts at that same box.  You would have an additional keyboard/mouse and monitor (unless you have the option of having dual inputs on your display).
PS: with KVM, you can gain both GUI console and text console access if you don't have X installed on the hypervisor.
However, I think you overestimate the performance impact of an hybrid or type2 hypervisors: a minimal CentOS/Debian system is very light in terms of resources usage.
And of course, a Hyper-V host is perfectly capable of accessing a guest system's console (unless you choose to run the Server Core edition which has no GUI).
No such thing as a "baremetal" hypervisor, unless it actually runs on-chip. Xen, ESXi, Hyper-V - all are a double kernel stack, where the hypervisor OS boots, and then brings up a secondary management OS. While the VMs are running on the hypervisor, it doesn't mean the hypervisor level is not an OS, as stripped down as it may be. 
Now, as for recommendations, what you are asking for can be done natively with Linux/KVM and Hyper-V (full Windows edition). Or you can use one of the desktop oriented virtualization products, like Virtualbox or VMWare WS. AFAIK it is also possible with Xen on Linux, not the xenserver edition of course.