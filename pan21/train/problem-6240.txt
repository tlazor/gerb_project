Fourth, if you use the start keyword argument to enumerate you can get rid of a lot of extra code. You can then compress your data curves section pretty easily.
Once you've moved things into some nice clean functions, you can then put your runtime code into an if __name__ == '__main__' block.
Second, if at all possible give them more descriptive names - I have no idea what this is about.  A good way to do this is to figure out the different sections (you have them labelled with comments) and then turn each section into a well-named, small function. This way you can clearly document what each section does and why, without having to add comments that clutter everything up. Prefer expressing yourself in code over in comments whenever possible.  Some people even consider writing comments a shameful act - I don't personally go that far, but here are some good articles about it:  
Third, use the right data structure for the job. Anytime you have name-value pairs and you aren't using a dictionary you're probably doing something wrong.  Whenever you have a list but you never mutate it, you should make it a tuple.
You might also want to consider adding support for command line arguments, making it easier to generate a lot of sheets like this that operate on different parameters.
Last, I'd make a wrapper that turns your workbook into a context manager. This way you can make sure that the workbook is saved, and it makes things quite a bit cleaner.
First you should clean up your code - add whitespace, remove unnecessary comments, don't use semicolons, store repeated computations in variables, move repeated code fragments into functions, etc.  