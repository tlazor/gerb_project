You have made a mistake here for your first address book if it was still able to work then it's a miracle if not then fix it:
A getter method like getEntries usually returns the thing that you claim it is getting. Since you are just returning the length of the contents array size() would be a better name for that method.
The remove method was tricky to follow at first. You have a loop independent conditional in the loop. This suggests that the conditional shouldn't be in the loop in the first place otherwise you're doing unnecessary checks on a method that runs through the length of the contents array anyway. Furthermore, it seems to be doing the same assignment as the first statement in you method. I can't tell why. If you re doing that to make a blank entry at the end in the case that the last element is deleted then put it just above the line where you decrement entries. On that note, I think making contents an ArrayList would have saved you a lot of the work you're doing in the removal process.
The AddressBook2 class is a lot of boilerplate code so it's fine for the most part. I would personally split long print functions into different void functions. Otherwise this is good if done only after a moth of Java.
Rather than making a readEntry method to read an Entry you could override the object's toString() method in a similar fashion. This would give you more flexibility in future (e.g you could reformat or extract the data from an entry with a regex if you wanted to) 
Since you have a constructor that takes in all arguments you could just make the no argument constructor use that constructor with "" as the argument for each position. That is -
Also it would be more practical to either split edit into different edit functions (editEmail , editName etc). It seems more likely that you'd only want to edit a few details at a time for a contact (people don't usually change their names).
The sort method is quadratic and seems to be doing a lot of work that you could do with java Collections. You could rewrite to look like this:
Since the value entries keeps a count of all the Entry objects made you could make it a static variable in the Entry class.