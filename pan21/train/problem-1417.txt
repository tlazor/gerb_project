If you are just attempting to transit these duplicate networks, it will work.  However, without NAT, or some other kludge, one duplicate network will not be able to talk to another.  In your example, each router directly connected to one of the 192.168.1.0/24 networks will have a single "connected" route to 192.168.1.0/24.  Neither will have a route to the far-side 192.168.1.0/24.  Don't do this, it's very bad design.
If you carefully set up the routing, configurations like that can be used for anycast addresses. E.g. 2 DNS servers each in the duplicate subnet with the same IP address - the closer one would respond to DNS requests from other subnets.
Any given network that serves the public probably has a few thousand instances of 192.168.1.0/24 attached to it at any given moment, so it works. It would be somewhat insane to do so deliberately on networks managed by one company, so I'm glad to hear you wouldn't. In the case you provide where you are connecting two private networks to a third private network, there will also be some potential lack-of-joy from "double NAT" if a connection to the outside world (public IP address) is contemplated - perhaps even triple NAT depending where you connect to. Best to avoid that, IME.
After some lack of joy when setting up VPN, I have eliminated all instances of 192.168.0.0, 192.168.1.0, 192.168.2.0, 192.168.100.0, 10.0.0.0, 172.16.0.0 from any of my networks. Up until that point 192.168.1.0 was fine for many years, but having been through that, even networks I don't currently plan to connect to VPN get an address that's as non-default as I can manage, and none of them are the same. Picking a non-default section of the private address space greatly reduces issues when users are connecting from places that (nearly always) are using one of those defaults.
With this kind of configuration, when you try to ping a 192.168.1.0/24 network from 172.16.0.0/24 network, one ping would be successful and the next ping will be dropped. You will see something like this !.!.!.!.! when you try to ping.