But the thing is, that the ultimate convenience of OpenID (one, hopefully secure, set of credentials) does not get eclipsed by the aforementioned downside. I use OpenID wherever I can, and was I to develop a web service for public use, I'd definitely make it support OpenID (perhaps with a conventional registration option).
That said, have a look at Clickpass (www.clickpass.com). They are actively trying to make OpenID easier to use.
If you login with an OpenID, you only need to login to your provider once - the second time, user won't even see the provider's page.
OpenID provides a number of advantages, chief among them allowing you to get lazy with authentication. Authorization is still your problem, but at least you don't have to be as concerned about securely storing credentials. This is a good thing in my opinion. The 'net need more 'relying parties' like serverfault.
Imagine two affiliated sites. Both of them allow OpenID login. Surely then they can share the activity statistics between each other - say I do action X and action Y on the first site and then, when I visit the second site I get bombarded with targeted ads, according to my activities on the first site. For some reason the lack of isolation between the OpenID logins seems a bit unpleasant to me.
OpenID while nice conceptually faces IMO an uphill battle because it's a) hard for developers to implement and b) hard for users to get used to the concept of using a url. The username/password usage pattern is pretty tightly ingrained at this point. 