Obviously the downside is dest_2 won't show up in your log shipping monitoring reports, but it sounds like you want this location more as report target instead of a failover candidate in the event of a disaster.
A supported workaround is to install a third instance on the server, instance_3, and put dest_2 on that instance with a different schedule.  Your server will need to be of sufficient size, but this will allow you to have two different copies of the database on two different recovery schedules.
With sufficient effort, you can customize your own restore routines for the dest_2 database as the formal Log Shipping jobs for dest_1 will already have the backups located in a common area for you to reference.  You'll need to remove dest_2 as a log shipping candidate and develop routines that restore the outstanding logs when/how you desire.  All backup information will be located in the msdb.dbo.backup* tables on your primary instance, so you may need to query that over a linked server to generate the restore scripts.  This isn't going to be an easy approach, but it's an option if you must have the functionality you want and you've got time to customize some restore routines.
If you can't install a third instance, and you're not afraid to code up some custom routines, there is another option available.  Basically, log shipping is a process wrapper that will automagically backup a database, copy the backups to a remote location, and then restore those files to a different database.  There's really no mystery about what's going on here, but the routines make this process easy to manage.