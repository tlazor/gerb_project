If you've got one of those idiot managements that refuses to let you have reasonable maintenance windows (and if so, run like hell to another job) then I've heard of people doing things like making a copy of a table's schema, modifying the empty table, then doing a copy-select into the new table (with a write lock in place to prevent changes) then renaming the tables.  Sounds like far too much risk for my taste.  Maatkit's mk-table-sync has a mode to do this, if you'd prefer to be able to blame someone else when it dies.
Whilst PostgreSQL doesn't have the "giant lock of doom", you still incur a significant performance hit to modify the schema of a table in PgSQL -- it's a lot of disk IO.  I can't imagine how any RDBMS is going to be able to avoid that, though.
Yes, MySQL completely locks a table when you're running an ALTER TABLE on it; no reads or writes for the duration, and queries which attempt to do so get paused until it's complete.  On the odd occasion I have to modify the schema of a large MySQL table (small ones complete their alteration quickly enough that it doesn't cause a noticable problem) I usually just schedule a maintenance window and do it then.  It's not hard to benchmark exactly how long such a change will take for a given table on the replica.
That's the biggest complaint you've heard about MySQL?  Geez, I've got a bucket full of bigger ones than that... (story for another day, perhaps)