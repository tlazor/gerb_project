This is not a straightforward task. I think you should add more information to your question explaining why you need this information, because maybe there are other ways to accomplish your real goal (knowing when a table is read less frequently is not a goal, it's the path you've chosen to your goal).
If you want to record individual read/write requests, then something like this that runs after each insert/select statement:
Judging by your question it isn't particularly important that you correlate a particular record to the time it was read/written from/to the table, only aggregated information for the whole table. As Aaron said, the easiest and least intrusive method would be to constantly capture the usage_stats DMV, but this will not be accurate as the view is reset under numerous scenarios.
SQL Server doesn't keep track of this information. You'd have to take snapshots from sys.dm_db_index_usage_stats frequently enough that you can graph activity, and you also need to account for service restarts, index rebuilds, etc. which can remove rows from the DMV and set the activity back to zero (this may look on your chart like no activity but it really means it has been reset).
If you want an accurate view of read/write activity, my suggestion would be to use a stored procedure alongside each insert/select. In either case you maintain a separate table which splits each day into certain chunks, and you update it with total or individual reads and writes, depending on your preference. 