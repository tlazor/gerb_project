My question is: How do I make LE forget that I tried requesting a cert while having the server set to redirect all traffic to HTTPS? Hence, how do I make LE use the HTTP URL instead?
So for year 2018 and later - look at the logs, they usually tell you what ip address times out and check connectivity from acme client to that address.
I tried looking up the error, but even Google found zero results (as of this writing). For the naysayers: Yes, this domain (exactly as shown in the error message) is valid and fully accessible and pingable from afar.
Up-to-date version of acme client usually display the target ip that timed out. It appears that the client issues queries to different name servers during the certificate request routine. Those server include but not limited to the default DNS server for the machine, and the authoritative name server of the domain you are using.
I have been using Let's Encrypt on a few domains for a couple of months now, and it generally has been working. I was going through renewing the certs, and for one of the domains I get the following error message (in the returned JSON object at challenges[1].error.detail):
I've seen a situation, when with otherwise perfect network connection the route to the authoritative name server was blocked on the company firewall. (I know, weird). So while all names (including this particular domain) resolved perfectly, when acme client tried to contact the authoritative name server directly the process failed. That was resolved by changing the firewall rules to let the request through.
There is an important predicament (clue) here, however, as to why this condition has sprung up. I had the settings for this domain set to redirect all traffic to HTTPS when I first tried renewing this particular domain. It seems that LE tried accessing the server at the HTTPS and failed. Since then I have changed the server settings so that the domain is not redirected to HTTPS for the acme-challenge folder. The problem seems to be that LE is remembering that a previous request was redirected, and now it does not want to access the HTTP URL instead. The challenges[1].validationRecord has two entries, one at [0] for HTTP and one at [1] for HTTPS, so clearly LE is aware that the server can be accessed at the HTTP address as well. Moreover, I can access the validation check file (on the domain in question) at the URL as given in challenges[1].validationRecord[0].url just fine without any issues.