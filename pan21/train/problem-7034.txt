Your customers may not offer every possible attribute, right?  E.g., "T-Shirt, Cotton" is available in small, medium, and large, but my store only offers small and medium.  Maybe even black shirts in small and white shirts in small and medium, but not black shirts in medium.  To support that, you need a table which normalizes attributes (one record per possible value, and you need to join your Shops table to that.
So if a store decides to sell T-shirts in "black" and "small" there will be a record in AttributesBuckets for ShopID = MyShop, ProductID = T-Shirt, BucketID = 1, AttributeID = color/black, and another record with AttributeID = size/small.  That's one "bucket;" one combination of attributes which fully describes a product that can be sold.  If they also sell small white shirts, that's one more bucket, defined by two more records.  If you add a "stitching" option, each bucket will have three records, for color, size, and stitching.
Shops would then populate two tables to show what they offer, one for products and one for each intersection of attributes.  It'll be important that the UI allow store owners to quickly add all attributes; you don't want them ticking a box for every record.