You want child processes to exist before a connection has arrived from a client. It speeds everything up. It's not a bad thing.
If there are more than MaxSpareServers idle, then the parent process will kill off the excess processes. What you're doing doesn't make sense unless it's a embedded system with very little memory available.
So as you can see, MinSpareServers is 1, which means that apache will kill all idle processes until there is only one. When i restart my server - its ok, in system only 2 apache processes (parent and child). After i load page, apache begin spawn childs, and when page is loaded - there is 5 childs of apache. Load on my server is very low, so i think that there is no reason for additional childs. How can i make apache work right ?
Your browser uses around 8 concurrent connections to load a page in parallel. Therefore 8 processes will be started on your server until the request is complete and the browser disconnects. The parent server will see that there are unused servers that exceed your MaxSpareServers directive and kill 3 of them to bring it inline with your configuration.
Apache is working exactly as expected. The Prefork MPM works on the one process per request principle. 