In the private share they would keep a TrueCrypt volume containing their for-their-eyes-only information. In that TrueCypt volume they would have one directory per patient. Or they would have one TrueCrypt volume per patient plus one for administration. 
SAMBA properly configured might solve your problem. Imagine each doctor has two shares, one exclusively private and another shared only with all the other doctors. 
I think you have described the simplest use case for Multi Level Security. There is an implementation of MLS in Fedora but I know nothing about it.
Since I do not see a way around multiple passwords, each physician would have to manage a list of passwords with some password management application like PasswordSafe and keep the password DB in their private share in a TrueCrypt volume. They would need to memorize three passwords at most: one for their machine, another to mount the SAMBA share, and another for the password management application.
In the shared share they would create a directory for each combination of doctors able to view the information. Yes, I know, there would be an explosion of combinations; this so called solution does not scale. Suppose there are 10 doctors, that would mean 2^10 (=1,024) possible directories. But I think that this practice is much smaller. The directories should have a standardized naming convention that indicates who the directory is shared with. Each directory would be scanned regularly to insure the proper permissions are enforced.