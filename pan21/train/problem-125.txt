You have not indicated the quantity of data you are backing up, how often it changes or the layout of disks.  Both of these things are useful in coming up with a backup solution.  If you are building a new system (or had the foresight when you built the original system), it is often useful to build the filesystem on LVM, then take a snapshot of the LVM and back it up.  This means no downtime and you can make an exact copy of [most of] the filesystem at a point in time.   It does, of-course, assume you use LVM.
Unfortunately its difficult to get more specific then this because backups are somewhat system specific.
If the site does not need to be live while you do it, there are a raft of solutions, the easiest being to ensure the disk is mounted read-only (for example by using a boot disk) and do a bit copy from 1 disk to another.  Then if something goes wrong, you just shove the backup disk in, turn the server on and away you go.
If the site needs to be live while doing the copy, the problem is more complex.    A good way of handling backups under Linux is to schedule incremental backups using something like rsnapshot (but rsync might be easier in your case).   If you have to restore though you will need to start by rebuilding the server, then copying the latest snapshot across.
Similarly, if you have good seperation between your OS and application, you might want to start with a base install of Ubuntu 12.04, then back up just the applications incrementally.  You might also want to handle databases differently to web files by dumping the databases.   Similarly tar (sometimes on block devices) can be good for complete, compressed backups - but when backing up block devices be aware that file changes during the backup of the block device can come back to bite quite hard without care.