Small companies are good for letting you do things like this. I've worked in a few small IT companies and not only do you get root to your own machine, but you get root on all the machines. :)
Some other offices that have strict policies tend to give their staff a locked down machine for their work network related stuff such as outlook and then another machine that is on a separate network that just has internet access for messing around on.
Typically developers get free reign in the development environment. I compare it to playing in a sandbox. Staging should mimic production but be tightly controlled by a few lead developers. And the production environment is usually off limits. Changes are made to development -> promoted to staging -> promoted to production (pending testing of course). Now, I realize that this methodology is the ideal. That doesn't mean everyone practices it. How google does this is beyond me. But I wouldn't be surprised if it was similar to this method.
I tend to find when at most offices that their developers and a few other roles usually have machines that are on a network/domain with limited privileges however they generally have local admin rights so they can install and do whatever they want.
It makes no sense to give telesales or support full admin access when they only need to use a handful of programs
In a small company, giving developers a free reign over their choice of tools can cause a problem if the developer then leaves the company and no-one else has experience with that tool. There's a learning curve involved that, if the developer had used the same as everyone else, would not be required.
I remember reading an old article about Google engineers years ago. They're allowed to use whatever tools they need to aid in their task which is pretty nice. I'm sure if you 'google' your query at google, they'll be a few articles describing their work environment. 
Most companies (that understand software) that I've worked at as a developer do allow some flexibility in terms of software as many programmers are very particular about their own tools (vim vs. emacs; textpad vs. notepad++, etc. etc.). Most common is administrative rights over their local machine. As expected, normal security rights (passwords, groups and such) apply to machines beyond the local workstation such as staging and production environments. So having admin to local is great and having restrictive access to database, web, messaging etc. etc. servers is manageable and understandable.