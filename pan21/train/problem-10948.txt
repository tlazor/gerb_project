What you'd need to do is basically set up your "router" as a proxy. It would have to be a full-fledged HTTP server that accepts incoming requests and checks to see whether they're directed to www.mysite.com or mediaserver.mysite.com, and hands off the requests to either the web server or the media server based on that. (It could also do more fine-grained checks, like looking for the path www.mysite.com/media and rewriting that to mediaserver.mysite.com)
This is done regularly. We have dozens of websites all running on the one IP address, and it's not uncommon to run hundreds. Your web server will inspect the hosts header of the request and serve appropriately.
I don't configure apache very often, so my memory is very fuzzy, but you use the name-based VirtualHost directive in your httpd.conf. From the apache example documentation:
Click Add, and under TCP Port leave it at 80 (or 443 for SSL), and under Host Header Name enter the name of the website (for example, mediaserver.mysite.com - although example.com is a reserved name exactly for this purpose but never mind). Click OK, and OK to the next screen And you're done. You can now access that website through mediaserver.mysite.com (and only through that, it won't listen on the IP alone any more).
FYI If you're planning on using Lighttpd I would suggest you go with Nginx instead. It is newer with less of a track record, but is faster and lighter and has already surpassed Lighty in number of sites using it. Nginx is also in use for some really high profile sites like Wordpress, Github and Hulu. I use Nginx as a frontend and to serve static files for an extremely high traffic site and it runs great!
Sure, you just need to setup name-based virtual hosting on your webserver, so that it knows how to differentiate between the different names ("name-based virtual hosting" plus your OS/webserver in Google should give you plenty of help on the subject).
If you're not able to actually run an HTTP proxy on the router itself, you should at least be able to configure the router to direct all HTTP traffic (on port 80) it receives to one particular machine which is behind it, and that machine can be your HTTP proxy.
Right-click on your website and go to Properties. Next to "IP Address" (on the Web Site tab), click Advanced. You will see an entry in there for Port 80, with no Host Header Name. Delete this entry.
Depending on what kind of a load your website produces, you could make the proxy be the same as the web server, or make the proxy be the same as the media server, and that way you can get away with just two servers, not three. But again, it does depend on how much of a load (and what kind of load) you're putting on these systems.
There are two methods to implement this, and they're both the same, but for different web servers. You did not specify which one you used, so here's the three most common:
Same as IIS 5/6 except instead of right-clicking the website, you just select it and on the right-hand side menu choose "Bindings"