If a service account is running an application, then that application should own any directories it will need to create or delete files in.  It should also have appropriate access to any files it needs. 
So what is the best solution? I have to reset permissions every time just after running the commands as root? or its better to give login and sudo powers to that account? or there is a way to run the commands as root without changing the existing permissions?
In your case I would change the user on your repository to the service account and run the pull request at that user.  Or to be safer, create a second service account in the same group as the node.js runs as to own the files.  Then use sudo to pull the files.  
Since I have to execute some commands that will updates the content of this folder, I have to use root since the system account cannot login...but doing that, the updated/new files will be owned by root now. And the service, running as the system user, could be stop working when it will try to access that folders/files.
It is common for service accounts not to have a password.  This prevents them from being logged into but does not necessarily prevent access.  Common access mechanisms include:
Let's assume I have created a system user account in order to run services without being root. These services access some folders with many files inside, and the system account owns this folder/files.