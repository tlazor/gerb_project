You generally want all users to have their own account.  But, if users will be random and not returning often, or if they aren't storing their own files or every logging into anything, then maybe a "generic kiosk account" could be used.  Kiosk accounts are often used for labs, or pubic places but this really has nothing to do with terminal services. There are lots of pros and cons to each way so it really comes down to your planned usage and requirements, which you didn't specify above.  I recommend you restructure your question with details on why users need terminal services, their usage patterns, why they must be logged in always, etc. and we can help with answering the opinion of kiosk or no kiosk account.
If they only need to login so they can use a browser or do some basic kiosk-style local things, then creating a generic shared guest account might be reasonable.
If the computer will be used to access shared file-systems or any network resource that requires some level of security, then you should require them to authenticate with a unique account.
Though if the account really doesn't need any domain-level resources it might be even better to simply create a local account on the system.
One could also create "kiosk" accounts for guests, that can also be logged into as terminal sessions; these can be locked down more rigorously, perhaps not allowed as interactive (local) login, restricted to thin clients only, etc.  
And yes, it would be Considered Bad to run terminal services on a DC, especially with guest accounts active.  Your DC is going to be the central hub for all administrative access, so keeping it at arms length from the terminal sessions is highly recommended.
My recommendation would be to build a separate Terminal Server for the thin clients.  These systems would be configured to invoke a Remote Desktop / Remote App login as soon as they come online, giving the illusion of a Windows Desktop that is actually an RDP session.
This way, the users can log into their own accounts (perhaps with a roaming profile as you stated) but the desktop session on the thin client would actually run on the terminal server rather than on the local system.  If they log into their own machine, the domain will recognize that they're logging in interactively, rather than a terminal session.