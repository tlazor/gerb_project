However, I don't want to bridge between wired and wireless interfaces.  I would like to be able to access the FTP and SSH servers over WiFi, without the AP connection having "Limited Connectivity."  
After connecting my laptop to the WiFi access point, the Windows Network and Sharing Center tells me that the wireless AP connection has "Limited Connectivity," and I am unable to obtain an IP address from the wireless interface on my embedded system.
I've used telnet on ports 21 and 23, but I am unable to find an open port using the wlan0 127.128.129.0 address.
I've also set up proftpd and dropbear on this embedded system.  Using 'ps' I've verified that these two processes are running in the background.  I've also used a wired eth0 interface to verify that I can connect without any problems to the FTP and SSH servers.
I've recently designed the circuit board for an embedded ARM system, and the next step is to work on the software to run on this hardware.  I've generated the root file system using Buildroot.  I am using the Linux 3.0.4 kernel compiled using a cross-compiler.
Attached to one of the USB host ports on this system is a Atheros AR9271 WiFi chip capable of being placed into AP (access point) mode.  I've compiled the ath9k_hw kernel module (http://linuxwireless.org/en/users/Drivers/ath9k_hw), and I've been successful with using hostapd (http://hostap.epitest.fi/hostapd/) to create an access point.
What other software would I have to set up on the embedded system to be able to access the FTP and SSH servers without setting up a bridge between the wlan0 and eth0 interfaces?  I believe that the bridge interface is most popular with embedded routers, and there are a few tutorials on how this can be done (http://www.su-root.eu/computing/turn-your-linux-computer-in-a-wireless-access-point-using-hostapd).
Running ifconfig shows that the wlan0 interface is functioning.  Using my Windows 7 laptop, I can connect to the SSID set by hostapd. Pinging 127.128.129.0, I receive a reply from the embedded system.
I would like to be able to access the FTP and SSH servers over WiFi in a similar fashion to the wired eth0 interface.