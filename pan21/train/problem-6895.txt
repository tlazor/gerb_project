I agree that option 3 is the way to go - this is a pretty standard setup and requirement of resilient web hosting, and not something that you should really have to write yourself.
Obviously, these services can get fairly expensive, but AWS or Azure should offer you some free options to get started - both of these offer solutions to create multiple copies of your application either within the same "region" but in different parts of the data centre with traffic automatically loadbalanced or in multiple "regions" and then either balance traffic between them or have one as a "hot standby".
What you should also do is try and work out why your EC2 nodes are freezing - is it AWS networking/infrastructure issues (for example if you're only running one instance, AWS will have to move/stop-start your application when performing updates to the underlying hosts - scaling out to multiple instances in different availability zones should reduce this) or is it that your application is crashing or hanging (could be any number of reasons, but deadlocks and data connections are typically good starting points, followed by memory leaks).
But as you note you could start by using a reliable database host and calling that from all your servers - typically, a reputable host will have a fairly reasonable service level agreement for Databases, so you might be able to get away with a single database server for your application - or you could look into something like MongoDB Atlas which offer a free 3 node replicated instance to get you started. 