To be completely honest, it's less work (and therefore less $$) on the part of the software developers to assume that updates will always result in a restart.  This is probably as much a decision of the bean counters as it is of the developers.
It has to do with the fact that it is very hard to change code as it is running without causing some major problems. The solution: stop everything before changing the code, that way you can be sure nothing is running. It is a brute force hack that is largely unnecessary a lot of the times that it is supposedly required, but it can be absolutely necessary, especially if you happen to be updating particularly important code. There is actually an entire company that specializes in making updates that DON'T require a reboot for this particularly important code. The way that they do it is in this paper http://www.ksplice.com/paper. 
For some pieces of software, I have come to the conclusion that it is a habit and is often not necessary even when told to do so. If I don't think that a piece of software should have done anything major to the operating system, I tend not to bother, and haven't experienced any problems (and if there were problems they would be easy to solve).
If the software being installed affects an integral part of the operating system then a restart is required. For example a new kernel for the operating system.
On Windows systems, it is often used used because users are considered to be too stupid to use their computers properly. As an example, Microsoft publishes details of how to change the "Node Type" used for networking on its website, including the instruction to "restart the computer" when all that is required is a restart of a network service as detailed here. Because we, as users are too stupid to restart a service, we are told to restart everything.
Ultimately, there are very few updates that could not, in an ideal world, be done without restart, but it takes a lot of pre-planning, and there are some risks, given the wide variety of possible configurations a system might have.
Sometimes a piece of software will make a change that cannot come into effect while the computer is use. Some reasons might be - a file is in use, the change can only occur during boot up of the computer, there might be a security issue which can only be done before the computer has its networking active, maybe the virus scanner would interfere with the install. 