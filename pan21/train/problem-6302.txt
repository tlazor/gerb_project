*Even if your workplace were to delegate control to you, it would still involve inserting at least one record into their DNS.
Yes, you will have to use the company's DNS - there is NO way around this.* Yes, you are also correct that it is only a single record.
Administrator of my company allowed me to put my own server in our datacenter and gave me one public address of our AS pool.
Lets say for sake of argument that your domain is example.com, that the IP is 192.0.2.15 and that your employer's range of IPs is 192.0.2.0/24
I can use internal DNS of my company (but only for this one record, I cant move whole domain) if it can help.
In the above two examples, example.com and 2.0.192.in-addr.arpa are two totally separate and unrelated domains that just to happen to each have one single record that happens to point to the other..  Thus too is the relationship between your domain's DNS and your company's reverse DNS.
Yes, it is absolutely possible to set the PTR for that IP address to be anything in the world, including the possibility of setting it to point to your domain.
I've installed linux and configured basic services. Then i've added A record in DNS server (OVH - where i've bought domain) to map my subdomain to public address of my server.
You control the domain name, not the IP block. You can assign your domain to any IP you want. The only person able to add a PR record back to your domain (or to any hostname they want) is the admin who controls that IP block. You can do a search online for "whois" and type in the IP to find the owner, or just ask whoever your IT contact is at work.
Everything works good, but now theres last thing  to configure - reverse dns. Is there any possible way to make reverse mapping of my IP address to subdomain, if i have only one address of pool and my domain is hosted on outside server (OVH)?
However, that single record is NOT part of your domain's zone - rather, it is part of your employer's in-addr.arpa delegation.  Your domain happens to point to that IP. The rDNS for that IP will happen to point to your domain, but they are otherwise totally separate things. This is why it does not matter where your domain's DNS happens to be hosted.  For Example: