%APPDATA% is slightly better, as it isn't supposed to contain temporary files such as caches - sadly it does anyway, and a lot of the program settings really don't warrant a backup.
From my own personal experience, I chose to save into %UserProfile% because the user always had read/write/modify access to it without having to change any of the permissions.
The %AppData% and documents folders are for saving per-user data. The difference between them, for the purposes of this question, is primarily that %AppData% is where stuff the user should not need to see or interact with goes, and the documents folder is for the user's documents: stuff they'd want to see and interact with.
Games will sometimes store their settings and save files in the documents folder because it makes them visible, so less technical users will see them and be reassured that they do exist, or will be more likely to correctly back them up if their backup method is a crude, "copy the stuff in my user folder to another drive."
From my personal perspective as a user, I primarily distinguish between data I want backups of and data where I don't care about it.
Creating incremental backups of %LOCALAPPDATA% is a mess, because it will clutter the backup with tens of thousands of temporary files, many of which are locked by background services. This makes backups slow (high overhead from many small files), and unnecessarily big (frequently changing temporary files sabotage the "incremental" part). Preventing this requires manually maintaining an exclusion list. 
Ultimately, save games are a type of data I want to interact with as a user, and the %UserProfile%\AppData doesn't lend itself to that.
A little consistency would be nice, and even nicer would be for services like Steam to keep copies of save files on a network somewhere.
Personally for this reason I like having it in my documents, although I'm sure someone will tell me to just get a proper backup system instead of doing it manually.
This was not true with %APPDATA%. Particularly when using Restricted user accounts, you often don't have write access to files created by other accounts inside %APPDATA%.  I imagine the AAA titles made the choice for the same reason as us; we didn't want the headache.
Games will also sometimes store files there because they haven't changed the behavior of the relevant code from older OS versions, as you suspect, or simply because they don't care to think about the problem that much.
I don't care to recall the number of games I've had to start over after a backup/restore or similar thing because I moved all my important files from my documents, but totally forgot about user application data such as save files because it's often in with the program files or other weird places (like in a hidden folder such as appdata). 
Game developers have not traditionally been great at respecting the conventions established by an operating system. Although to be fair, lots of regular application developers don't either.