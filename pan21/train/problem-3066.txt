It is probably best to compile/install the old version in a unique path (/opt/postgres82, /usr/local/postgres82, etc.) to ensure that your OS won't stomp on it.  
Therefore, is it possible to continue to run PostgreSQL 8.2 (not upgrade and perhaps pin it) on a Debian Lenny system, which will be upgraded from Debian Etch? If so, how?
If you just upgrade from etch to lenny, your installed postgresql-8.2 package isn't going to disappear.  That's how it's designed.  (Check the aptitude output when you're upgrading to be sure.  You could set the package to hold if needed, but it shouldn't be needed.)
It is possible to run (practically) any version of Postgres on (almost) any unix-like system -- Simply grab the source code from the Postgres web site and compile it (detailed instructions here).
We are running a legacy application which requires PostgreSQL 8.2 on Debian Etch. Since Debian dropped support for etch, we're seriously considering to upgrade to Debian Lenny. However, we are stuck if we will be able to continue to run PostgreSQL 8.2 on Debian Lenny.
If you're feeling ambitious you can follow the packaging instructions for your operating system as well and install your downgraded database as a package, but you can skip that step just as easily with few ill effects.
Note that when going this route you need to be aware of when underlying libraries change (which could break your database server if Postgres is linked against the library, necessitating a re-compile), and you will probably need to install your own startup script in a way appropriate to your operating system.