You can also use tar or any other tool to get a full dump of the filesystem, repartition the new disk and untar all the stuff to the right places. You can even do it over a network and livecd/usb image using nc:
Some excellent answers here, but I wanted to post my own to document what I did that worked.  Most of it can be found Googling easily, but one key step kept me at work late.
/sbin/mkinitrd -f /boot/initrd-uname -r.img uname -r  (replace uname -r with your most recent kernel version.  using backticks with uname -r might work in the command.)
The part that had me stumped was mkinitrd, which was necessary because the system disk was behind a new controller & the drivers were not built into the previous initrd image.  Without them, it would start to boot but couldn't find the LVM's.
I think you should think more about a full backup/reinstall/restore cycle. You could use DD but the different disk sizes don't help there. 
Am I missing something? There's no cciss device here. cciss generally represents the block devices tied to Compaq/HP Smart Array controllers. The LSI should show up as a /dev/sd[x] device. Either way, I'd recommend the backup, install, restore method here as mentioned in earlier comments.
Since you are using LVM, using LVM snapshots is a good idea. I am not a fan of cloning LVM volumes because the Universally Unique elements that are essential to proper LVM function are no longer that Universally Unique. You never know how much your system will continue running with old and new hardware. I would suggest leveraging LVM's snapshot technology for everything other the your boot volume. Basically, you have VG_existing, and you will have to add your PVs to a new group VG_new, you will create new LVs under this group, and use same exact names as LVs i VG_old. Then you can create a snapshot of each volume in VG_old, and basically do a 'dd' from each snapshot to an identically named volume in your new group. This way you will not have a hobbled LVM configuration, and you can do this with a system live, no need for any real downtime. You will need to adjust grub later, and you are all set.
With the new, unformatted disks installed (old & new disks in the system), assume /dev/sda is the old disk & /dev/sdb is the new & sda is the boot device.  I did this from a CentOS DVD booting to "linux rescue":