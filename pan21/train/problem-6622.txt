The second issue you say is dynamic 'flash-based' which means that the majority of your bandwidth is going to be serving the initial flash application - a candidate for a CDN or cache.
From what I've read on High Scalability, your best strategy is simply to work on the current bottlenecks and start to plan for the next bottlenecks. Unless you're using exactly the same software and hardware as someone has already used, and unless the usage patterns are identical as you scale, you can't plan your entire growth now. You need to plan for the current phase and the next one, not the 2-million-user mark.
However, without knowing your architecture or system design, any opinions given are guesswork given the loosely defined requirements.
Why would you put your web servers in a VM enviroment? It just causes overhead that you dont need, they should all serve data from the same storage and have identical configuration.
Your dynamic flash application is likely to have small messages sent back and forth using gevent or some similar technology.  Those messages are likely to be small.  Your application intelligence will likely have to parse, log and respond to those, but, 2 million users a day, 80 interactions each is 160 million interactions.  At peak times, you would probably have to handle 3600tps.  If you need 300 servers to handle that, you need to rewrite your code.
Virtualizing your webservers as mentioned above is probably a waste of performance.  Even the lightest weight virtualization won't run as quickly as bare iron.
I think you've seriously overestimated your requirements.  As a point of reference, a 2 ipvs primary/primary in front of a pair of dual quadcore xeons running nginx+tornado processes 286 million ~2400 byte iframe adblocks + full adstream logging for the 7 elements within the iframe.  Utilization of each is <40% (allowing for a single node to fail with no 'overload')
Also, High Performance Web Sites and Cloud Application Architectures might be worth taking a look at, however the latter might be slightly outdated.
As far as reading on this topic goes, I highly recommend Scalable Internet Architectures by Theo Schlossnagle. It covers HA deployments and horizontal scalability in rather exhaustive detail.