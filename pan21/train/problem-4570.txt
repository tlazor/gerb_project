I then tried to configure bind9 and to interface it with OpenVPN, but that solution was unsuccessful and uneasy to use.
It would be rather complicated (as you need to keep a list of DNS names and build a command like that for each one), but, as @LucasKauffman already pointed out you are not in control of the DNS, so no filtering there.
Also, please note that this would only work for HTTP and not HTTPS, as all requests are encrypted in HTTPS.
My first idea was to use the /etc/hosts file. But, its effects seem to be limited to the host only and not to be taken in consideration by OpenVPN.
That's quite logical as the DNS server used by the client is probably not your host. What you can do is get all their IPs and block those IPs instead of the hostnames. 
You can also try to filter using iptables and the string filtering capabilities. It should be something like this:
Even when you configure a DNS server which "block" these domain names, the client might still choose to operate with a different DNS server and he will be able to bypass this control.
After this, I considered using iptables to drop all the packets from/to those websites but that forum thread made me thought otherwise since iptables' behavior with FQDN may generate complex issues.
I am currently trying to block some websites by their domain names for all the clients of my OpenVPN server.
Have you got a solution to block websites for all clients using an OpenVPN server on which I am root?