People who use NULL FKs in fact tables usually have an aversion to people who have an version to outer joins.  ;)  (in other words, this is a stylistic issue which can generate religious wars)
my rule of themb is the only nullable value in a dwh end datamart is the fact itself, so that aggregate functions like avg still work.
dimension keys in facts should be not null and imho have fk's to the dimensions to elimnate the need for left outer joins by end users, reports etc. All loads of facts should do a left outer join to the dimension and default to a 0 key or no key at all and fail. Better to fail than to do a join to the dimension and have no idea you missed rows in your fact, till some users finally finds it (if that ever happens)
As I understand both these dimension tables will have integer primary keys for better performance, and the fact table will have its own integer primary key and also store foreign key references to these dimension tables.
For phone numbers that have an extension, the fact table would have foreign key references to both the dimension tables, but how do I capture the situation where there are only phone numbers and no extension to them (and vice versa i.e extension with no phonenumbers)?
I have read up a bit on dimension modelling where I see that fact tables store foreign key references to dimension tables.
Should I capture such information with the phonenumber FK in the fact table having a value and phone_extension foreign key null?? Or are such non related objects not recorded in fact tables?
Marts should be designed to support presentation tools and user queries. Nulls just get in the way of those things because they are never displayed and they make user queries more complex and error-prone - especially in foreign key columns which are frequently subject to joins.
The warehouse should be well normalized (at least BCNF) and therefore should exclude nulls. Nulls might be preserved in staging tables if they exist in data sources but they shouldn't be needed in the warehouse itself.
You can leave the FK to some dimension tables as NULL if those dimensions are not known or not applicable.  You just have to remember to use outer joins when you do your reporting query.
Also I need to generate report of this data mart. So do I start by querying the fact table and retrieving the dimension key values or report straight from the dimension table?
Alternatively, some people create a "none" and/or an "n/a" dimension record for data mart dimensions and then populate fact table FKs to point at these rather than using NULLs.  People who do this like this approach because they have an aversion to outer joins.
But suppose I have a situation that not all phone numbers have a  phone_extension related to them. ( some phone numbers need not have an extension)