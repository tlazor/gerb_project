When we dont have optimal schema statistics(column histogram) the optimizer makes an incorrect guess about the cardinality(number of rows returned) of a result set so sometimes optimizer may use nested loop join instead hash join and vice-versa.
In your first query the optimizer chose table scan by index rowid which is faster than full table scan which has chose by optimizer in your second query.
Another thing that makes these queries different than each other is physical joining algorithm used by the optimizer, namely Nested Loop Join and Hash Join in your case.
If you are going to select 80% rows of the table then full table scan is most efficient and If you are going to select less than 10% rows from the table then reading an index followed by a table access by rowid may be more efficient than a full table scan. Optimizer makes decision according to the statistics of the table on whether to do full table scan or index scan.
There are all together 107 rows in EMPLOYEES table of HR schema. When I tried to select all employees which means all rows from employees table optimizer chose full table scan and when I tried to select a specific record it chose table scan by index rowid.