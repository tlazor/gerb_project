I tried Steven's method, but the USB event wasn't showing up in "Event Viewer/Windows Logs/System" (I'm using Windows 7). I poked around a bit, and found out the USB insertion events are located in "Event Viewer/Applications and Services Logs/Microsoft/Windows/DriverFrameworks-UserMode/Operational". Try clearing the log first (just to make it easier to find the event you want), then insert the USB flash drive. Refresh the log, and a bunch of events should show up. I picked the top most event (i.e. the most recent), and assigned the task to that (make sure the event description looks like it has something specific to the particular USB drive you inserted). 
If you don't mind a little Python scripting you could write a daemon that listens to HAL for events and then launches a script once a device of your choice has been plugged in. An example script would look like this: 
You just have to modify the device_added() function to limit it to the specific device and replace the os.system() call with your custom script.
Now you should have your own homebuilt solution to your problem but it's certainly possible that there's pre-made solutions out there :)
When I was setting up little surveillance system with Raspberry Pi, which ran on Raspbian Wheezy, I needed to constantly move all files from FTP folder which was uploaded by IP camera.
For limiting it to the drive the volume.uuid property could be used and a full list of available properties can be displayed with the hal-device program.