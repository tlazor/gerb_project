Of course the best thing would be to have two switches at each location, but that is not usually done for campus access switches, since end-user machines only have one link anyway. In a datacenter access setup, servers have two or more ports and are connected to at least two separate switches.
A better topology that would allow for link or core switch failure would be this (note it only uses two fiber ports in the core, but you have a building-to-building link). Obviously spanning tree of some sort must be enabled on all switches to prevent loops:
If you can run two fibers from one of the switches, this would provide the best performance with the gear you have, one hop to the core. And still provide redunancy for all access switch links.
I need to warn you however - if those core switches only have two fiber slots each then what are you going to do if one of the switches go down? Since you don't have more than 1 link to each building I highly suggest that you either get core switches with enough (sfp) ports to carry all the fiber links, or get more links between the buildings to build a ring topology - like this:
If the switches you're going to use have 1gbit copper interfaces aswell then it's no problem to trunk between them, this is the normal way of connecting switches that have several uplinks.
This would ensure that any single link can go down without interrupting the network. The next step would be designing STP etc, but that's out of scope for this question.
You haven't provided any info about the interfaces you're going to use with the fibre link, so I'm guessing that this is 1gbit.
To answer the question - yes you can do this. The copper interfaces should be the same speed as the fiber to avoid serious bottleneck. I would also recommend a portchannel / etherchannel between the two core switches in the north. With a portchannel you can bundle several copper ports together to increase the bandwidth between the switches. Alternatively, you could go with stackable switches and not worry about the uplink between them at all.