Not to get into too many details, if you anticipate using unstable storage, it is much safer to keep risks to the minimum. This can be achieved by disabling the QEMU disk caching function ( cache=none in the cmd line), and using werror=stop to make the guest pause whenever it hits an IO error, instead of trying to push that IO indefinitely. 
In any case, it is generally better to avoid disk access bottlenecks, especially when VMs are involved. Multiple paths and separate networks for iSCSI traffic only are the common means of achieving this.
This is quite a complex question really, and the answer depends on your host configuration. First of all the iSCSI layer has it's own timeout periods and retries. The same goes for the device-mapper-multipath that controls the block devices, and above that you have the QEMU disk layer and the disk controller driver within the guest OS. 
If you don't use these, with an unstable storage you are risking image corruption and data loss, though in some cases, if the guest OS detects the IO error (if you use propagation for example), it might simply remount it's FS in r/o mode.