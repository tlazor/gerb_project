Unfortunately, there is no region history feature in Emacs.  There is the function pop-mark, which restores the mark to a previous location taken from the variable mark-ring, but it does not set point and thus is useless for restoring old regions.  If you are adept at Emacs-Lisp, you could advise function set-mark with code that maintains a region ring (similar to the variable mark-ring).  Then you could implement a pop-region function that behaves similarly to pop-mark.
You can also use C-- C-M-y to swap the region and the secondary selection.  So for example, if cat is the (active) region and dog is the secondary then C-- C-M-y makes cat the secondary and dog the (active) region.
That's all. Just C-1 C-M-y to take a snapshot of the region (as the secondary), and later C-0 C-M-y to activate the region where it was at the time of the snapshot.
If you use library second-sel.el then you can use the secondary-selection to help with this. The secondary selection is not associated with point or mark, so it stays put, even as point moves (so yes, unlike the region, it can move off screen).
A common workflow is to narrow-to-region (C-x n n) and then perform your tasks on the visible region.  Then widen (C-x n w) to expose the rest of the buffer again when you are done.