Each diagonal gets clipped at the board boundaries based on the distance of the bishop from the edges. The distance of the bishop from the edges is defined by it's coordinate value. 
The first thing that popped out is that the choice of coordinate system origin point is important because an infinitely sized chessboard does not have any corners. Since the choice of origin point is arbitrary, maybe placing the Bishop at (0,0) might things easier to understand. It gives us a Cartesian grid:
Then all that's left to do is to make the diagonals for each quadrant. Clipping is applied first to reduce the number of calculations where possible. Translation is applied last because rotation produces negative values.    
Because, limitations of computer hardware aside, the chessboard can be arbitrarily large, looking at the solution for a bishop on an infinitely large chessboard might be a place to begin looking for a general solution.
Going back to the original Cartesian grid, we translate the solution for the portion of the diagonal lying in one quadrant, into the relevant diagonal for the other column:
The last piece is to undo my arbitrary choice of origin. It boils down to a simple 2d translation. If the bishop is on square (i,j) then the equations become y + j = x + i and y + j = -x + i.
The other diagonals in the other quadrants can be generated from the worst case diagonal for Quadrant I (northeast). Technically, the transformation can be seen as either a four-fold rotation or two mirror planes. I thought that rotation seemed easier.
Since it was mentioned in the question, perhaps there are some useful abstractions there. It is possible to think of y = x and y = -x as two matrices. Each has two columns and an infinite number of rows. Going further y = x can be transformed into the other matrix by the 2x1 matrix [1,-1] where the values are arranged in a column.