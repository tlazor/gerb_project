You can perform a huge amount of in-memory calculation and manipulation in the time it takes to perform one query, no matter how well the query has been tuned. I'm talking microseconds vs milliseconds. That's three orders of magnitude. A supersonic jet is flying only two orders of magnitude faster than a man is running.
You've asked it to locate records based on the result of a function call based on the value of the Postcode field.  The only way it can work out the result of that calculation for each row is to call the function for each and every row, scanning sequentially through the table. (a.k.a. "Table Scannng", a.k.a. "Slow"). 
This will locate any postcode starting with the given term and allows the database to use an Index on Postcode (because it can Range Scan items in the Index that start with the given fragment). 
What you're asking for can be done. However, I would recommend reading the list of postal codes into a collection (in Java, ArrayList) in the background as your app starts. Design a Textbox or ComboBox extension to work with the list, narrowing the displayed list of codes as the user enters characters. You may want to ask around other SE lists to see if someone has such a thing already designed in the platform objects you use.
I have to populate a textbox while the user is searching for the Postcode so the query has to be very fast.