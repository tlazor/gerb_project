In our experience, any working Digium card with hardware echo cancellation will handle the load, but where Asterisk falls down is when it's stressed with SIP calls and registrations. We've found that many versions of Asterisk simply are not stable enough for production use, even supposedly "release" versions. One way to test for this condition is with the SIPp load tester, the details for configuration and installation can be found here: http://www.loho.co.uk/blog/2011/08/sip-load-testing-with-sipp/.
As for the timing test command on the Asterisk command line, I wouldn't really call that a meaningful test for much beyond ensuring that your DAHDI device is operating. If there's a fault on the card, it might show something, but on our perfectly working Asterisk switch which happens to be routing about 8000 calls per day, running 'timing test' with any value over 1000 returns nothing more than 1001 timer ticks (even requesting 2048 ticks, for example). Listening to a call in progress while doing so does not result in any degradation of voice quality, so I would not call this any kind of stress test.
I have excellent performance with timerfd using Asterisk on CentOS 6.5, inside VMware ESXi 5.5, hardware version 10 (with latency sensitivity set to High in the virtual machine configuration), and vmware-tools-esx-nox RPMs installed. So, that's without a "real", physical HF timing source. Asterisk used to be terrible on older versions of vmware, but virtualization in general has come a long way.
If you're looking for a canonical source of information about all things Asterisk, then the wiki at http://www.voip-info.org/ is about as close as it comes, in my experience. Digium also has their own forums, but not necessarily the trove of information that you can find at voip-info.org.
I realize this is an old question, but for anyone else who comes along from google: it is my understanding that if your motherboard has a high-frequency timing source built-in (many do), and as long as it's enabled in the BIOS settings, the Linux kernel will know about it, and timerfd should perform just as well as anything else.
However, we would highly recommend either using Debian-Stable and its Asterisk binary package, or the exact same version they use (found here: http://packages.debian.org/wheezy/asterisk). We've had good success with this on several PBXes, some of which have had fairly high load (although not as high as our main server - they're usually deployed at customer sites). 