Right now, your Player and Enemy classes share quite a few of the same characteristics (e.g., health, gold, armor and name).
At least in my opinion, it would be better to eliminate the comparisons, so this became: if (NameSelectDone && ! IsGameOver) (or you can use not IsGameOver).
Another possibility would be to use template parameters to create characters. This tends to be a little more advanced and can be a little more difficult to do well, but can also improve performance and simplify some of the code. It's not immediately clear whether the benefit would justify the cost in your case or not.
Right now, Story consists primarily of writing various chunks of text to the screen. Rather than embedding all that text directly into the code, I'd at least consider putting it into an external file (or multiple files). In the long term, the makes it quite a bit easier if (when?) you get to the point that you need/want to do things like translate to another language, or even just rewrite the story a bit.
Right now, a player has a single int to represent their armor. Depending on how complex of rules you might want to implement, it may well make sense for armor to be a class of its own, complete with (for example) characteristics about its resistance to various kinds of attacks (e.g., a wooden shield might be quite strong vs. a sword attack, but much weaker vs. a fire attack).
The most obvious (but not necessarily preferable) way to eliminate this duplication would be to define a base class (e.g., Character) to hold the characteristics common to all characters. Then your Player and Enemy would inherit from that, and add their own little bits and pieces.
There are times that it makes sense to use system, but at least in my opinion, clearing the screen isn't one of them. Since this only works on Windows anyway, I'd write some code for the Win32 API to do the job, such as something on this order: