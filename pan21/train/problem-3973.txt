Of course, that's just my opinion -- but I have no reason to believe the former model would not work for common computer science courses as well.
On off weeks, tutors often get plenty of time to work on their own homework while getting paid. Additionally, if they are part of the honors program, it can count for credit in that regard, and tutoring is a great way to become a TA later (and many of the tutors are also TAs).
This model does require buy-in from instructors to motivate PLTL attendance. Some CS1/CS2 teachers made PLTL attendance mandatory, others offered extra credit. In an ideal world, the CS1 / CS2 teachers would write the PLTL materials and help run the program, but it fell on me in my setting.
Yes. Tutors make somewhere around \$10 an hour to $15 an hour, depending on subjects, expertise, etc. 
When I started my last job, there were many problems with the CS "tutors" at the CC and university I worked at:
PLTL Leaders didn't just hold tutoring hours. They also led weekly PLTL sessions where they helped students learn CS in a structured setting. This provided a way for students to meet the Leaders, and a context that ensured the students learned something and that the Leaders were trained. PLTL leaders also helped out in the classroom.
PLTL is a proven model with a handbook, a research tradition, and support. I had to make my own exercises for CS1 / CS2, but the model for how to run a PLTL program is already well-established---simply follow the handbook. PLTL emphasizes collaborative work (usually on paper), and Leaders prompt and direct students, but do not give away the answers. 
Being a PLTL leader was advertised as a high-status position, a leader in both content knowledge and professionalism. I was inspired by Section Leader programs at many universities. PLTL Leaders were paid hourly. At the university, I was able to set up a system of interviews to hire new PLTL leaders--this gave another level of professionalism, and also gave students much needed practice in whiteboarding and interviewing, even if they didn't get the job.
The tutors apply and are interviewed. The interview consists of one prepared problem and one unprepared problem, both taken from areas they claim to be able to tutor. They then have to mock tutor their interviewer.
Some students find themselves falling behind in a course but still have the desire to do well. Some colleges provide a definite system of tutors in which such students can get additional help. What are good models, in your experience, for such systems?
I think the way the engineering college has set up this system is an efficient use of resources. It's lamentable that our regular CS program does not have anything of the sort. The CS department maintains a list of approved tutors (anyone can apply online, fill out a form, and be approved as long as they meet a sufficient course grade for the courses they want to tutor). There is no formal training whatsoever and close to no oversight from the university itself. This results in incredibly variable tutoring experiences. Additionally, the system itself is poorly known, and I doubt most students would be willing to pay a private tutor 15-30 dollars an hour to quite possibly get no help other than a brief explanation of the answer to their assignment. Of course, this is speculation on my part, but I think if the computer science department were willing to budget some money to set up a system like the one I've described, it would be a great investment. It would ease the load on TAs and professors (as an aside, I recall prior to one homework deadline in my data structures class, my professor and TA for that class had 30-40 people lined up for an office with four chairs), ostensibly reduce cheating, and improve understanding.
Here are my answers, from the perspective of an undergraduate majoring in computer science and engineering. The engineering college provides free tutoring 6 days a week from 6pm to 9pm.
If no one knows the content, no one knows how to teach the content, and no one is welcoming to new students, what can you do?? I opted for a fairly time-intensive solution because it fit within my role, but others may benefit from at least parts of this model.
I'm not sure what is meant by this. University analytics seems to indicate that students who go to tutoring do significantly better than students who do not. Otherwise, attendance is logged, and is usually fairly high -- showing that students clearly think it helps.
Starting this program was one of the highlights of my job. I'm happy to say that these students did become a strong part of the department's culture over the 2.5 years I ran the program, raising the bar for what professors thought their students could be capable of. Many of those students now have great jobs in industry. I miss 'em :')
Over time, student coordinators took over running the training sessions. Once problem sets were developed, they were re-used. 
No. Students come in and ask for help in a subject, and tutors assist them. If a tutor has nothing to do, they usually do their own homework.
It depends on the demand and subject area. Prior to exams or important homework assignments it will usually be one-many. Less common subjects attract fewer students.
No -- it's entirely informal. You do not need to sign up for an appointment or anything, you just walk in.
Weekly trainings bootstrapped the tutors' content and pedagogical knowledge. We worked through the packet of problems for that week's PLTL session ahead of time as a group. This ensured that everyone knew the content, and also knew how to prompt students to solve the problems. We practiced pedagogical techniques like tracing code, drawing memory diagrams, and prompting students to collaborate. We typically spent 30 minutes talking about issues like making sure students didn't feel afraid of looking stupid or asking questions.