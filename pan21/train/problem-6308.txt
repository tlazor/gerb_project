rsync probably have specific optimizations for local transfers. Until we can figure out the exact cause of the problem, this workaround fixes the problem for me.
Considering that the rsync you're using is an open-source software, it's quite easy to get accesso to related source code. 
So you're lucky, as your error message is used in a single fragment of a single file. Nameli: flist.c. 
It's relatively easy to guess that the routine containing the error message (lines 325, 326, 327, 328) is named flist_expand and sounds like something needed to ensure that the whole file list (to rsync) can be held in a properly sized in-memory structure (aka: the more files you need to rsync, the more memory is required to handle rsync-computations, and as such a list is not known "in advance", it need to be dinamically computed, by allocating proper chunks of memory to a "list" [more or less]).
To attach to a running process by PID may require root permissions, though that can be changed (by root).
I had the same problem and managed to get around the problem by doing the transfer remotely. For example, instead of doing rsync -avvxAX source/ destination/, I did rsync -avvxAX source/ root@localhost:destination/
So, I would bet that your problem rely NOT on the size of data you're rsync-ing, but on the number of files. I'd try splitting your rsync in multiple sub-rsync, by focusing on internal subfolders.
Using rsync to transfer content to an NFS folder is likely to be very inefficient.  Think about what's involved when rsync wants to get a checksum of the remote file, or to modify a remote file in place.  You're far better to have rsync talk to an rsync process running on the file server.  If at all possible I'd change that first and then look to see if your current problem still exists.  I.e. use rsync over ssh or run an rsync daemon process, and leave NFS out of the picture entirely.
After downloading the main .tar.gz and applied the Ubuntu patch (rsync_3.1.0-2ubuntu0.4.diff.gz), you end up with exactly the code underlying the rsync you're using. Something like this: