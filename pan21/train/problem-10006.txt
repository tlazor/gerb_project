Even better is to decide to start with a config management system and not hand-edit files.  Then you have a documented and version controlled description of what has been changed from the default system and can easily build or re-build a system to the correct state.
The alternative is to try and remember all the changes or remember to document them separately so that the next time you need to add or replace a system you don't have config regressions and have old problems come back that you forgot about.
Both Puppet and Chef are even capable of handling the IP and Hostname bits pretty much out of the box, and examples of usage abound.
Cloning can certainly work although my preference is to investigate the auto-install script option for the OS (Kickstart for RH type systems, AutoYAST for SuSE, I don't recall what the current preferred Debian solution is.)  I find it easier in the long run to maintain the auto-installer and post-install scripts which configure the system to the local standard, which incidentally document very exactly how the systems are built so that the next system you install is guaranteed to be built the same way.
If you want to just deploy the image without post-configuration for network settings, you could configure your base-image to get all its network settings from a DHCP server.
You should investigate deployment solutions like Chef, Puppet or radmind -- These are all designed to help you make a bunch of servers follow a standard configuration/template.