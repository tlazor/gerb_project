I also added the finally block, so the Scanner gets closed. data is a bad name (it could by anything), so let's call it just scanner. Simple and understandable. The method is still too long, so I'd extract one more method, so that the try{} block contains just readScoresFromScanner(scanner);.
As you are using arrays, you need to know the total number of scores in advance. That's not necessary. Collections make your life easier. Assuming you remove the number-of-scores from your input file, you can write:
This program has only one method. Split the functionality into many small methods, one for each purpose. For example: reading the scores from the file. This is easy to extract as a method:
Of course, now you need to make some changes to the rest of the code. It will make the code more readable:
This program takes a file from a user, "example.txt". The file contains only positive integers, and the first interger in the file is stating how many intergers come after that integer (Ex. 3, 45, 98, 102) It is safe to assume everything in the users file is properly formatted and they put .txt at the end. The program is pretty simple for the most part, it was mainly to practice Array's, but I'm curious if I can cut this down a bit, or if I over-complicated anything. This code works by the way.
The code that sums up the grades is very verbose and redundant; try to avoid if-else chains and replace them with, for instance, loops. Use an array or list instead of gradeA, gradeB, etc. A hint: