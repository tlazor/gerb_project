So it's a possibility that when innodb_max_dirty_pages_pct is reached and background process starts trying to find pages that could be written on disk but can't because correspondent redo log records are not written from buffer on disk, it may then trigger redo log flush, maybe causing a temporary slowdown of foreground operations. (But hardly it could happen with buffer pool large enough.)
I think innodb_max_dirty_pages_pct still has something to do with redo log because dirty page can't be flushed before correspondent log records are already written on disk (I can't find confirmation in docs but it seems likely because otherwise database restore procedure would have incoherent set of log data records).
First thing to understand is that redo log buffer and log files don't contain the same type of items as buffer pool and data files (see here). No items are ever copied from redo log to buffer pool or from buffer pool to redo log. Therefore, both your views of the relation between them are incorrect.