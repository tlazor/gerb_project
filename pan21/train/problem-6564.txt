It covers the basics on the Referral Process, and then shows how to use various tools including dfsUtil and dfsDiag to discover the actual cause of the delays.
It helped me find my problem. Which turned out to be no Read permissions on the the share directory for Domain Users.
I know the original poster was not using WINS, but I am posting for the benefit of others as we used this post the most to help solve a very similar problem.  For us it ended up being someone decided to name their workstation with the same name as the domain.  So, every time the DC did a lookup on the domain name for the DFS referral, it was wanting to resolve to that workstation and would cause a considerable multi-10s of seconds delay.  A static 20 entry was placed into the WINS pointing at a DC and this has solved the problem.  If you had no WINS, you could experiment with placing the domain name as a machine name in the LMHOSTS file pointed to a DC to get the 20 lookup, and set priority to have LMHOSTS be the first place to look at for resolving netbios names.
You mention that you have 20 DFS servers yet fail to mention if all the servers are in the same facility.
If these servers are not in the same facility and each other site has it's own domain, you may want to make sure client failback is enabled.
Possible solutions?  A hacky way of going about it might be to write a small program that does a "keep alive" every few minutes; e.g. a C program that fopen's the first file it finds and immediately fclose's it.  I haven't tried or tested this, and you would definitely need to give some careful consideration if you were going to do it.
The client caches a DFS referral, i.e. when you enter \domain.name\namespace it will cache which actual server domain.name refers to.  Once the referral expires from the cache, the client basically has to "discover" your DFS topology all over again, hence the delay.
Have a look here: http://technet.microsoft.com/en-us/library/cc758234(WS.10).aspx and here http://blogs.technet.com/filecab/archive/2006/01/20/417832.aspx for further info on how this works.