Storing the completion information in a local file is a simple and perfectly acceptable method of doing so. Fundamentally, this is what every game will do to track progress (in some fashion, although the specific formats used for the data and the storage mechanism will differ).
If you are absolutely concerned about tampering to the point where is must not happen (for example, where there is an advantage to be gained by a player who has more levels completed), you need to store the data server-side. Anything stored client-side can ultimately be compromised and shouldn't be trusted: it's the user's machine, in the user's hands. The control dynamic is just not in your favor.
Protecting the file from tampering is more difficult. If there's no compelling reason (no advantage to be gained by the player, no rewards, et cetera) you can usually get away with not caring. 
It's not strictly impossible to hack files stored server-side, either, of course, but it's much more difficult if you've got a reasonable accounting system.
But if you do care, and you and if you can reasonably expect that your platform is closed (consoles and non-jailbroken-iOS devices, for example) you also don't need to worry too much. The user will not normally be physically capable of accessing the file to tamper with it (provided you use the appropriate OS APIs to store the data in "private" locations and public ones (for example, storing this file in the user's iCloud Drive on iOS is probably not a great idea).