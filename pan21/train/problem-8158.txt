As per MongoDB BOL Role-Based Access Control MongoDB employs Role-Based Access Control (RBAC) to govern access to a MongoDB system. A user is granted one or more roles that determine the userâ€™s access to database resources and operations. Outside of role assignments, the user has no access to the system.
Because user security is handled with your application and it's application what contacts the database (not user), you don't need to create every user to the database as a database user.
MongoDB does not enable access control by default. You can enable authorization using the --auth or the security.authorization setting. Enabling  internal authentication also enables client authorization.
However, it is still good practice to create a user for every application that uses the database system, so that application can only use those databases what that application needs to access and do only those operations (insert, delete, update,...) what that application needs to do. Nothing else.
MongoDB grants access to data and commands through role-based authorization and provides built-in roles that provide the different levels of access commonly needed in a database system. You can additionally create user-defined roles.
A role grants privileges to perform sets of actions on defined resources. A given role applies to the database on which it is defined and can grant access down to a collection level of granularity.