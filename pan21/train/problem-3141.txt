Basically when you run many application on a single threaded cpu the operating system switches the cpu between the application.This is done so quickly that an illusion of multitasking is created. So basically what happens is that the cpu gives its cycles to the required application and then moves to another and then back to first application. This all is done by operating system. When the cpu switches to another application which is running concurrently the state of pervious application is saved so that when the cpu comes again to that application it remembers the state of application where it was left. 
I'm not sure what you have in mind, but it brings to mind the user perception that applications are running in parallel. This effect is achieved by interleaving the demands of concurrent processes at such a rate that it looks like every, or at least most, processes are running at the same point in time.
hyperthreading most likely, with modern systems - in short, part of, but not whole core is duplicated so more threads can be run, per core
Incidentally, in Unix parlance the focus shifts to the perception that the system appears dedicated to each user's requests. We call this simply "multiuser."