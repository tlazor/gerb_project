At the very least, once you start commenting, your code becomes more understandable to someone who has not seen the code before.
You could create a function called onInitSocket. You also have a another callback inside this function to handle the readFile callback. This is a smell. You could handle this case using promise or using the async module. I recommend the latest in your case in order to not change the paradigm. You also have a variable called hs. If you split your code in functions and later in different file, it won't be so obvious that this name refers to handshake.
Overall, make sure your code speak for itself. You should only have to use comments when the code needs to be unclear (algorithme optimization for instance).
As I spent time commenting the various sections of my code and trying to group them, I realized that some things may be retrieved from other files, and some things may be moved to another file for more streamlining.
The purpose of this is to have the name of the function in the stack trace in case of an error. Otherwise, the function will be identified as anonymous.
Here you know by its name. Therefor you don't need a comment block. This block code block doesn't respect the single responsibility principle but principles are meant to be broken. A 2 lines function doesn't need to be splitted.
Before trying to split the program into separate files, I would suggest first commenting your functions to explain what they are accomplishing in the context of your application. Then, add comments that group things under a specific "section", e.g.: