Alternately, you could dump each table to CSV then COPY it into PostgreSQL, after manually converting the DDL.
Slowly changing dimensions are designed to capture exactly the information you are talking about (with "snapshots").  You will need to use some sort of extract, transform, and load (ETL) tool, to load these dimensions.  It's not a quick fix, but I think it will give you a more reliable platform for your reporting.
Use a second SQL Server instance or a second database on the same SQL Server instance. Back the DB up and then restore the backup to the other DB to provide you with a static copy for reporting.
My first thought is that you could use a Foreign data wrapper to query the MS SQL Server directly from Postgres.  On the other hand when I read this last part of your question, I want to say that you need to start exploring data warehouse models for your reporting database.
Or am I looking at this the wrong way? Is there a way to save a "snapshot" of the SQL Server DB that can be manipulated in Crystal Reports? The ultimate goal is that since the DB is dynamic we need to be able to have a static DB at the end of the month that all the reports can be ran on without having to worry about it changing.
This sort of thing is possible, but painful, with ETL tools like Talend Studio, Pentaho Kettle, or CloverETL.
Either way, DDL changes will be painful to keep in sync. You'll be way better off just using another MS SQL Server DB for your reporting server if you can afford it. Compare it to the cost of developing and maintaining the data sync you need.
This would be true for any pair of DBs, it's not just PostgreSQL or just MS SQL Server. If you were asking about dumping PostgreSQL to a reporting MySQL instance (not that I can imagine why you'd want to do that, but anyway...) I'd be answering much the same way: don't.
The company I'm working for has a SQL Server with read-only access. They use Crystal Reports hooked up to PostgreSQL for reporting. Is there any way to make it so I can move all the data from the MSSQL DB to PostgreSQL without user interaction? That seems to be the caveat to what I'm trying to do. They need to be able to run this report after I leave without having to interact with it during the process.  