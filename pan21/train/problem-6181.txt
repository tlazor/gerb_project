The solution is to use multiple IP addresses, then bind individual sites to individual IP addresses.  You should then be able to add site-specific certs to each individual site.
So if you have multiple sites on a single IP (aka virtual hosting -- for example, the server is www.mysystem.com, and has a virtual site of www.foofoo.com), there is no way for the server to know at SSL-link-time what site the client is going to ask for.  This is important because if you have different site names, you (probably) have different SSL certificates that you want to present. 
So the server is only going to present a single certificate, which relates to the default site on the IP address.  This will cause problems if the client is requesting an object from www.foofoo.com, when the server's default site is www.mysystem.com.  In other words, the user is going to get a browser error window saying the presented cert doesn't match the requested site name.  (Now we all know the user is 99% probably going to ignore this error page and click through anyways, but it is still unprofessional-looking.  And will scare off 1% of the customers trying to connect.)
SSL certificates are exchanged between client and server before the client asks for a particular object.  This is important because one of the qualifiers to the object is the server name.  When multiple "names" are put on a site with a single IP, the server uses the requested server name to figure out which object the client really wants.