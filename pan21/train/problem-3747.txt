There are some tricks out there you could try, but they are only to be used if you absolutely cannot update the code which queries the view.  I would not rely on them or recommend them for any future or current development.
The moral of the story is that you can not ORDER BY on a view -- you never really could.  All ORDER BY statements must be performed by the query which queries the view itself.
Why does is this allowed in SQL 2000?  It's a peculiarity of the SQL 2000 optimizer, and your noncompliant code was "getting away with it".  Think of it this way -- the designers of SQL 2008 (2005 also exhibited this behavior) had to make a choice as to whether or not they were going to make views run fast and ignore code like this, or if they were going to slow down view execution just to support invalid coding constructs.
It's not sorted because ordering by views something that is not legal.  In fact, if you try to ORDER BY a column on the view without the TOP (100) PERCENT statement, you will get an error.  Why does SQL Server allow TOP and ORDER BY?  Because if you were to select anything other than 100% of the rows, your ORDER BY would essentially be used in conjunction with TOP to filter the rows.