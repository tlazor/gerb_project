The question does not indicate if the string will contain characters other than "()", yet the example shows only "()" and your solutions count characters other than "()" as ")" so will assume that the input string contains only "()"
The way the object {openBrackets: 0, closedBrackets: 0} is mutated through the reduce goes against that.
I have noticed that on occasion you use the indexing for in Try to avoid using this loop as it can be problematic if the object you iterate has inherited properties not set as enumerable = false
When using either for of and for in and you don't intend to change the value or key use a const  eg for(const i in brackets) or for(const char of brackets)
Note That you can not use a const in for(;;) loops but let is allowed. for(let i=0;i<10;i++). The reason is that even though a new instance of i is created each iteration and assigned the value of the previous i, the last loop expression i++ is applied at the bottom of the loop block and thus does not work for constants.
Strings are iterable objects so you can avoid the need to use String.split and use the more succinct spread ... operator. eg [...string] is the same as string.split("");
Use the values iterator for of as it avoids the problems that come with for in. It also has the benefit of not needing to index the object for the value