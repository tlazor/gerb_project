Since Hearthstone is written in Unity it is trivial to decompile the scripts (because .NET), and this does in fact allow us to see the algorithm for deck building.
The function takes an argument to specify the number of cards to pick, and it will attempt to randomly pick that many cards matching the first unmatched criteria in the list above; if it cannot pick enough cards from matching that criteria, it moves to the next one and continues until it has enough cards. If all criteria have been processed, it just picks random, valid cards regardless of the type or mana cost. When asking for recommendations, it picks 3 cards; if you ask it to finish the deck for you, it repeatedly picks one card until the deck is full.
This only applies to personal deck building; cards for Arena decks are picked by the server (see class DraftManager), and might therefore follow a different algorithm.
Does anyone have an insight of the suggest a card algorithm in hearthstone deckbuilding? I would like to try to see it that same suggestion can be applied in MtG, having for example to choose your total mana and get suggestions for color, colorless and enchantments/artifacts/sorceries/instants.
The algorithm (found in RandomDeckMaker.GetChoices) is actually very simple. It basically tries to pick random cards to bring the deck to the following distribution: