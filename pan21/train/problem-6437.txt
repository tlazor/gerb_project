The box analogy seems good to me. If you want to continue the programming "language" analogy, variables are pronouns. In English, we rely on people using context to figure out what a pronoun refers to, but in programming we explicitly tell the computer what the pronoun refers to. You could have variable names like "it", "that", "the_thing", "the_other_thing" to reinforce that.
First explain the kid meaning of variable as something that keeps changing (like weather). Then he will get idea about the word and then tell him, in CS how we assign a value to the variable and how we are able to change it afterwords
From there a programming variable just lets you use the same place holder repeatedly.  (While the same is true of variables in math systems of equations, etc are probably a bit too advanced for the average 9 year old.)
Finally, repetition is your friend. My child started to understand these concepts after we've done several algorithm lessons on FreeCodeCamp. I cannot remember how often I repeated the concept of assignment to my child (always in a different programming problem) until he started to understand it.
A completely different strategy would be to learn the assignment construct by heart. Of course, she should only learn the building blocks (e. g. the syntax and meaning of assignment to a variable) of programming by heart, NOT the solutions. You can add an Anki card with the following contents:
It is also helpful to explain to the child that the assignment operator (=) is better represented by an arrow (<-).
Something else to consider is to ask her how to do something. "Play dumb", so she has to be really explicit. If you choose the task well, she will repeatedly say things like "Take the thing that you got in step 4 and ..." This will then lead to the concept of "What if we could just use some short name, instead of having to say 'the thing you got in step 4' each time?"
It might be a bit indirect but around that age I bootstrapped myself from fill in the blank math problems through basic algebra to more generalized variable use.