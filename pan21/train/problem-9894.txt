I want to be able to do all of the graphics with SVG and need joystick input. I also need the libraries I use to be opensource and compatible with the BSD license.
Web browsers are fast if they render a webpage in less than 500ms or so. SVG images may take 20ms+ to render, and that's for small, simple ones. Something you might find in a game, a non-graphically-trivial game, are going to take much, much longer. SVG image rendering is not intended for fast animation.
If you were to use the SVG files to make your original content you could then have a pre-level/area generation phase with appropriate loading screen/cut-scene where you would use the SVG content to render standard images of the resolution you need, this would allow you to code simply with normal images as whilst retaining the flexibility of the SVG for multi-resolution targeting.  It is not idea but this way you can leverage the hardware to play with the prerendered images in the way it was designed to do, rather than trying to generate content on the fly from SVG files.  As the computer would only be displaying the loading screen/cut-scene you could dedicate a huge proportion of available resources to generating the standard images from SVG and therefore do it in a fast and efficient fashion.
In short, I would ditch SVG entirely and see if libCairo can serve your needs. That's just for evaluation purposes, to see if it performs fast enough in circumstances that approximate the purpose you intend for them. Once that's determined, you can decide what to do next in terms of technology (Qt, SDL, whatever).
I'm hoping to avoid Qt because of the size and complexity of making it a requirement. Also, Qt does not seem to have joystick input support, which would require that SDL or some other library also be used.
In regards to this SVG is not the best for generating on-the-fly content and for real-time rendering, even in 2d, however....
I don't see any reason why you couldn't use SDL or another input library with a 2D graphics library like libcairo.
Sure, SVG is a complicated specification to implement on a basic "getting the XML into memory and validating it" level. But I don't think you fully appreciate the simple fact that SVG rendering is not fast.
Even something lower-level like libCairo isn't exactly a high-performance renderer. Sure, it's fast enough for a browser, but it isn't exactly blazing in its software-rendering performance.
I'm familiar with allegro, ClanLib, and SDL. As far as I can tell, none of these libraries have built in or obvious integration for SVG. Also, I'm aware of the previous conversations on this site regarding Qt for SVG game development. 