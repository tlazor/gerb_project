I could even pipe scripts (shell/python/php/etc) or commands to IoT devices anywhere in the world over ssh.
That way I could use any framework (like bootstrap or materialize css) to quickly create a web-gui that works in most modern browsers, on almost any screen size, on Windows, Android, iOS, MacOS, Linux etc. without much trouble. 
I'd use jquery/ajax and html form-controls to submit requests, and to echo stdout/stderr to the web-gui without reloading the entire page every time.
I'm a final year Computer Science student who is planning their final year project. My idea is to create my own custom Android App designed around providing a simple user interface for those on the autism spectrum to control iot devices. I want to use this app to control a raspberry pi that will act as a smart hub to control smart plugs, lightbulbs etc.
At the moment I'm not sure how difficult it may be or if it is possible to complete this project and was hoping to find insight if it is possible and where I could start?
Going this way I could even write platform-specific apps at a later time, that talks to the same endpoint that I wrote for the web-gui.
Opto-isolators can easily be used to switch almost anything on/off with very simple scripts using gpio.
Then I'd use server-side scripts (php/nodejs/python) to write a simple endpoint that translates between web-ui and the server-side shell.
The way I tackle such a project is to split it into modules: hardware and software. I usually start out with the hardware module. This basically means to make the hardware works as I want. A hardware as you mentioned in your OP, i.e. controlling a light bulb, etc., usually comes in as a whole package ready to use and requires writing up some software interface to control it. The software module, i.e. GUI, etc. can be done either through a web page on a server or a program on a (Android) client. The later is a stand-alone Android application that can be accessed by merely launching the application on any Android device. OTOH, the former requires a working HTTP server to host the GUI page and requires an adequate web browser. Not only your end users will probably be more happier with the former, but also it will probably be simpler to write up a simple Android application.
Like someone else mentioned, you should be sure you look at the different protocols used by all the devices you need to control.