While I am not aware of any such results, other than your own, I think you could broaden the scope somewhat and ask: what results in TCS have been proved using (any kind of) non-standard axioms. By non-standard here I mean something other than classical logic with ZF (or ZFC).
I recently attended a talk with one such result, for the determinacy of one-counter Büchi games: Olivier Finkel, The Determinacy of Context-Free Games, STACS 2012, http://drops.dagstuhl.de/opus/volltexte/2012/3389/pdf/5.pdf.
Also, Alex and I used intuitionistic axioms with anti-classical continuity principles to show results about Banach-Mazur computabilty.
However, none of the mentioned examples have an "open" status, like your proofs, because we know that the non-standard axioms we used can be understood simply as working inside a model of intuitionistic mathematics, where the model can be shown to exist in ZFC. So the non-standard setup is really a way of getting things done more elegantly, and in principle they could be done in straight ZFC (although I am afraid to think about how exactly that would go).
A lot of constructive mathematics. See Per Martin-Löf's work on constructive set theory, used as a basis for dependently-typed programming languages.
A coding of the integers is a uniquely decodable binary code of $\mathbb{N}$. If the length of the codewords is non-decreasing we call the code monotone. A code $C_1$ is better than a code $C_2$ if $|C_1(n)| - |C_2(n)| \rightarrow -\infty$. In other words, for every $L$, from some point on the codewords of $C_1$ are at least $L$ bits shorter.
A set of codes $S$ is called cofinal if for every code $C$ there is a code $D \in S$ which is better than $C$. It is well-ordered if it is well-ordered with respect to "better". A scale is a well-ordered cofinal set of codes.
A beautiful example of the kind of work I have in mind are Alex Simpson's results on properties of programming languages using synthetic domain theory. He uses intuitionistic set theory with axioms that contradict classical logic.