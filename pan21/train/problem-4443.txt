Finally, be wary of savvy users hacking the game if they see class names inside of the plaintext save files. There's no need to forcibly make single-player hacking impossible, but you might just want to obfuscate the save files a little bit to make it difficult.
I'll also note some people are going to be concerned over excessive use of type-checking; that's eventually going to lead you to the massive switch statements you were trying to avoid. Example: Instead of having a player collision method that checks if something is a spider, and damages the player, try having an onTouch() method for each object, that does nothing for most objects, and damages the touch-er inside the Spider class. (then, if the touch-er can't be damaged, you can just have their damage() method do nothing)
The toString() part on its own doesn't seem so bad. I think one way of handling the re-loading of the objects would be through use of Reflection.
and when loading have the hashmap (or just an array if you can ensure the order will remain the same ;) ) contain the Entity factories that creates a blank entity on which you can call load(SaveChunk) which will configure it (as a bonus this allows pooling when GC pauzes becomes too much for ya)
you can also use getter methods that return parameters like base movement speed for use in standard methods