B - This is the Team Project folder.  In the big picture it is simply just a folder under the root folder that has a fancy icon; however, it is special in that the only way you can create a folder at this level is to create a new team project.  The name of the folder is always the same as the name of the team project;  in your case, the name of your team project is: CustomerTools. A team project is a container in TFS that stores user data related to source control, work management and builds.  It has a lot of different parts and one of the parts is this folder. There are some defaults and hooks into that folder that relate to the other parts of the team project, but as far as source control activity goes, you can think of it much like other folders you'll find in TFS. An important thing to know and consider about source control in TFS is that no matter where something is located in TFS (regardless of the team project), everything under that root folder is all in the same isolated repository and you can access any file or folder in the whole repository as long as you have permissions to it.  The permissions can be modified by any administrator by right-clicking on the file or folder and using the options in it's properties dialog.  You can also modify these permissions through the command line (see the TF.exe permission command and TFSSecurity.exe utility).
So in the example you have above, I would say go to tfs Collection, CustomerTools Project, and  the Database Branch.
For me I typically go for what they represent inside of Team Foundation Server. For example "A" is a Team Collection (or Collection for short), "B" would be a Team Project (or Project for short), and "C" could either be a Folder or Branch.
Customer Tools looks like what other SCM systems call a "project", so unless a TFS guru says different that's what I'd call it.
I've seen this button on the Team Explorer window which suggests that thingy B is indeed a Team Project.
A -  This is the root node, which is also referred to as "$/" So, the path you have in the picture (A\B\C) would be $/CustomerTools/Database
Prior to TFS 2010, the root folder resides at TFS server level, so $/ is techncally the server root folder. TFS 2010 introduced a new concept named a Team Project Collection (TPC), and so in later versions $/ represents the root of the TPC;  These later versions of TFS can have multiple TPCs which are really just SQL Server databases; each TPC has it's own root folder ($/).
C - As @Tyler mentioned, this could be reffered to as either be a plain old Folder or a Branch.  Prior to TFS you would only be able to tell which it is by investigating the properties a little;  In TFS 2010, they started distinguishing a branch from a folder by using a different icon to indicate that something is a branch (a folder still uses a folder icon).  You can see examples of each in the graphic below.  As far as these folders go, you can think of them much like you think of folders in Windows Explorer; they are used to contain/group/organize and secure files (or other folders or branches).  You can have a heirarchy of folders in your source control path, but the total path length should be less than 259 chanracters long or you might have trouble with certain operations (especially builds) when using TFS.