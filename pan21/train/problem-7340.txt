That said, ensure that the blacklist option is specified for the interface from which the nuisance traffic is arriving, or the blacklist won't be checked for any traffic coming in on that interface.
Your Shorewall configuration appears as though it should work but shorewall is a twisty maze of minor releases and changes so it's difficult to be sure. On later versions you need to edit /etc/shorewall/zones and add blacklist to the IN options to enable blacklists for a particular zone. Even later versions use different files and remove the /etc/shorewall/blacklist file completely. You would be better off upgrading to a newer version.
Having said that, having an sql server on the public internet is not a good thing. You really should have it properly firewalled with a whitelist or better still have it available only over a VPN with the public internet completely blocked.    
If the host originating the bruteforce attack is under your control, address the root cause (either a compromised machine or a malicious user).
Typically, a better strategy in this case is to be proactive.  There is very rarely a case under which it is necessary to expose a SQL server to the entire public Internet; consider using a VPN or a firewall to restrict access to only those hosts (or networks) that have some reason to be connecting to it.
We are getting dictionary attacks to our SQL server, So I wanted to block some of the IP's using shorewall blacklist.