It depends on the proportions of count and max, obviously, but most importantly on the behaviour of the random number generator. ECMAScript leaves the behaviour of random() to the implementation, so there's no immediate answer; it would be platform dependent. 
Expressed in Python, because it lets me have less fluff around the algorithm, your two algorithms are basically:
As for the random number generation itself, that's a rather complex field. The Linux man page for random(3) suggested a book (Numerical Recipes in C: The Art of Scientific Computing) with a chapter on that topic. 
This version completes in O(nÂ²) time, with limited memory usage and only count random calls. If count>max only the first max elements are randomly ordered; the rest are simply an incrementing series. That's unexpected behaviour, so a guard makes sense. 
A rather infamous example of failing to devise a fair algorithm for this - which also did show the browser dependency in Javascript - is the browser ballot that resulted after a judgement against Microsoft regarding anti-competitive practices in the web browser integration for Windows. Rob Weir's article Doing the Microsoft Shuffle: Algorithm Fail in Browser Ballot covers the details, and is an interesting read.  