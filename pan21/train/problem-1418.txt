We had a need for this an extrapolated a solution for our own system based on instructions on this post. If this can help anyone reach their goal in an even easier way.
Since you want to keep the "Posted by =User #123=" information after you delete the user with id=123, you could also consider using 2 tables for storing users data. One for Active users  and one for all (including deleted ones from the active users). And never delete those ids from the AllUser table:
Just don't delete the user.  Relational integrity is more important. If you have to because of privacy reasons or whatever, simply change the username to 'deleted' and clear out any other fields.
2) One solution is to use a dummy row to your data, to keep the AUTO_INCREMENT above a certain value. Not super convenient depending on what you are storing, but is a simple solution in some cases.
Our system uses a tombstone table pattern to store deleted items because we do 2 way sync on disconnected systems, so we use this code to match the tombstone tables with their live tables and extract the highest value possible :)
This will of course complicate the insert new user operation. Any new user will mean 2 inserts, one in each table. Deleting a user though will be by deleting from the ActiveUser table only. All FKs will be deleted with cascading, except the forum posts, which will be referencing the Alluser table (where no deleting will ever happen).