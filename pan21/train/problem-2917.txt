I primarily work in a startup environment. My current organization is a startup, and a previous business model was consulting startups. The biggest key to organization was outsourcing data center operations to dedicated hosting companies like Rackspace and Servepath, and also using cloud and virtualization technologies such as Amazon EC2 and KVM.
It's much nicer than a previous position where our servers were at a hosting center, but we had to physically manage everything (which resulting in cable messes, despite best efforts and proper labelling).
One addition is to make sure that every cabinet door can be closed, i.e. no bodge jobs connecting device together that bypass the structured cabling. If one is allowed, then others will follow and ultimately you end up with a mess. Before any changes are made, make sure that you can achieve it with structured cabling. If not, you need to re-plan it properly, free up dead ports etc. If not you'll end up with a 20m cable chucked over the top of a row of cabs that is doing something important.
Set things up so that your cable runs can be as short as possible.  If you can get a space of 1U left between each patch panel in the rack, that's a great place to put switches and it means that you can use quarter meter lengths with no trailing whatsoever, and no need for cable management either (you don't need to manage what isn't there).
FULLY DECOMMISSION OLD GEAR!  If a switch dies, don't leave it in the rack and put a new one in wherever you have space - haul it out of there.
Separate things out into different racks if possible.  If not, at least arrange them so that, for example, all switches for the first floor are physically located together.
Nearly everything you can do has been mentioned already. It all comes down to being methodical and strict. Having to hand trace a cable at 2 am, armed only with a tile lifter and a torch is no fun at all.
I haven't had to trace a cable in almost a year, and finding systems is a matter of looking at the master server that tracks all the nodes that check in for their configuration.