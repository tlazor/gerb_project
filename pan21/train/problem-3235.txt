Also you can disable route path filtering with net.ipv4.conf.ethX.rp_filter=0 in /etc/sysctl.conf - this also can do the trick.
In linux, you should be able to handle this by creating a second routing table that specifies the gateway on the public network side, whatever it is, and then a policy routing entry that says that anything with a source address of  should use that routing table rather than the system default one.
If you have no gateway set for NIC1 then it will only be able to respond to hosts on the same IP network (i.e. 74.xxxxxx) and on the same physical network segment.
What you need to do is have NIC2 be the default route via 192.168.3.1 . That should cause all outgoing connections, except those for 74.xxxxxxx to go via NIC2 and use 192.168.3.1 as the gateway.
You don't apply a gateway to an interface as such - you apply a gateway to a routing instance - generally, unless you've defined multiple routing tables, just one. 
You also need to add a route for the 74.xxxxxx network, that uses NIC2 as its interface and 192.168.3.1 as its gateway. That way anypackets that are destined for the 74.xxxxxx network will also go via NIC2 and the 192.168.3.1  gateway.
What's probably happening right now is traffic is coming in on the correct interface, and then, if it's a non-local address, it's going out the default route to another gateway, which is probably a firewall that's dropping the packets because it's not seeing the other half of the session.  The reason it works from other devices on the same public network you are using is because they don't have to go out the default route - they have a more specific interface route to use, which gets the return traffic to where it needs to be correctly.
You need to remove the route for 74.xxxxxx that uses NIC 1 or you need to have it have a less favourable metric than the route via NIC1 and 192.168.3.1 .
Try to add default route with high metric on NIC1, it allows answering on requests, but OS will still route outgoing connections on default route with lower metric.
Assuming there is actually a gateway on each network, and you are just trying to define a specific behaviour (regular host traffic going out the private network, but public facing traffic sending it's return traffic to the gateway it came in on) - you need some kind of policy routing based on source address. 
If I understand correctly you the NIC 1 IP to listen on 80 and 443 and respond only to incoming reuest on 80/443. You do not want NIC to be able to initiate/start any outgoing connections.
Assume you have a Linux system with more than one network interface card (NIC) â€” say eth0 and eth1. By default, administrators can define a single, default route (on eth0). However, if you receive traffic (i.e., ICMP pings) on eth1, the return traffic will go out eth0 by default.
Google for "iproute2 policy routing" and look for "simple source routing" or somethign similar - it should get you where you want to go.
You do not want the two default gateways you have specified now  - that's going to create strange behaviour - drop the public one from the configuration.  It should go in it's own routing table via the iproute2 mechanism.