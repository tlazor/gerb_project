How ever in some cases, you can loose the quality like screenshot, some image format or bugs like this one
It depends on the type of image and the data contained within it, but looking at the source code that handles the "Copy Image" functionality on Windows as well as looking at how the Windows clipboard API works, there is a conversion done on the data to put it on the Windows clipboard, more specifically, Firefox puts the image into a BMP MIME type (via this line of code nsCOMPtr<imgIEncoder> encoder = do_CreateInstance("@mozilla.org/image/encoder;2?type=image/bmp", &rv);, and while they support the DIBV5 format (which gives more color space and alpha information), I suspect there's a bug elsewhere or the encoding need be changed in the code to support more formats (like GIF/PNG with transparency). As it turns out the transparency loss has been a known bug for some time now without resolve.
This really only applies to JPEG files and not normally to GIF or PNG since they will generally be treated in a lossless way unless some other optimisation is applied.
On the other hand, if you load the image file into an editor and then save, you will loose something unless you are using a lossless format.
So when you copy a file into the Windows clipboard, you should be copying all of the data without interpretation and should not loose anything. Of course, when you then save the file, you will loose something at that point.
When copying and pasting is 100% of the data maintained? For example In Firefox, on Windows, when copying an image and pasting it into Photoshop, is the quality the same then if you did the long way and saved the image and reopened it in Photoshop? 
When you copy a file using the operating system there is no recompression and no further loss. That is because you are copying the whole thing and not doing any processing on it.
So while you might not see image quality degrade for most of the images on the web, to answer more directly: no, 100% of the data is not maintained when you do a "Copy Image" vs. "Save Image As.." (especially for image types with transparency).