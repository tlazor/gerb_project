This function definitely needs to have a docstring, as it's not obvious what it does.  The description you wrote for this question would make a fine docstring.
Naming the parameter scores feels wrong to me.  Isn't this function taking readings and producing scores?
The number of minutes in a three-day period is 4320.  For each of those minutes, you reexamine the entire data set!  That is massively inefficient, and calls for a complete rewrite.
Assuming that the input is in chronological order, this function should be a generator.  That is, it can yield the per-minute summaries rather than building a list of the entire result set.  (The caller has the option to make a list, if needed.)
Fundamentally, the task is to group the readings by the minute, then take find the proportion of readings within that minute that are S or R.  You should be using itertools.groupby() and statistics.mean().
A nitpick I have is that each measurement and result would be more appropriate as a tuple rather than a list.  Aside from the fact that tuples are immutable and lists are mutable, what's the difference?  Lists should be used for homogenous data, and may contain an arbitrary (growable) number of elements.  An n-tuple, on the other hand, consists of a fixed number of elements, possibly of different types, like your (stage, time) inputs and your (day, hour, minute, sleep_per_minute) outputs.