Define engine, then define graphics engine. If your using an existing engine to make a game then that isn't the same as writing a game from scratch in code. If through code one can define what is graphics or engine, doesn't matter what you call it if your code is strong. Creating games in said engine, its limits and or its strong points are based purely on the programmer(s) ability. Using something like Unity or even Unreal or any other pro engine doesn't define your ability, game engines are just abstractions coding in say pure C++ is not. You can for example hire programmers hell even artists but you would be limited to the vision or limits of the engine. So it is better to code from scratch then use something already in existence. Problem is you won't find answers online like the Stackexchange I doubt many people have even bothered to code a game let alone finished a 2d project. I'm just procrastinating a little, meaning that not many self serving answers spell it out. The best way is study and practice!
A lot of times, game engines would not fulfill 100% of the requirements and specifications of a game project. This is especially true for triple-A titles that are always pushing the boundaries of games technology. If some of the graphics part of the game engine does not match what the artists and designers want to achieve out-of-the-box, they might hire a graphics programmer/specialist that can help them figure out whether their expectation is feasible, and if it is, how to achieve it. It might involve tweaking the shader/art assets, or reworking parts of the rendering, or even using a middleware. Or a combination of them.