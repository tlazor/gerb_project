While you won't be able to read the source, there are several books which go to lengths to explain how things work.  Windows Internals (5th edition I believe is the latest) is one such.
Microsoft has been trying to determine how best to deal with the open source movement for years: confront, ignore / ridicule, or embrace?  They have tried them all, time will tell how they decide to proceed in the future.
Will it be as transparent as Unix or Linux?  Probably not.  Will it give you a much more in-depth understanding of how Windows works?  Probably so.
Not so much.  To enable transparency, you have to allow people to look in and see what you are doing. Windows is currently closed source & there is no hint that will change any time soon.  That said, Microsoft has made headlines recently releasing Hyper-V and an sdk for facebook and a few year ago pushing the OOXML, not without controversy.
If Unix was not transparent and documented during the closed-source period, how did Linux ever get written to start with? How is it that it's a rather 1:1 clone of Unix?
The answer is that Unix had a clean, simple, inspired, elegant, easily-documented design. That's why it's transparent, and that's why the open-source clone Linux was able to be written.
Sure, the proprietary nature of Windows handicaps understanding a bit. But if Win was totally open-source it would still require ten or one hundred times the effort to understand Windows vs Unix.
Recently, I've been trying to learn more about the inner workings of Unix.  One really great feature I've found about Unix systems and the C programming language, is that there is a great level of transparency.  By design, this transparency is not available for languages like C# or Python, but can this same 'transparency' be found for Windows?
Windows is a beast of staggering complexity. They probably couldn't reasonably document the whole thing if they wanted to. The Windows kernel has a totally different interface than Win32 and the other API layers that Microsoft publishes. 
It's mostly unrelated to closed-vs-open source. And BTW, don't blame Microsoft for keeping their most important piece of technology proprietary. They wrote it, they have every right. It's a perfectly valid choice.