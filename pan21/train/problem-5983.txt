I am putting together some documentation of best practices that we should be using, fixes to problems discovered, and methods to prevent issues from occuring. At the moment my managers are reluctant to patch the DB Servers (OS and DB Software), which I believe is insanity but they are senior and "know best".
Any help would be greatly appreciated as I believe that they should be patched to at the least the most recent SP and perhaps the second recent Cummalative Update, but I dont have any form of best practices to base this on so would be most keen to learn what people do.
Yikes. Well you definitely want to patch them as SQL Slammer et al operate BEHIND the firewall so .... Anyway, "back in the day" I would manually patch them from the SP's that come out from time to time after testing on a backup server. Nowadays I just let "Microsoft Update" catch any SQL Server-related patches. Seems to work just fine. 
Our environment is Server 2003, with 5 DB Servers, three MSSQL 2005 and two MSSQL2000. The DB servers are all private and do not face the internet. They are behind our firewall. The fact they are not public is the reasoning behind the managers reluctance to patch the servers.
I always find it interesting when people refuse to patch systems because they are "internal only" and therefore secure.  I guess you have no computer on your LAN that accesses the Internet and no possibility of ever doing something with a piece of software that will trigger a data corrupting, server crashing bug in the unpatched original release of the software.
I am learning how to manage databases for my company and while I have pretty good understanding of using a database, I can definately see that it is completely different administering a database.
List item When do you apply patches (immeadiately, after a couple days to wait for problems to be encountered and documented, other)? 
My possition is we are a small team and we previously had no one manageing the database servers, if something went wrong we would fix it but there was no pro-active maintenance.
Obviously this requires a test system to patch first, but if these databases are as critical as the senior people in your organization believe them to be, I'm sure they have test systems deployed already and ready for testing.  ;)
I will note however, as you mention that your team is new to DB administration, that I find MSSQL to require patches less frequently than Windows. The way it goes for me, I set windows update to "download only" on our test machine, then some night when we're feeling brave we tell Windows to go ahead and install, reboot, then run our regression tests.  
The production machine is set the same way - download only, don't install the patches.  So if our tests go well on the test machine we wake up at 5 AM the next day and tell the production machine to install the patches as well, let it reboot, then do some simple tests to ensure that the app is still working.  We normally do this no more than once per week, as we don't like to wake up at 5 AM, but of course if the description of the patch sounds unusually dire we'll rush it.  