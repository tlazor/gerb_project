This is the decision version of what is sometimes called "Approximate Graph Isomorphism." While I won't say it's been studied a lot, it has been studied. See, for example:
[GRW] show that computing the minimum number of mismatches is $\mathsf{NP}$-hard even on trees. They also show that in the weighted case, it is $\mathsf{NP}$-hard if either weighted adjacency matrix has unbounded rank or negative eigenvalues (so the easy cases are a subset of PSD matrices of bounded rank).
This problem is also sometimes called "graph similarity" (which I consider a much more general term) or "graph matching" (which you'll have a hard time Googling because you'll get a lot of stuff about matchings), and has apparentely been studied more in the ML and data mining literature.
In particular, [AKKV] show that one can approximate the maximum (over bijections $V(G) \to V(H)$) of the number of matches to any constant factor in $n^{O(\log n)}$ time, but that any constant-factor approximation to the minimum number of mismatches is $\mathsf{NP}$-hard.
$IG(f) = \{ (G, H) \mid \forall \psi : V_G \rightarrow V_H, Pr_{a, b \in V_g}((a, b) \in E_G \Longleftrightarrow (\psi(a), \psi(b)) \in E_H) \leq f \}$
Is there any work on this language? The obvious question is whether there exists $f$ such that $GI(f) \in P$. The funny counterpart to this language is
$GI(f) = \{ (G, H) \mid \exists \psi : V_G \rightarrow V_H, Pr_{a, b \in V_G} ((a, b) \in E_G \Longleftrightarrow (\psi(a), \psi(b)) \in E_H) \geq f\}$
Say I generalize the language which consists of pairs of isomorphic graphs to take the following form:
Just wanted to hear the thoughts of anyone who wanted to have a go at constructing algorithms for different constant values of $f$ or perhaps for $f$ as a function of the size of the vertex sets or something.