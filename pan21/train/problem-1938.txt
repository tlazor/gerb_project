One thing to note: IP blocks change their geolocation fairly regularly, especially in these "end times" of IPv4.  Make sure you don't just fire-and-forget this ruleset.  Get updated copies of the geographic lists, and rebuild your filter list based on them.  Otherwise, one day you'll find that a block you had filtered has been taken on by your own ISP, and you'll lock yourself out of your own server because an IP address you had previously blocked got assigned to you.  (True story)
A large number of netfilter rules, which the kernel has to run through for every single packet, will have a negative impact on system performance and resource consumption (both CPU and memory).  The nice thing is that there are a number of tricks which you can employ to minimise the problems.
Yet another way is to use iptables' xt_geoip module. Though I have not tested that for performance against ipsets (if I understand the source correctly xt_geoip uses d&c binary search, while ipsets use hashes). Advantage of this is probably easy updating.
I am running a linux box with FreePBX/Astrisk installed.  I have blocked China and Hong Kong using lists from ip2location. com/blockvisitorsbycountry.aspx website.  My fail2ban was going off like every 3-9 minutes with blocks and now I have very limited attempts usually around 8-10 a day now.  I would love to block more but I fear that if I add another 10k to the tables I might throttle system back to the stone ages.  What do you think?