4 Often c++ programers are better used towards performance based programming, well focus on performance and this won't be a problem.
What the language will have an impact on is the arithmetics. If you want to do a lot of calculation, then you will need to chose a fast language like C or C++. If you only need to do graphics, then any language will do (hell, even Brainfuck for what I care.)
3 You cannot do a clear memory and then rewrhite step approach for example in c++ you might decide to first clear the old map then write a new one in the same memory, if you are using almost all memory this will cause problems, note that you can almost always navitage around this by instead of "destroy and recreate" you can often just rewrite the object instead. 
Java is a bit slower then c++ however this effect is less then people tend to think. There are several points on which it matters: 
1 Calls towards openGL will have to take another extra step this means that if you make many calls towards openGL you pay a small penalty (not that large but it's there).
2 You don't control the garbage collector that means that you will sometimes seem to miss one frame, this isn't that bad but can screw up your game in a multiplayer environment especially when using a lock-step approach for resolving concurancy issues (for example in a rts).
Let me get this straight: render performance is in (almost) no way related to the programming language, but to the graphics API used (Ex: OpenGL, DirectX, software, etc.) The programming language used is only an interface to these APIs and will not affect graphics performance.
If you want to know about fps take a look at for example minecraft and you will see you can get some reasonble performance in java (note minecraft could be optimised a lot more).