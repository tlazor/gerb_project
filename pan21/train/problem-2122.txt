Unless you're planning on moving the entire stack into AWS (which would definitely count as a "massive architectural change" in my view), running your database in RDS isn't going to make any sense -- any benefits you got from it would be more than offset by the increase in query latency (which in turn causes user-visible performance problems).
Basically, given your constraints, you're screwed.  You're looking for a quick fix where none exists (TANSTAAQF).  I can see plenty of ways out of your situation, but they would all violate your "massive architectural changes" edict (most of them aren't actually that massive, but they'd all cost something, especially if you're trying to learn how to do it alongside actually implementing it).  Best of luck.
Also, note that RDS is really nothing more than a MySQL instance where someone else has done the basic setup.  If you want it to perform better than what you could get out of a local MySQL instance, you'll need to replicate the instances and essentially make the same architectural changes to your application anyway.