There is also the post-commit hook option that will keep a checked-out copy of the repository in a mirror directory which you can expose via your webserver, but this is really just a poor man's version of the CGI applications mentioned.
The other options that some people have suggested (WebSVN, etc.) are typically PHP or Perl CGI applications that provide a read-only view of the repository.  Some will let you export whole directories, but they won't let you perform a proper checkout that you can subsequently check changes into.
If you're simply looking to view a repository, simple tools like websvn mentioned above may do the trick. If, however, you're looking to manage a checkout by either committing or pulling a fresh copy of code from a web browser, you could use something simple like a system call in perl via a cgi application. The code could be as simple as stuffing this in a cgi:
I'm confused about what you want to do. Do you want to view a repository? See the contents, see the history, see the logs? If you really want to deal with a checkout instead of a repository, why? What will it be used for? You don't mention being about to edit the checkout, which makes stat a little bit pointless. I suspect there are other ways of doing what you want. Update your question with what you're trying to do and I'll try to give more specific help.
You may be able to use something like PHP Shell (http://phpshell.sourceforge.net/) to do this.  It really depends on the use case.  If you want a secure way to give others users the ability to perform commands on the working copy, your best bet may be a one-off script.  However, if this is only for your own use and you are willing to put up with PHP Shell and having to enter the commands you that you would like to run as if you are SSHed in, then it should get the job done.
If you want to perform a checkout, you have to choose one of the above.  All of these require that you have a SVN client on your client system (the command line interface or a GUI like TortoiseSVN)
You should also investigate the use of svn repository hooks to accomplish what you want (depending on your use case). Using a post-commit hook you can e.g. update the checkout when ever a commit is made to a particular branch.  (Simply use svn look to see if any files from that branch are changed and if so run svn up on your repository.  You may have to use sudo to get the permissions right since the hook runs as your web server or svnserve user.)  The subversion manual is a good resource for learning more about this.