I wrote a blog to show how you can do that easily from a command line that could be added as a scheduled task: http://blogs.msdn.com/b/carlosag/archive/2009/11/18/iis-seo-toolkit-start-new-analysis-automatically-through-code.aspx
In Apache, and I'm sure in IIS (or Apache under Windows), you can trap the 5xx series error pages to your own handler.  If you are running varnish/squid/pound in front, you can set up a fallback host that would display a particular page on a failure.  That fallback host could be a very simple, small stack webserver that would do nothing but set a status of a page you've monitored.  The 5xx handler could intercept and log that data somewhere as well.
I'm not a real fan of the 5xx error generating emails/paging due to the fact that the database server might be down, and every one of your 300k pages might instantly start generating errors.  However, intercepting the handler and using that to write/modify a page or status that is monitored would save you the hassle of spidering a huge sample of your pages.
Malonso solution would be like some kind of 'unit testint' that tests all logic, conections, permisions and so, and give an OK or a FAIL. That, plus, as Kevin says, pulling some critical webpages and see that eveything goes ok...
This will not only give you nice reports you can later analyze, but you can even script it and monitor the number of 404's or 500's your server returns so that you can know which pages are having issues.   
One idea is to use the SEO Toolkit (http://www.iis.net/download/seotoolkit) which will crawl every page on your site and report the status code and the content as well.
Because pages can load correctly but not working fine. Maybe pages load fine, but database stopped and some content is empty, or some modules aren't working at all and some content goes bad...
So I would write some tests on php, or asp or whatever you are using, and also pull pages with NAGIOS or something similar...