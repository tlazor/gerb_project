As is often the case, BOL has a good starting point, with explanation of how it does what it does and what you can change to make it have different effects.http://msdn.microsoft.com/en-us/library/ms177571.aspx. I started with this script and added to it so that all databases are handled (on some servers). I also set a different value for @maxfrag depending on when the scrpt is running - weekends get a low value and weekdays get a higher one and whether there is a rebuild or a reorganize. This ensures the job runs within the time limits we have and that the database doesnt get a big lock
A google search turns up some scripts that run a query against system tables and iterate over the the results rebuilding (or alternatively, reorganizing) each of your database table indexes in turn. This seems reasonable but the he reason I ask the question here is that taking SQL scripts from an unknown source that query system tables makes me nervous, e.g. maybe it will miss some kinds of index or try and rebuild special system indexes that should be left alone. As it happens the first couple I tried didn't work because they didn't handle tables in different schemas.
Ola Hallegren has a mature & well written index optimize script for indexes which i can highly recommend.  It uses the SQL Server 2005 ALTER INDEX REBUILD/REORGANIZE syntax which allows for online rebuilds in Enterprise.
So, what is the consensus on the best and simplest way to rebuild all indexes across all tables for an SQL Server 2005 database?
If you don't want to risk a third party script, the native maintenance plans include the option of rebuilding all of the indexes for each database.  