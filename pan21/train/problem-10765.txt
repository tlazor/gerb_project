Another option would be MonoGame (an open source implementation of XNA). This might be a bit more advanced then developing for Unity3D, but a good option if you are going for a 2D game (MonoGame is 2D only) and looking to learn something new. There are a lot of tutorials and documentation on the net to help with XNA development, likewise with Unity3D.
Other games (like angry birds) are probably a hand rolled collection of libraries (e.g. Box2D) and custom code, and they probably do the porting from one platform to another themselves.
Without knowing which specific platforms you intend to support, I'm going to go out on a limb and say that Unity is probably the easiest and most turnkey solution for getting on a lot of platforms.  
Unity is the easiest platform for such, though I strongly suggest learning (if not known) java, as most (including angry birds) android apps are programmed in Java. In fact I may go out on a limb and say probably more than 90% are since it's the recommended and only (last i checked) officially supported by android language/platform to use. And it's a great language to have experience under your belt with, and even awesome for practical use.
Although as previously stated, we don't know what mobile platform you're trying to support, so it's a pretty open question. For your specific game there are plenty of options, I would NOT go with Unity (personally) because it wasn't originally made for 2D in the first place. I would go with Java or even Flash on this one. There are plenty of articles online about side-scroller development. Worry less about what and more about how though, Java has awesome implementations of networking and tons of libraries that you could use for your features. However, on the down side it would require lots of android specific code for controls and things. Which also has the con of a huge learning experience and the experience itself for future projects.