Check your memory usage or, more probably, your disk usage (is there enough free space during the process?). Altering a table may require either a large amount of memory or a copy on disk of your table. Changing the alter algorithm from INPLACE to COPY can be even faster in your particular case.
The first tool is from Percona whose reputation in the MySQL sphere is stellar and is written in Perl. The second is from Shlomi Noach (a big hitter in the MySQL world) and is written in Python. Thankfully, you're using Unix of some sort - these tools (AFAICS) only work on Unix environments - the Facebook one may or may not work on Windows - as I said, I know nothing about it.
So, if I've understood your log file correctly, you attempt to add a new column to your 20 million row table, the system crashes and then is rebooted by the mysqld_safe daemon? Please tell me that you're not really going to call it "newColum" in production. 
Finally, some application configurations or hosting servers cancels a query/http request that is taking too long, I recommend you to execute the same query on the command line client for testing purposes.
You may also be hitting the innodb_online_alter_log_max_size limit, although in that case, only the query should fail, not the entire server. It is possible that the crash may be happening due to the ROLLBACK, and not the operation itself, though.
What I would recommend is that you try two tools on your test system and then use the one that works best for you on production. There is a third tool from Facebook, but it's written in PHP, I know nothing about it and it doesn't seem to get much "airtime" in any case.
What's strange (to me at least) is that your crash doesn't appear to be related to a time-out - you have it set to 9999999999 and it gets adjusted to 31536000 by the server. That's the number of seconds in a year (which should hopefully be long enough for any operation! :-) ). 