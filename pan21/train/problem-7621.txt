i needed to be able to pass in a string that represents a time. . .so here's my solution (vb.net).  Haven't come across a scenario this doesn't work for. 
You are passing in the parameters by reference unnecessarily. This method of passing is useful if you need to make modifications to variables that are observed at the callsite, but it should otherwise be avoided, as it could introduce a bug that may be more difficult to track if you make a mistake. Simply receive your parameters ByVal.
Once you are comparing timespan instead of date, you don't have to do date addition. You can just detect the wrap-around case and you only have to check endTime.
Secondly, I would encourage you to move away from hungarian notation. I've been there, I know all the arguments for keeping it. Hogwash. In your code snippet, you have variables like dteStartTime and dteStart. After you change the method parameters to be ByVal, you can then change your code to have a single variable for startTime and then another for endTime. If you give your variables meaningful names, you'll find that you never miss the old hungarian style. Indeed, I find that using hungarian often is accompanied by the rest of the variable name being an abbreviated, garbled mess. 
You are taking a DateTime, formatting it to a string, then assigning that to another datetime, just to get the time of day. That won't compile with Option Strict On. What you want is provided by DateTime.TimeOfDay.