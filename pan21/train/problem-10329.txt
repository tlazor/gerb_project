What's the purpose of special casing the head bit? Aside from the case where it's the sign bit, are there enough cases to warrant making it special? (I can believe there are, it's just not immediately obvious to me.) I tend to use bit manipulation on flags, and not so much on numbers. (I did actually use std::sign_bit() for the first time just this week, though!) If there are a lot of cases where users of your functions will need to get/set the high bit, then keep it. Otherwise, I'm not sure it adds much.
Overall, the naming is great. I much prefer set and clear to set and reset. The word reset does not trigger clearing a bit in my mind. 
You should be making all of the parameters const. In all cases you're either returning a copy or the parameter is an index. Marking them as const can let the compiler do optimizations in some cases.
If you are going to keep the head functions, you might consider a different name for head. I've never heard the high bit called the head bit. You could rename them as high_bit_idx(), high_bit_flag() or something similar. If the purpose is mainly for dealing with sign bits on numeric values you could name them sign_bit_idx() and sign_bit_flag(), etc.
It could be useful to extend this to a bit stream, where you handle an unlimited number of bits, rather than just the bits in the type you're dealing with. That's more complicated, of course. I've done this before when dealing with image compression.
Overall I think this is a really good straightforward implementation. It's easy to understand. Here are some improvements that I see:
I've only run into a few other things that might be useful, and these are definitely not 80% cases. I've seen cases where you need to determine the position of the first (highest) bit set. So you could have a function like find_highest_set_bit(T x) or something like that.