If you also need SSL, also put the following in /Library/Server/Web/Config/apache2/httpd_site2SSLwebapp.conf. The config differs in that  LAN traffic between the servers will be unencrypted by default (this config essentially tells Server not to check if there is a valid cert), but the WAN traffic will be encrypted. I believe you can install a self-signed certificate on the site2 server for encrypted local traffic, but this config will still enable the reverse proxy without having to have matching certificates. (I grant there is likely a more correct way to secure the local traffic, but this worked for me.)
If you need SSL on the WAN, install a certificate in Server that covers the new domain. I used Letâ€™s Encrypt to create a single certificate that was good for both my site1 and site2 domains.
And the corresponding SSL web app plist, /Library/Server/Web/Config/apache2/webapps/com.example.site2SSLwebapp.plist, much the same as above:
My answer above is adapted from the instructions found at https://www.precursor.ca/precursor/resources/rais/landing/ReverseProxyTutorial.html. Warning: this link downloads a zip file with PDF and sample Server web app config files. Their zip also includes historical instructions for doing this with Server 4.1.
This question was originally asked about Mac OS X Server 4.1, but as software version numbers have moved on, and I just now got this working, this answer is written as of macOS Server 5.2. Server 5 apparently changes things a bit in that every service in Server is now behind one master reverse proxy, so these instructions will not work with Server 4.1.
Make web app configuration file on the macOS Server machine, in /Library/Server/Web/Config/apache2/httpd_site2webapp.conf, pointing at the IP address of the site2 server.
Then in /Library/Server/Web/Config/apache2/webapps/com.example.site2webapp.plist, add the following, referencing the location of the .conf file above: