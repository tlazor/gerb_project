I've been hunting around the tubes today, but given my limited mod_rewrite and regular expression knowledge I'm struggling.
...However, this is where I get stuck. What would be the neatest way of rewriting to carry across any variables to a new domain name - and not losing any subdomains along the way?
Alternately, an even simpler solution is to just add ServerAlias domain2 in the config for domain1, although that doesn't send redirects, just makes the server respond to requests for domain2 in the same way as domain1.
I understand that $1 denotes everything after the domain as matched by the ^(.*)$ pattern, and %2 would be the subdomain (so I'm supposing %1 would be "www." if it was present in the http_referer or otherwise null?)
That will keep the %1 (the subdomain part of foo.com, including the www if present) and put it into the RHS of the RewriteRule.  Keep in mind that these are just strings while mod_rewrite is mangling them, so you can do anything with them.
What I'm trying to achieve is a rewrite of domain1 (including subdomains) to domain2 (including subdomains) and implemented as a 301. Domain 2 is the primary domain, domain 1 is just (for the time being) set up alongside and really just there because 'it is' (a better use is pending, thought I'd use it to learn something  in the meantime).
Domain 2 is configured as wildcard, and hosts microsites that are displayed via subdomain -> subfolder internal rewrite. (will happily post code for this on request, it's not tricky but it did take me a while to get it working without infinite rewrites, for some odd reason). Domain 1 (the temp domain) isn't set up at all, but only because I'm face with several options (a DirectAdmin-implemented 'alias' or 'pointer', or added as a a separate domain and configured as wildcard). If someone goes to domain 1 (the forwarding domain), this should happen:
What's bugging me is that all of the solutions readily available on the web either map subdomains to directories, are only coded to cope with requests via http://domain1.tld/. One of my own old htaccesses, for redirecting a .co.uk to a .com, has the beginnings of where I want to go: