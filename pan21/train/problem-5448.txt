The SQL Anywhere 10.0.0 manual recommends at least a 70% cache hit percentage. If it's below that, you may need to allocate more cache to the server. You can get the percentage directly like this:
In my particular case, when the database had a 22GB cache, the hit percentage was about 58%. After setting the cache to 55GB, the hit percentage went up to 97%. Although the "CurrIO" and "MaxIO" property exact numbers may be incorrect, the relative drop was drastic after this change as well.
After a bit of searching, I found that the SQL Anywhere 10.0.0 manual does go into this setting in a bit more detail in their chapter on performance:
Is this saying that, for example, if I have 5 disks in the server, this number should ideally be below 8? Is the meaning behind this value the same for version 9.0.2 as 10.0.0? The reason I find this hard to believe is the results of the following command are a bit off in my particular case:
Notes: The RAID1 and first RAID5 (D:/) are on the same RAID controller. We were planning on upgrading both RAID5 with 146GB (15k RPM) drives in RAID10. Would that change help our apparent I/O Bandwidth issue?
While diagnosing performance issues with vendor software that runs off of SQL Anywhere (9.0.2), I stumbled upon some interesting data in regards to I/O Bandwidth. According to the 9.0.2 manual, the database property "CurrIO" shows "The current number of file I/Os that were issued by the server but have not yet completed.". However, it's unclear what this number should be, given a hardware configuration and/or database utilization. 
Another way to see how much I/O is being performed by the database is by looking at the cache statistics. If the database is reading from cache, it isn't doing as much disk I/O. The two db properties that can be viewed are "CacheRead" and "CacheHits", like so:
The above command returns over 900 for the CurrIO and 1150 for the MaxIO. I have been monitoring this number for a few hours and the average is approximately 950 (Thanks to the Foxhound monitor from RisingRoad). These readings have been taken under normal database load. 