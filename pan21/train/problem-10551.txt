Whatever you're trying to build can almost certainly be built inside of Unity itself, and easier than doing it outside the editor. If you really want to use Visual Studio, you can use VS to author .cs files for Unity and this is even supported by Unity (or was, at least). There are commercial plugins to make this use of VS easier, too.
I'd like to build it using Visual Studio and utilize Unity components or would Unity studio be suitable to build this non-game application which ultimately would almost be like a 3d level editor.
If you'd rather build with Visual Studio and not use Unity's editor at all, you will need to find a different set of helper libraries. Unity is simply not a reusable set of free libraries; it's a complete unified product.
Such as physics, rendering or math libraries/objects. I would like create a project which would benefit from a few game engine related things but rather than use a mixture of separate libraries I thought a unified solution would be less hassle in the long run.
Most of the core bits of Unity are built into the executable itself and aren't even written in C# (the core of Unity is written in C++ and exposed to a C# runtime via Mono). The core Unity libraries cannot be used outside of Unity in any way.