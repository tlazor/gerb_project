Modern firewalls do not only check IP and TCP layer but also go a layer higher. It will check the contents of the TCP package.
I'm curious how exactly something like this is accomplished. This is definitely my weak area, so again sorry if it's a dumb question.
This might be a stupid question, but I'm wondering how a network blocks a protocol like SSH even if the server is listening on port that isn't blocked, like 80. I've even tried port forwarding an non-blocked port to port 22 on the server side and I still get blocked. (This only affects external connections, SSH works just fine on local connections.)
Modern networks have the ability to not only look at the destination port but analyze the bitstream to match and identify patterns that are inherent to different protocols. This is often called "Deep Packet Inspection" or "Protocol Analysis".
So if the firewall sees packages with as contents 4 bytes that when transformed to a number are always equal to the length of the data and after those 4 bytes all data looks random then it can be pretty much sure that it's ssh traffic and block it.
There might be security settings on the server that allow or denies traffic destined to daemons. So telnet over a certain port might work because the server listen on that port - but sshd might deny the source address. 
Traditionally services were identified by the listening port on the server end and then controlled by manipulating access to that port. You would then be able to circumvent that control by doing what you attempt to be doing, have the blocked service listen on a different port and hopefully go around the block.