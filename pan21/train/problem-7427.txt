They are dual CPU 6 core Xeon with Intel NIC's.  The Intel NIC's that we chose back then were important, but I forgot the exact reason why. I know it had something to do with the drivers and the way interrupts were being distributed among cores.
I have some running master/slave using 10 Gbit throttled to 2Gbit via softare going for 1 1/2 years now.
I'm going to offer a counter-point to Server Horror and expand on what migabi said. For small to medium range setups, I really like OpenBSD with the constantly evolving pf, CARP and friends. As far as I know, FreeBSD (and hence pfSense) are lagging behind in getting the latests pf and CARP updates over.
Also be aware decent firewall device use FPGAs to do a lot of the sums, that is wire-speed logic, no software solution can ever approach that for efficiency, spinning up 2 x quad core Xeons for 3 years will have a cost in energy!!
We also had the requirement to route a different interface type.  Something you couldn't buy in a hardware firewall, so this was a very cost effective solution.
If you get a HP DL360 G6 (for example, a similar spec Dell or IBM would be fine) with dual PSUs, SAS drives (or use a USB stick plugged into the mainboard) and put it on a decent UPS system that config will sit up for years and easy clear Gig traffic (the on-board NICS support TOE if you want to licence that) but if you use a domestic mainboard with a realtek Nic and an i3 you got from the bottom drawer of your desk, you may have trouble.
Many times you can get two decent boxes for failover, plus a third for testing for less than you'd have to pay for a commercial alternative.
Software issues are debatable, PFSense for example has a wide usage even in enterprise environments, so their are forums chocked full of information,  and you can always drop by Serverfault.com for PFSense help.
Granted, you have to be willing to do your own testing and find decent systems with decent network cards and be aware of the limitations of pf, but in my experience, all setups have their limitations. Enabling one particular inspection feature in a hardware appliance can some times cut throughput performance in half, or worse. And would you really deploy a commercial solution in production without considerable testing to verify the manufacturer's claims?
Welp, TIL Juniper's Junos is based on FreeBSD and that's what goes on their routing equipment.  That being said, you would probably save money and a little headache going with a juniper appliance,  because if the hardware fails you can get support for it. However,  there are companies that make appliances designed to run PFSense,  all you would need to know is how much traffic roughly you plan on passing through it. 
And lastly I'm just really uncomfortable paying a sum of money for support when it doesn't obligate them to document properly, cover losses or fix bugs in their product. I'm feeling that particular pain right now, and pain without source code just isn't my thing.
Yes it is possible to build a high bandwidth firewall that will give years up-time, and high through-put but you can't just use junk hardware, to get good you have top pay the bucks!
The above config is cheap of the re-furb market, if you are hang an enterprise off this firewall you need a HP gen8 (or equiv) with a full on-site warranty and probably 2 of them clustered for failover...