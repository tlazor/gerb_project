You might also want to remove the terminal driver shortcuts for stopping (^S) and starting (^Q) output, which aren't really much use but which are quite capable of causing confusion:
I think Cygwin does what you want... but I haven't used it in a few years. I'll actually install it right now to see how it fairs. It is somewhat overkill to be used just for an ssh client though.
But hang on, what about the special meaning of those keys? Well, you've just lost all the Ctrl+X two-step shortcuts, so you'd have to rebind the ones you actually need yourself. Meanwhile, Ctrl+V's function could go to Ctrl+Q:
That leaves the all-important Ctrl+C. That's actually handled by the terminal driver, so you'll need to move it somewhere else using 'stty'. Mintty has a control sequence that allows the Escape keycode to be changed such that it can be used as the interrupt key. Putting this into your bash startup script will do it:
I don't think there's any way to use Shift+arrow for marking text in bash. Instead, you press Ctrl+Space to set the "mark", and then if you move the cursor, the text between the mark and the cursor is selected. Unfortunately you don't actually get to see the selection (called "region"), so you have to remember where you put the mark.
Now the default shortcuts for operating on the "region" are emacs ones, but you can change them to Mac style, by putting the following into a file called .inputrc in your home directory. (Read all about .inputrc at http://www.gnu.org/software/bash/manual/bashref.html#Readline-Init-File)
This is difficult, due to Unix conventions and the split of responsibilities for input handling between terminal, terminal driver, and shell. But there are some things you can do.
(Zsh works the same, but unlike bash it does highlight the selection. Enhancement issue 84 for mintty requests the ability to select text using the keyboard at the terminal level. Such a feature would likely use Shift+arrow.)
editing the files you have to edit in a local editor and by writing them to "disk" you transfer them back to the server.
Finally, you might find the following shortcuts useful as well. They look for a line in the history that starts the same as your current one:
As already pointed out, using mintty, Ctrl+Insert and Shift+Insert copy to and paste from the Windows clipboard. The terminal can't Cut, because it doesn't have control over the shell's line buffer. Those shortcuts came from IBM's Common User Access (CUA) standard. They first appeared in DOS apps and have been in Windows from the start.
Mintty's keycodes for various special keys also allow some other stty settings to be changed to Windows style:
Ctrl+X/C/V, meanwhile, came from the Mac. Arguably more convenient, but the big problem with using those in a terminal of course is that Ctrl+C is the interrupt key, with lots of applications using it for things like Cancel as well. Also, Ctrl+V is the standard key for 'quoted-insert' in a shell, which removes any special meaning from the next keypress, and Ctrl+X is the first key for many two-step shortcuts.