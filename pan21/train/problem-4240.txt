Here it is, 2016, El Capitan is out there, and Apple keeps changing things up. Postgres is installed as part of the OS, and the postgres config file sets the unix_socket_directories property in postgresql.conf to /tmp. The socket is in /tmp/.s.PGSQL.5432. I was able to get around the problem by executing the following:
There are a number of useful options like this for the psql command that you can find here: http://www.postgresql.org/docs/9.4/static/app-psql.html  so that you can test out your OWN particular misconfiguration.  Of course, you can simply remove your last set of config changes from the *.conf files, too, to test if those are the source of your problem.  I think it is certainly worth checking out before you muck about with file permissions and ownerships.
For me I always go back to my first principle of programming: "I am usually the source of any given error!"
What I could NOT find was the config file that sets the default values for the psql CLI command.  Can someone comment with that, please?
This happened to me when I was running postgres instance on docker. You have to see what kind of connection is your server accepting. For me it was clearly TCP and not unix domain socket.
I got this same error from trying to run psql on the command line.  It turned out that my solution was far simpler.  I had mis-configured the listening port in the config file: /etc/postgresql/9.4/main/postgres.conf.
So to have the psql automatically use the socket of your choice you can set the PGHOST variable to the directory containing the socket. i.e.
Unix domain sockets work on kernel level and the connection doesn't have to go through all the jazz required for TCP connections. They are pretty fast and efficient when you want to make connection to your own machine from a different process as a part of Interprocess Communication.
I don't know of any config file for the psql client.  However psql does respect a number of environment variables that correlate to command line options.