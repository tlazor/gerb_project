PAM, in turn, supports multiple back ends for validating your password. The one people have been discussing — /etc/shadow — is part of the pam_unix backend. Pam_unix checks the authentication token you entered in keyboard-interactive mode against your hashed password in the /etc/shadow file.  Strictly speaking there is no limit on password length here either, but there are limits on how long a password is meaningful. It depends on the hash being used.
As was said, conventional Unix DES encryption only pays attention to 8 letters of your password (56 bits). You can use a longer password, but everything beyond the first 8 characters is thrown away. (I've never heard that, as someone else said, MD5 hashing only uses 8 characters, and I don't think it's true. If so that constraint is implemented somewhere in the PAM tooling, not in the hash itself.)
Typically for a Unix-like server, that back end is Pluggable Authentication Modules, or PAM. It isn't always, but exceptions are unusual.
By all means use strong passwords, but passwords are meant to be easy to use and memorable - if you make it too long, you might end up needing to write it down, which would probably be a bigger security concern than a shorter password.
If the password is stored as DES or MD5 then only the first 8 characters are significant. SHA passwords have no such limit. See the crypt(3) man page for details.
That said once you are connected to the remote terminal, you will usually see an "message of the day"(MOTD) and be asked for login credentials, the rules of which are determined by the OS of the remote terminal. (Overflowing the character buffer of the name or password field is a recurring security flaw) popular limits are 8, 32, and 255 characters in length. 
There is no fixed maximum length. Your password is not stored, a "salted hash" of your password is stored, usually in the /etc/shadow file, which is always of a particular length. Even if your password is 50+ characters, the hashed representation of the password will be much smaller.
SSH does not impose any limit on password length. In fact SSH doesn't ever know anything about your password. It has several authentication modes, including key (e.g. RSA, mentioned elsewhere) and keyboard-interactive, which is what lets you use a password. In keyboard-interactive mode, you're just passing a password to whatever is on the back end.
So go wild with your password-typing self — a minimum of 16 characters is recommended, although I've used as many as 75 depending on what I'm protecting
Several things are being conflated here both in the question and in the answers. Let's sort some out.
https://tools.ietf.org/html/rfc4253 -- SSH is a secure protocol for communicating with a remote terminal, and doesn't use a password (it uses a cryptographic key negotiation). 
That said, the bit length of the hash determines the possible collision space between two passwords, and therefore determines how long a password is meaningfully more secure.  MD5 is 128 bits; SHA1 is 160; SHA256 is 256, etc.
Many servers, especially in enterprise environments, use LDAP or Active Directory backends for authentication. These could, in principle, have their own password length limitations — but that's not an SSH property, that's a directory service property. You'd need to ask in a community for those services. But, in practical terms, I don't expect you'd run into any password length limits with any common LDAP or AD deployment, either. If you do, it's almost certainly a weak or compromised infrastructure.