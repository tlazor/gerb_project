My company has been looking into dividing our current SQL DB geographically due to a demand from our users to store their sensitive data in their own geographic region. Only part of the user's DB data needs to be located in a certain geographic location.
I would love to read some thoughts and ideas on the best approaches to tackle this demand. I was initially thinking of having 1 main DB indicating where data is stored geographically for each "book" and according to that, continue with querying the correct region DB.
So in each region, I would create a SQL Server "linked" server for the other 2 regions.  This allows a query running in any region to access data stored locally and also in any of the other regions.   The queries that look up information could be amended to do a UNION over all regions, but continue to return the same schema.  This is not efficient, so you'd probably come up with some strategy for replicating non-sensitive data to all the regions, then refactoring your queries to access the single local replica for non-sensitive data and the several regions, by UNION, only for sensitive schema.
Assume your company has to support 3 separate geographic regions to house the sensitive data.  Then also assume that users in any of these regions need to be able to query data in all the other regions (subject to access control policy, of course). I'll assume the schema for information is the same in all the regions.
You haven't provided many constraints to go from, so we might just be spinning our wheels providing infeasible solutions.  But I'll suggest one approach for the MS SQL Server world...
Other data in the DB does not need to be distributed in a special way e.g user accounts etcâ€¦ only the books data.