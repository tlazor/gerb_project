It can probably be assumed that your "optimizations" include index rebuilds.  Only performing these tasks on a weekly basis may be acceptable on a database that does not encounter a great deal of updates and inserts, however if your data is highly fluid you may want to do a couple of things:
I'm guessing you're using a maintenance plan for the optimizations, you could change it to use a script that does index defrags only when a certain fragmentation level is reached and you would not likely suffer any performance hit. This would generate much smaller logs. 
As for scripts that perform the discretionary index maintenance look online:  there are a ton out there.  Andrew Kelly published a decent one in SQL Magazine about a year ago.  SQLServerPedia has some scripts from Michelle Ufford, and the latest issue of SQL Magazine (July 2009 I believe) has a full article on the topic as well.  Point is to find one that works well for you and make it your own with minimal customizations.
I take a zen-like approach to my log files: they are the size they want to be.  So long as they've not endured abberant growth due to poor backup practices in comparison to database activity that is the mantra I live by.
Your final question was: "Other than BACKUP LOG  WITH TRUNCATE_ONLY, is there any way to reduce the size of that log backup, or prevent the optimisations from being recorded in the transaction log at all, as surely they will be accounted for in the full backup they precede?"
You could shrink them, but they will just grow again, eventually causing disk fragmentation. Index rebuilds and defrags make very large transaction logs. If you don't need point-in-time recoverability, you could change to Simple recovery mode and do away with the transaction log backups entirely. 
No, but here's a workaround.  If you know that the only activities in that database at that time will be the index maintenance jobs, then you can stop transaction log backups before the index maintenance starts.  For example, some of my servers on Saturday nights, the job schedules look like this:
That means I don't have point-in-time recoverability between 9:45 and 11:30pm, but the payoff is faster performance.
You might also look into a third party tool (Litespeed from Quest, SQL Backup from Red Gate, Hyperbac) to reduce the sizes of the backups and logs. They can pay for themselves quickly in tape savings.