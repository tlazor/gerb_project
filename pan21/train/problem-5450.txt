If it doesn't work, and is not just the problem with the format of the time mentioned in the other answer, check these points:
If it matters, the contents of the shell script are the following, which simply blink an LED on some GPIO pins. Again, the python script runs normally. I used full paths everywhere I could think to.
I am trying to get my Raspberry Pi B+ to run a shell script everyday at the same time, and I am trying to use Crontab to do it. I run sudo crontab -e to access my Crontab programs, and added the entry 21 16 * * * /home/pi/Documents/python/run.sh which should have executed run.sh at 9:16pm everyday, if I read the documentation correctly, then saved the Crontab file.
Additionally, the purpose of clear is to clear the terminal screen. A cron job is not associated with a terminal.
The problem is, Crontab will not execute the program when 9:16pm rolls around. I have saved run.sh as an executable shell script, and it runs independently of Crontab (when I simply run it from anywhere as /home/pi/Documents/python/run.sh, the program works as expected).
I was also attracted to your use of clear in your bash script, and thought I'd just mention that clear is a bit of a misnomer IMHO. I say this because in many terminals it doesn't really "clear" anything, it just moves it out of sight - a bit like sweeping dirt under the carpet I've always thought. If you scroll up in your terminal, you still see all of the previous results. If you really want to "clear" your terminal, yet retain the command history, try reset instead. 