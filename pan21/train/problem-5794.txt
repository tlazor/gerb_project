We haven't even touched on dealing with running multiple heterogeneous OS's on the same Host VM, upgrades to this shared AV service, VM migration between physical hosts, etc.
For an official answer, this question has been answered by Ben Armstrong (one of the Hyper-V developers) here: http://blogs.msdn.com/virtual_pc_guy/archive/2009/03/17/antivirus-and-hyper-v-or-why-can-t-i-start-my-virtual-machine.aspx
The only way for this to work would be a driver loaded in the Guest OS that delegated control on each access to the Host VM and from there to a user space AV program running on the host. The result of those operations would have to be propagated back into the Guest OS to be applied by it's OS to avoid corruption from the Guest and the Host modifying the disk structures concurrently.
I doubt that the solution above would prove to be as performant as a traditional AV service running inside the Guest OS. What was your motivation for asking this question ?
So, at the end of the day you would have one copy of your AV software running external to the Guest OS, but having to communicate with all of them (in a very complicated manor) to achieve what a traditional AV solution would do. 
Theoretically it is possible although there are not any antivirus vendors that offer this functionality.  Practically, file-level antivirus applications will cause problems with the ability of the OS to access important files such as the VHDs themselves (this situation is similar with Exchange or SharePoint or many other server applications), and you need to exclude specific files from being scanned by AV. 
The main problem is that the host OS does not necessarily understand the internals of the guest OSes - i.e. it does not know what processes are running in the guest OS or even the filesystem layout. Usually, the host OS sees the virtual machines just as a black box using a certain amount of memory, a disk image/partition and a some CPU cycles.
Antivirus programs operate at the file level, that is, on every filesystem access (open, read, write, etc) they intercede on the request and filter it according to their various rules. For example, checking the contents of the file for viral signatures if it's an executable. 
Not really a virus scanner but BlockWatch (white list based, memory integrity checker) works like this, by polling your running VM's, snapshotting or saving state then validating the memory allocated to that guest.  It works on Windows 32 and 64 bit OS's.
But to implement and effective anti-virus program, you will need to have access to the process details and file information (and that information is only available inside the virtual machine).
Virtual Machine hosts operate at the cpu level, that is they intercede on their Guest OS's when the OS does something that is very low level and needs to be emulated to preserve the state of the VM. The Host VM software is oblivious to the actual operation of the Guest OS, and operates simply to continue the illusion that the Guest OS is running on real hardware (this isn't strictly true, various tools exists to allow the Guest OS access to the Host OS, VMWare tools drivers for example).