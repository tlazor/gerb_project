3.) On your third goal, you want to generate a system from a script? for now Ashley don't the support for that such a method. For now you could just use engine method to get the system. But if you want to load the system script, use libgdx json reader/writer, and read/write your system using json, here is the link for the documentation json.
Now who's gonna handle the player entity? we could create a PlayerSystem by extending IteratingSystem (read more about ashley why I use this to extend). Initialize its family, so that system will only handle which entity has that components, but still you can access its components without adding it on the family.
Why I used PooledEngine? because it allows the components and entities to be pooled automatically by retrieving them. Here is the basic usage, as you can you I created an entity using the engine. Now you just need to add it to the engine after entity components has been made.
In your given code example and goals, you want to load each system by a given script, because you are referencing or copying the pattern of unity 3d to achieve your goals, this is not possible for now. But I can give you an example or a pattern on how I create a system using your example code. In the mean time, I recommend you to read what is ECS and Ashley for a better understanding.
2.) Globally access to your entity components. You should use ComponentMapper.getFor(Position.class) method. As the Ashley said it was fast.