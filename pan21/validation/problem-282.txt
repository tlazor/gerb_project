Taking as an example your INPUT chain, the incoming packet is tested to ascertain whether it is related to an existing connection; if it is, the rule is applied, thus the packet is ACCEPTED. If it is not (thus the packet belongs to an as yet unestablished connection), we move to the second rule. The second rule has no criteria to meet, thus all packets fit it; thus it is applied, and its application means: ACCEPT. 
This overall policy (first rule that fits is applied, the following rules are neglected) differs for instance from the policy with which the kernel applies routing rules: in that case, the most restrictive rule that fits is applied, regardless of the order in which routing rules are stored. 
The remaining rules never come into question. This is why you should carefully check iptables rules before saving them permanently: the order in which you supplied the rules may differ from that in which they are applied, and thus cause unpleasant consequences. 
Basically, iptables rules are to be read sequentially: reading from the first to the last, the first rule that fits is applied and the remaining rules are not even tested. If all rules are tested and none fits, the default policy is applied (for instance, in the case of your INPUT chain, the default policy is ACCEPT). 
I am sorry, but I fail to see where the problem lies here. Yes, you have a firewall which allows any packet to get through, both as INPUT and as FORWARD. This is the standard configuration for the newly installed OpenWRT firewall, I had the same configuration. 