To make pathfinding routes look more "realistic", I suggest you check out the article about natural-looking A* in Game Programming Gems Vol.1
For the player I think torchlight does pathfinding on a nav mesh for where you click/drag, and that works pretty well.  It may feel a bit more disconnected than direct control, but it does lead to better results for the player.  
there is an algorithm named rrt which is used for realworld pathfinding problem. the surface your hero (or enemies) can walk on is an input along with the suface that objects can move, and using some optimization algorithm it finds a path to your destination. as much as I know this algorithm is greatly used in robocup leagues. it's fast, finds the shortest path and avoids collision and sharp turns. you can use this powerpoint show to get a grasp on how it generates path.
Basically for enemies what you want to do is do pathfinding on a macro level (think about generating convex areas and pathing to the area the player is in), and do some boid-style steering behaviors on the micro level (once you're close to the player).