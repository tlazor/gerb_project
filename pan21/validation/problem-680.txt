"Look at irony of the Shrinking database. One person shrinks the database to gain space (thinking it will help performance), which leads to increase in fragmentation (reducing performance). To reduce the fragmentation, one rebuilds index, which leads to size of the database to increase way more than the original size of the database (before shrinking). Well, by Shrinking, one did not gain what he was looking for usually."
I found this because I just deleted a bunch of backup tables because my database had "maxed out".  I kept looking at the "Size" property, thinking why isn't this getting smaller?. After reading this, no, I don't want to shrink the database. What I want to do is "reclaim" the space for the junk I just deleted.  What I needed to be looking at was "Space Available".  I'm thinking maybe that's what someone else might need to be looking at that, too.?*
http://blog.sqlauthority.com/2011/01/19/sql-server-shrinking-database-is-bad-increases-fragmentation-reduces-performance/
Worth noting as well that if the table has indexes on it, fragmentation can exist after deleting large swaths of data. I had a table today that had ~70M records in it taking about 13GB. I cleaned it down to 1639 records (the rest were generated by a single bug) but the table still took up around 4.5GB. After I rebuilt all indexes on the table, it was only taking 85 pages (680kb). After that, I used incremental shrinkfile to reclaim the space (and fixed the bug on the system to prevent a repeat).
"Why does this happen? A data file shrink operation works on a single file at a time, and uses the GAM bitmaps (see Inside The Storage Engine: GAM, SGAM, PFS and other allocation maps) to find the highest page allocated in the file. It then moves it as far towards the front of the file as it can, and so on, and so on. In the case above, it completely reversed the order of the clustered index, taking it from perfectly defragmented to perfectly fragmented."
There's almost no place left for it, so I've decided to delete all the data for, let's say, year 2008. After executing delete query (had about 10 000 000 rows cleaned) and cleaning transaction log I've found out that my actions had no effect on database size. Is there anything else I have to do?