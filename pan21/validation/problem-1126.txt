Imagine one guy has his own company. He has 5 employees and 5 machines, like one machine for each employee. Now he want to setup something like this. Each employee can sit any of the 5 computers. The employees Operating systems have been setup in a server machine in a 'restore to local machine'(something like clone) format. Whenever, an employee switch on the computer in front him, he needs to load his OS from the remote server to his local machine. Which means, here there is no any specific computer for an employee. The employees can sit wherever they like. Only they need to load their corresponding Operating System to the Local machine.
The main OS on a hypervisor can authenticate each person. Once that is done, the chosen OS virtual disk is streamed to them via the network, in some highly compressed form. 
Could anyone of you suggest some method(idea) for loading an OS from a remote server to the local machine hard disk. Please see the scenario here, for more clarification.
This approach helps in performance, because the hypervisor can implement write-back caching, and use the network in a much better way without latency becoming an issue for writes.
Otherwise, a custom solution is probably in order. It could build on the UEFI network stack. UEFI can handle graphics reasonably well, and can be used for authentication. Then their disk is transferred to the system, via something like iPXE.
Either way would require careful architecting of the virtual disks so that the kernel and core OS components are small enough in size, which would have to be transmitted in one shot. The rest can be transferred as ordinary files.