An example... A copy script that does a copy of a normal file to a non protected location and a file trying to copy to a protected location, then a regular copy again.
My understanding is that in Linux, an application simply runs and tried to do an action - if it doesn't have permission to do that action - it will fail that action, but carry on. In the example above - when running the copy script in Linux as a regular user, it will copy the regular file, give a permission issue and copy the second file - if run with sudo, it will do all three copies.
It’s because they are different, plain and simple. UAC could have been implemented like sudo, but it was not.
You have to remember that unlike Linux which is geared more towards advanced users and applications, Windows is designed to be user-friendly to as wide a variety of users as possible, so simplifying security is paramount. Moreover, because of its large exposure surface, it is a frequent target for malware, so it makes more sense to either completely trust a program or not at all.
The difference is that a lot of Windows applications simply have a configuration set so that they ask for UAC elevation by default and quit/fail if they don't have it.... but, that is becoming a lot less.
sudo is like when a program requests network access and your firewall prompts you to grant it or not. You can say yes and the program will open the socket, or you can say no and it will complain about a lack of connection and do whatever it can do without network access (some poorly designed programs actually crash). For example:
UAC is more like the warning that you get when trying to open a file that was downloaded to an NTFS volume. Windows warns you about potential badness and asks if you want to run it (at all) or not. It’s an all or nothing operation; you can’t choose to trust only part of the program and not others. For example:
Windows is exactly the same in this regard - running the script as a non administrative user will simply copy one, permission issue the second and copy the next. With UAC, it will run all three.
I do not thoroughly know linux architecture, so forgive me if I make a mistake, but my understanding is that Linux and Windows are not that different at all in this respect...