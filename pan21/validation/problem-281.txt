I would say your best language choice would be c#.  You can use it to develop in Unity for a number of platforms.  c# is also the language used in MonoTouch (for developing for iOS) and MondoDroid (not out yet but will let you target Android platforms). And, of course, c# can be used in XNA which lets you target XBOX 360 and Windows Phones.
If you don't use an engine, I think the best thing to-do is write your own layer of abstraction. So that any calls to your library have to go through this middle layer, so when it comes time to port you just need to change the implementation of the abstraction layer and your game code is more or less intact.
That pretty much covers everything.  There will still be work to do in the fact that you will be using different tools for manipulating game content, but your core game logic shouldn't need to change if it's all in c#.
If you are targeting the Xbox with XNA (aka the indie store) then you have to use C#. But you cant really use C# with iOS (except with unity). While you can use C/C++ for iOS you still need to use a little bit of Obj-C unless you use some sort of middle ware.