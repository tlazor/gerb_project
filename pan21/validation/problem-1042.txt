I could leave you a comment, because Google sometimes is useful, but I remember that long time ago I wanted to achieve the same thing.
It was containing a tool to create a service. Unfortunately, I don't find information about what I was using at that time*.
One area where it's not equivalent is service dependencies.  There's no built-in way to make a scheduled task depend on another to run, whereas you can with services.  Another area would be event logging.  I would suspect that neither of these would be useful in your use case because many applications keep their own logs if necessary and do not depend on other applications to run.
Yes, in your use case it is, however my understanding is that generally the task scheduler expects the task to end at some point (and in fact has a default option to force the task to end if it doesn't end by itself) and you may be testing some unknown arbitrary or at least unforeseen limits by running it this way.  If you do use a scheduled task it might be a better approach to have a separate scheduled task to start the application and another to stop (and/or restart) the application.  You can schedule the starting task to run on windows startup and run the other task(s) through remote management.
This was the tool I was using, just remembered. But it is quite old now and I'd not suggest you to use it, even tho I guess it still work (with Windows 7 it does).
https://stackoverflow.com/questions/3663331/when-creating-a-service-with-sc-exe-how-to-pass-in-context-parameters