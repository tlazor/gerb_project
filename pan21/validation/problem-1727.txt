How many rows does this imply are being considered? If selecting "all" means "look at all those 10s of millions of rows" (or "look at most of them") then it might simply be this is fast as your IO subsystem can do the job, even with a skip-scan on an ideal index. And you might have an application design issue rather than a database one: is the "all" option actually of any real use to the user at this point?
It would be useful to see the actual query plan for one of the larger instances, and perhaps the extra details emitted when you run it with SET STATISTICS IO ON. I suspect it may be scanning the whole table at that point, or this whole index large index, as I've seen similar behaviour in the past with large static IN clauses. This is where "index skip scanning" as implemented by Oracle could be useful, but SQL Server does not support that. As you are constructing the SQL prepared statement in code anyway, you could try many UNIONs to emulate the behaviour:
Whether this is any better or not massively depends on the number of rows each SELECT returns. On the number fo rows...