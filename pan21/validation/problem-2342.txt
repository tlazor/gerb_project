All you need is a LLC (Logic Level Converter) to be able to connect these two devices. As you've already mentioned, these devices run at different voltage levels.
The short answer to your question, how to safely connect the RPi to an Arduino, is indeed given at the first link you posted: http://blog.oscarliang.net/raspberry-pi-arduino-connected-i2c/. I have used the method given there with great success, and without damaging any components. 
Next best would likely be through USB. There is a “standard” protocol (Firmata) for interacting with Arduino and sensors, but it might not be ideal for robotics.
Absolute safest would be Bluetooth serial. With a supported USB dongle on the Raspberry Pi and something like a Bluefruit EZ-Link on the Arduino, you could program and control the Arduino from the Raspberry Pi with no physical connection.
I looked at using i2c and Serial, as per these pages: http://blog.oscarliang.net/raspberry-pi-arduino-connected-i2c/ & http://blog.oscarliang.net/connect-raspberry-pi-and-arduino-usb-cable/. I have yet to look up USB. The reason that I'm asking this question is that on the i2c post it said that I should look out for the voltage difference:
I want to know the safest way to connect my Raspberry Pi to the Arduino, without huge risk of voltage going either way badly.
If you don't want to spare your USB port of your Rpi, you can use GPIO Serial to communicate with your Arduino. There is a great tutorial of Conor O'Neill for connecting Rpi with a Arduino Pro Mini. The procedure is the same with your Arduino Uno.
I am working on a robot using an Arduino Uno R3 and I wanted to have the ability of controlling the Arduino wirelessly, like stopping the Arduino without having to pull the power-plug every time.
But your question suggests that you don't trust that method, and I think the key to trusting it is in understanding why it is safe.  This is explained in the paragraph after the one you cited, but perhaps with too much detail.  The key is the lack of a "pull-up" resistor on the 5V Arduino.  Without it, the only voltage supply is from the 3.3V RPi, which fortunately is high enough for the Arduino to recognize.