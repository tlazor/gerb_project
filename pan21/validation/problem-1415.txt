the fastcgi_params will be inherited by both locations that fastcgi_pass, and only /index.php and /phpmyadmin/ are allowed.  I've also added an upstream block for php, which makes it easier should you ever need to add to or change it in the future.
And you put the default files in /var/www/html/restricted, that will be served for localhost and raw IP addresses.
I am trying to set up Nginx so that all connections to my numeric ip are denied, with the exception of a few arbitrary directories and files. So if someone goes to my IP, they are allowed to access the index.php file, and the phpmyadmin directory for example, but should they try to access any other directories, they will be denied.
It is easier to declare servers that are called with a domain name, and declare a default server that will include direct-IP accesses.
The easiest path would be to start out by denying all access, then only granting access to those directories you want.  As ring0 pointed out, you can use the default (default_server in 0.8) flag on the listen directive.  However, if you already have a server you want to use as a default for unknown named access to your host, you can also just catch requests without a host header or with your server's ip address with something like this (replacing 1.2.3.4 with your server's ip:
You can setting directly all path to the index.php and setting only on this file fastcgi php7 for nginx