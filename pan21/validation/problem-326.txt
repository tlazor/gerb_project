In some instances you want to be able to allow a configured service to listen on a publicly routed interface (e.g. eth0), but only allow connections from specific machines, like your remote coordinator. You could do that programmatically by IP address, but that can be inconvenient when you spin up new instances somewhere.
Instead of dealing with the hassle of maintaining IP-based firewall rules you could control the firewall rules with fwknop: Single Packet Authorization and Port Knocking. The default-drop packet filtering is low-overhead and works very simply without the complications of lesser port knocking systems. To install it for Debian:
The Shorewall configuration can be setup to use common files for shared configuration.  This will help get consistent configuration across the servers.
In general you should start by configuring services to only listen on the localhost (lo) interface and not on any publicly routed interfaces (eth0). It's still a good idea to put firewall rules in place, though.
I think this is usually accomplished by using the iptables-restore tool, which simply loads iptables rules from a file. The coordinator then should just deploy a new version of the rules file (usually /etc/iptables.rules) and call iptables-restore to load it.
Consider running Shorewall-lite on the the servers, and controlling the firewall configuration from a central server running Shorewall.  Both are available as Debian packages in the standard distribution.  
Do not forget to load the firewall on boot as well, by creating a if-pre-up.d script as described in http://wiki.debian.org/iptables .