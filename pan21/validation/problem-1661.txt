Also, VLANs are not entirely tagged or untagged. Interfaces are configured to use tags on all or all but one of the VLANs available on that interface, but which VLAN frames are tagged can vary from interface to interface.
Then you could configure the firewall to have two virtual interfaces on its "inside" port. One virtual interface could be configured untagged and on VLAN 10, and the other virtual interface tagged for VLAN 20.
Plug computer A into port 1 and computer B into port 2. Now when computer A sends a frame to the switch, the switch accepts it on port 1 and therefore knows it's for VLAN 10 and sends it out of port 3 without a VLAN tag. The firewall gets the frame on its "inside" port and since it has no tag, assumes it's for VLAN 10 and processes it using the VLAN 10 virtual interface.
For interfaces that do process VLAN tags, the tag tells the interface what VLAN the frame is for. Most of the time, when an interface is configured to process VLAN tags, one of the VLANs available on that interface is configured to be the destination for any frames that do not have a tag. That VLAN is often called the "untagged VLAN", "default VLAN", or "native VLAN". Untagged packets arriving at an interface with a default VLAN configured will be accepted and passed on to that VLAN. Not having a tag does not necessarily result in the frame being rejected or dropped. Sometimes for security purposes, there will be no default VLAN for an interface, or untagged packets will be explicitly dropped.
For an interface that does not process VLAN tags (or has the processing of tags disabled), all frames coming into that interface are considered to be on the same VLAN. For devices that do not understand VLANs, frames coming into any interfaces are just on the one network (VLAN) that the device sees.
As it arrives at the end of the trunk link the tag is removed and the frame is sent to the correct access link port according to the switch's table, so that the receiving end is unaware of any VLAN information.
When an Ethernet frame traverses a trunk link, a special VLAN tag is added to the frame and sent across the trunk link.
When computer B sends a frame to the switch, the switch accepts it on port 2 and knows it's for VLAN 20 and sends it out of port 3 with a VLAN tag added to it for VLAN 20. The firewall gets the frame, sees the tag and knows the frame is for VLAN 20 and therefore processes the frame using the VLAN 20 virtual interface.
VLAN tags are only a way for frame to specify what VLAN it is intended for. That's pretty much it (there are other things but let's get the basics down for now).
Suppose you have two VLANs, VLAN 10 and VLAN 20, one switch that supports tagging, one firewall that supports tagging, and two computers that do not support tagging. On the switch, you can configure port 1 to be on VLAN 10 only with VLAN 10 as the default VLAN, port 2 to be on VLAN 20 only with VLAN 20 to be the default vlan, and port 3 to be on both VLAN 10 and 20 with VLAN 10 as the default VLAN and 802.1q tagging configured for VLAN 20 on port 3.
First off, 802.1q VLAN tagging is done on layer 2 in Ethernet frames, so IP addresses have no bearing on the behavior of tagged or untagged frames. Second, tagging is not a system for allowing or denying traffic to or from specific VLANs. A frame should not generally be rejected simply because it has or does not have a tag.