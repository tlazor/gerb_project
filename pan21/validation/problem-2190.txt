Let's say I have a class A with many constants (over 20) and variables (also around 20). Class B represents a character so it has a lot of constants and variables representing various stats. Class C is GUI class and draw interface showing player his stats. I would like to have also classes for dialogs, items, quests, etc. Working with such a many variables is a lot of pain for me trying to manage it only in code. 
I've decided to use dictionary for storing variables in my Character singleton class where key is string for example "life" and value is float value of the key. 
Initializing the dictionary is made using readonly string and float arrays where I store in appropriate order string keys and float values (it can be done by using also enum to avoid some string related problems). Adding whole bunch of stats can be done in simple for loop. "Run-time" stats changes are made by using events since it fits rpg game mechanism.
How is that type of problems managed in game development? I'm doing an android game primarily so the performance cost should be get under consideration.