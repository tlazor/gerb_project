Sometimes we might want a more complex matchpoint algorithm, which might be based on properties of the raw scores (e.g., if the highest score is better than all other scores combined, award an extra matchpoint).
One of the features of our league is that we convert raw scores to matchpoints.  For example, suppose four players play a match and their scores are:
It seems like I can't be the only person who needs a bit of automated business logic to parse database entries as they come in and then display them.  In some sense the ideal result would be something like a SQL View, but where I can add my own logic to it.  I have no idea if something like that exists.
Of course, if you do have truly complex rules, then best to do the updates from the app, but how complicated can the formulas be? The two mentioned so far are actually better/faster done within the database (assuming that MySQL can do the the RANK windowing function).
It also sounds like the calculations are data-driven, at least the two examples so far are. In which case you can have a field to hold match_points and a stored procedure that accepts tournament_id and recalculates the match_points field WHERE tournament_id = @tournament_id. That stored procedure can be kicked off by an INSERT trigger and can be run manually (in the case of changing the formula). An update trigger, assuming it can tell you if the match_points field was a field that was updated, can run the stored procedure again for the tournament_id of the row that had its match_points field changed.
I'm trying to design a LAMP-based website for my pinball league, which plays competitive pinball every week in match play.
If you will INSERT 100 times but people will be Viewing (i.e. calculating it) every few seconds for the run of the tournament (think of people constantly reloading to see if their rank has changed as new entries are added), which might be thousands or tens of thousands of repeat calculations, then it would seem better to store.
Right now the best approach I can think of is a hybrid of 2 and 3, where during the competition matchpoints aren't stored, but computed on the fly, and then having a human-thrown trigger at the end of each week's competition that computes all the matchpoints and puts them into the database.  Possible bugs might be that I have to be careful to reuse the same code or else the database scores might differ from the temporary scores.  Also in case of human error the trigger might not be thrown.
Obviously whatever database schema I use, I would like it to store not just the raw score, but also easily display the matchpoints associated with that score.