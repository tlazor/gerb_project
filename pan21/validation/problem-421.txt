After days passed, what I found was that the backup (destination) server ended up having about 100MB more of data. How could this be -- Is that normal? Any idea how to track this down? Right now I'm doing a ls -laR out to a file on both the production and backup server. I'll then try to diff the files to see if there is any differences. Any other tips?
The most recent backup lives in copy/ with deleted/modified files being backed up under the respective diffs/year/month/day/ folder, plus the file's full path.
By default rsync will not remove files from the destination when it finds that the file has been removed from the source, so that's the likely source of the size difference. You can define this behaviour with the --delete flag, and also specify how to back up deleted/changed files on the destination with the --backup and --backup-dir flags.
I ran an rsync to backup one of our production servers. I put the production server in readonly mode so that no additional data could be added or modified. I then did a recursive rsync with archive (-a) to backup the production servers data directory to a remote backup, which is configured identical to the production server. 
I would not be overly concerned.  Afterall, there might be sparsely allocated files.  When these are copied via logical file access that rsync uses, the unallocated space is expanded read as a zero filled area and thus you get more space.  The file sizes would still be the same on both the source and destination.  
There are a few possible reasons for a copy to take up a different amount of space than the original: