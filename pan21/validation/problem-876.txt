With this method, if a dev leaves you can just pull his key from the "master" authorized_keys file and dist out a new one minus the old key.
Personally I believe a developer shouldn't have any rights on production box but that's because I came from a very rigid background where we used Rational Unified Process as law. Dev was theirs to do what they wanted with, Acceptance they had limited rights but changes went through me (sysadmin) and Production they had no rights to and any/all changes went through me on a scheduled day unless the change was emergency. What it really comes down to is what your management policy is on the issue. If its only a small shop then obviously what I just outlined is massive overkill but still good practice to think about. Best thing is to go with least privilege mindset and only give them what they need. All else fails just make sure you're getting good backups to rollback whatever changes may screw things up (fyi snapshots with VM's are a godsend for these sorts of changes just don't let the snapshots live more than 48 hours or they bloat).
Because of the way cPanel needs to have certain permission on certain folders/files some of the above won't work (in other areas yes, with cPanel/WHM, no).
1) Create a reseller in WHM that has access to the accounts so the devs can get into WHM as needed but you can customize the priviledges the reseller has in terms of server modifications.  This way the devs can do cPanel related things for customers but not screw up the server as a whole.
That being said, I would also recommend putting up a test and/or Q/A environment to make the changes, then once verified have them rolled out to the production server.  Ideally, the webdevs would not have access to the production system, and a separate web admin, or webmaster would be the one to roll out the new pages.  Whether your culture could support that kind of separation of duties is another matter entirely.
2) Use ssh keys to let them in AS THE USER that owns the files.  Since you are using cPanel the ssh keys would go in /home/username/.ssh/authorized_keys  You could keep a "master" authorized_keys file and distribute it as needed to the /home/username directories.  
From a security standpoint, I would recommend putting the individual sites in a different directory structure entirely, and linking to them via vhosts.  I.e. /var/www/client1, /var/www/client2.  From there create a new group called webdev (or whatever), and give that group write permissions to the /var/www/client* trees.