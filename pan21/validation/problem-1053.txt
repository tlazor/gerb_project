I use a password matrix. Basically, I have a business card that I keep in my wallet that contains a 10 x 10 matrix of random letters, cases, numbers and symbols. I keep one copy of this stored on my email and another on my computer. Depending on the level of sensitivity of information that I'm looking to protect, I'll use a different algorithm. So all you have to remember is your algorithms.
I use the Password Assistant that comes up when you click the little key next to the new password field in the change account password section of System Preferences (it looks relatively standalone, but I've not found a more convenient way to invoke it without pretending to change my password, then cancelling). I find the "memorable" setting produces passwords that are fairly secure and, well, memorable. My one complaint is that it could be a bit more liberal with the capital letters.
To store passwords, I have a copy of 1Password on my iPhone. I picked it up for free (or at least very cheap) on a special offer; I'm not sure I'd pay the Â£6 they want for it at them moment, and I certainly don't have the desktop app for syncing or anything. It does, however, get backed up with everything else on my phone when I sync through iTunes.
I use LastPass -- it's not OS X specific and they have browser plugins for every major browser and platform. It can generate passwords for you for any scenario really: web apps, non-web apps, etc.
What Mac OS tool do you use to generate random passwords for logins, and back them up (encrypted) in case your computer dies?
Your data is stored on the LastPass server as an encrypted blob. LastPass doesn't maintain a parallel private key to access this data. This is key (and big differentiating point with a service like Dropbox). LastPass, therefore, cannot access your password file blob. If you lose your password to LastPass, you lose your data stored there. That's a good thing. Your LastPass password should be something long, preferrably a sentence, with more than just alphanumerics in it.
Basically the whole concept is that you're flaunting your passwords around, but it's completely useless unless you know what the algorithm used is.
The service is still, I believe conceptually, vulnerable to browser-side attacks because decryption of your blob is done in the browser plugin. But this isn't any different from the way KeyChain data or even data encrypted with something like PGP is handled: at some point you have to decrypt to use the data and the best, safest place to do that is local to the machine you're working on just in time to access the data. That's, more or less, how LastPass architects it.