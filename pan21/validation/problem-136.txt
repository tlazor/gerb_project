I'm looking into the newer OpenGL's with GLFW, but I'm stuck in a decision. What kind of anti aliasing is the best, or something that makes it look real, not "real". I don't want the picture blurred, I want it clear. I'm thinking about super sampling but that does not seem like the best due to that it uses a ton of resources. What's your experience with what AA and did you like it? Can someone explain all the types of AA? Thanks!
The latest hotness is to do postprocess antialiasing, where you render the frame normally without MSAA or anything else, then run a filter on the image afterward that tries to identify sharp edges and blur along them or otherwise "repair" them to remove jaggies.  This has been quite successful since it's faster and consumes much less memory than MSAA, and it's relatively easy for developers to add to their games.  (In fact, GPU vendors are even starting to add postprocess AA options to their drivers, so the game doesn't even need to support it directly.)  There are many flavors of postprocess antialiasing; the major ones are detailed in that SIGGRAPH course.  One of the most popular types currently is fast approximate antialiasing, FXAA.
When you run a typical PC game and in the options it gives you a choice of "2X, 4X, or 8X" antialiasing, it's referring to multisample antialiasing, MSAA.  This stores super-resolution frame buffers and resolves visibility per sample, just like supersampling - but the pixel shader is run only once per pixel, not per sample, and the color it outputs is replicated to all samples in that pixel.  That improves performance, but MSAA still requires a lot of extra memory, and induces complications with things like deferred shading.
There was a SIGGRAPH 2011 course on antialiasing in games, which will probably give you far more information about many more types of AA than you really want. :)