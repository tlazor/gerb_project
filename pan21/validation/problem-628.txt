If you're running a web server, consider putting it behind a CDN like CloudFlare or Amazon CloudFront.
This is a solution I developed which applies to non-web servers that cannot hide behind a CDN, such as WebSocket, media content/streaming servers.  CloudFlare supports WebSocket but only for enterprise at the moment.
Speak to your server provide and see if they can issue you with another IP address as a temporary way to access the server or see if the server has remote console access (like you are sitting in front of it).  From here you can see if it is a single IP address and block it from the site or a distributed attack.
The goal is to change your TCP listening port quickly enough that a botnet can't keep up, say once every 10 seconds.  This is accomplished using a simple proxy program that performs the port roaming.  The sequence of ports is pseudo-random, but must be based on the server time.  And the algorithm for calculating the server time & port must be hidden in your client javascript/flash code.  The program should also modify the firewall as it changes listening port, and the firewall needs to be stateful.  If someone is interested, I will upload my node.js script that works with Amazon, to GitHub.
When you are under DDoS attack your ISP it can help you most, but if they don't have DDoS protection it's very likely that you will be out of service until the attack stop. Usually they will see the attacked ip address and null the network on  their upstream router. If you don't have a lot of traffic there are many online services for DDoS protection where your traffic is rerouted, filtered and sent back to your server.
CDNs are expensive.  To keep cost under control, serve large files (large images, audio, video) directly from your server instead of through the CDN.  However, this can expose your server IP address to attackers.
If you're an enterprise, you have many options.  If you're a little guy like me, renting a VPS or a dedicated server to serve a small website, cost can quickly become prohibitive.
Note an attacker can still attack your TCP server port.  If it is a web server then consider using something like nginx that uses non-blocking IO and can handle large number of connections.  Beyond that there is not much you can do beside ensuring you run the latest version of the server software.
Private clouds usually are expensive enterprise solutions, but Amazon VPC costs next to nothing to set up.  However, Amazon's bandwidth in general is expensive.  If you can afford that, then you can setup Amazon VPC's Security Group and Network ACL to block traffic before it arrives at your instance.  You should block all ports except your TCP server port.
From my experience, I believe most dedicated and VPS providers will not set up special firewall rules just for your server.  But nowadays, you have a few options.