The simple answer is to run the backup as root. In fact, short of doing very onerous and/or dangerous things, that is the only answer as far as I can tell.
The right way to do this is not by changing your file permissions. You should use sudo and/or setuid executables.
One of the downsides to this approach is that you must keep pace with new groups as they are created.  Also it requires, if you want to backup home directories, that you set at least execute permissions on /home (for group).
This user belonging to every group would inherit the rights of those groups, so any file that is group readable you can back up.  This would include the root group if you want to back up files owned by root.  
NOTE: the /root folder is probably owned by root:root (root user and root group) yet we told root group no privs... Well thats okay because root user still has priv so thats what matters most if your root right? Basically if your root user, and you try to get in to a folder/file that says root user you have full privs, but root group you have no privs... who wins? Well root user privs say you can get in so thats what matters (the root group privs don't even get looked at).. Also since your root user you can change all that up
One of my colleagues has a linux box that has everything read (Besides root folder and lost+found folder) so that any user (such as myself can find neat stuff in his /home/notme folder or in /etc/ folder)
who cares what "they" say "should" / "shouldn't" not all of us are running NSA level PC sanctuaries, and some of us (like dude in OP) might benefit from a little come-all-read-all policy:
If you were to you can't set backup as the owner of everthing, nor can you set it as the group for everthing, so the only other way to give it access is to give everyone access. Simply put, you run backups are root or make a mess of your system.
That would not necessarily enable you to back up every file, but it will allow you to back up every file that users do not set as private.  Files that are X00 will not be backed up.