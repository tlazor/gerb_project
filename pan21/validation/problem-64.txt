Also, the default amazon AMI has been a pain imo to set up graphical programs as X Window System is not listed under yum grouplist; so you will end up having to do some manual config me thinks.
Also, we estimate very light usage.  So we estimate that there would be sporadic usage throughout the day, with long stretches of idle time.  So could we get away with a 'Micro' instance?  Atlassian recommends at least 1GB RAM but that is for a much more heavily utilised system - the micro instance has 660MB RAM.  Also which instance type: on-demand, reserved or spot?  It seems that the 'Light Utilization Reserved Instances' can also be charged by the instance hour - what is the difference between this instance and an On-Demand instance?
So the conclusion was to run JIRA on EC2 (linux).  We don't have any experience with EC2 and so would like to get some advice please.
Is it advisable to set up JIRA on a linux VM in house, play around with it and then transfer it to EC2 using their VM Import tools?  Or is it best to set it up on EC2 from the get go?
We're not sysadmins, so we just want a setup that works and doesn't require too much mucking around.  
As as far as performance of a micro goes. Well, it is the cheapest but if I remember its not guaranteed even 1 cpu; its more for burstable hits. If its going to be used lightly you might be able to get away with it, but if you got a lot of developers and they are going to be generating those reports you might wanna aim for something a little more beefier. It is a shame m1.smalls are still 32-bit.
We're moving away from Redmine to set up JIRA/GreenHopper.  Our dev team does not want to have a dedicated in house server for the job, nor do we want to run a VM on any of our dev machines.
As far as the amazon reservations go. On Demand is the most expensive hourly. if you run it all year your bill will probably be around 30% more. Then there are the 3 RI levels: light,medium, heavy. All require some intial money down. light means the least money down but also the least savings from on demand. heavy requires the most down but has the most savings hourly compared to on demand.
Why not just go for Atlassian's hosted service?  See http://www.atlassian.com/software/ondemand/overview
From my perspective I would just pop it on EC2, why do the extra step. I wouldn't use the HSQL memory database but set up a different one such as mysql as I have had a bad experience performance wise with the default memory db.