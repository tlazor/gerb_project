You can use GParted to resize the filesystem and the partition at the same time. IMHO, that's generally the best solution, because it leaves less room for human error to creep in. Note, however, that if you use MiB alignment in GParted (and maybe even if you don't), it's likely to try to shift the start of the partition to sector 2048. This will result in a lot of extra data movements, which are time-consuming and risky. OTOH, this may be desirable if it's a boot disk and you want to install a newer version of GRUB -- some versions now require more space after the MBR than the 62 sectors you've got now. (You can continue to use an older GRUB or LILO with your current disk, though.)
Use b, you will be allowed to input 63. Return to main menu with r. At this moment p should show you 63 as the start sector. If everything looks fine, write changes to disk with w.
I also had the problem that I couldn't keep the original start block. I used cfdisk. cfdisk could do it right and much easier then fdisk! Just select 'resize' and enter the amount of diskspace. And 'write' when you are satisfied with your configuration. That's it!
Recreate the partition with the default start sector (2048) and proper end sector. Remember that this change is pending until you write the partition table, so it doesn't matter it's not 63 yet. Next give the command x which is
If you must do it using fdisk, try using an older distribution (or at least an older version of fdisk). Newer versions of fdisk don't seem to provide a way to specify a start sector as small as you want to use, although that is perfectly legal and was the standard until recently (2-3 years ago for Linux; up to Windows XP for Windows). Be careful about units, though -- older versions of fdisk used the fictitious "cylinder" values by default. Those values are imprecise, and the piecemeal changes in fdisk mean that you might not get the behavior you expect with certain in-between versions.