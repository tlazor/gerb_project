Your application will need to be written with parallelization/clustering in mind for this to have any chance of working, and whether or not it will work at all depends highly on your specific workload.
Yes, there are frameworks that help with cluster computing, but it's not simple, and there is surely no "magic" package you can install to make it work.
The combination of services available is unique: EC2 and Elastic Beanstalk for compute resources, S3 for large-scale blob storage, SimpleDB for small blob storage (metadata), and SQS/SWS to support messaging and task distribution. You can certainly design and deploy systems that do any or all of these things, but with an AWS account you can fire up the entire suite of tasks this afternoon.
There are some great resources available describing how to do video processing using the suite of AWS services. I would suggest starting with the Encoding.com Case Study and then digging in a bit deeper in some of the compute areas of the Architecture Center.
OP has already accepted @ErikA's answer, but I'm going to post a couple other thoughts. While it is true that EC2 instances offer nothing different from other hardware, the same is not true of AWS as a whole. There are several services specifically built for distributing computation and services in mini (or maxi-) processing farms.
A new answer to AWS distributed computing is AWS Lambda. It essentially lets you run JavaScript functions on demand, on different cloud machines, without you having to do any of the setup/teardown provisioning. You only pay for the the time the code is executed, and don't have to set up a cluster of server to wait for jobs.