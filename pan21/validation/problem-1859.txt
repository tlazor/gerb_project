Have you considered using either mydumper or myloader? In tests that they have ran, it appears to have a significant effect on processing time. You can find more information here (https://www.percona.com/).
I have a database where we have the need to import record sets of millions of records daily and on demand.  The fastest method we have found so far is the LOAD DATA INFILE method.  This is into a table with multiple indexes including a primary key and a multi-column unique key.  If one SELECTs the data from the source table with an appropriate ORDER BY clause, you add a little time to the extract, but the right before the LOAD, you can drop the indexes, do the LOAD, then re-add the indexes.  Because the source data was already ordered, the index creation time is greatly reduced, and it saves the time of index scans for every record inserted during the LOAD.  Overall time to load is reduced, though it is disconcerting to sit there and watch "nothing" happen as the index builds.  Took us from 100+ records a sec to over 2000 records a second.
Also loading into/from memory tables is much faster but based on size you've  mentioned I suspect we have sufficient memory (you might see table-full errors and issues due to that...)!