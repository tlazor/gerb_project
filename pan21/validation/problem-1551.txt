Everytime I need to do this I fall back to HAProxy, this is another reverse proxy package that allows you to host multple services behind a single (or multiple) public IP's.
Many more things can be done with HAProxy but this should give you a good idea of the basics. The documentation for HAPRoxy is pretty in depth but also very comprehensive.
HAProxy uses FRONTENDS and BACKENDS, Frontends to bind to an IP:PORT and then a backend in which you specify servers (one or more).
Here is an example of my config for running multiple web service applications behind my single home IP. In my case im using multiple ports on the same IP in my backends, in your examples  you would want to use differnet IP's on port 80.
Please note the 'troll' settings i used while testing this, the default backend if you go to my public IP without specifying a matched URL was to send your request out to meatspin.com (DO NOT EVER GO TO THIS ADDRESS IF YOU VALUE YOUR EYES), I have replaced this with google.com for this example.
Is there a way to host multiple websites with different domains on the same public IP address, and when the user enters, say example1.com that goes to one server on my private network(192.168.1.20), and example2.com goes to 192.168.1.21? I have a VM host and want to experiment with some of the turnkey linux solutions, and it would be awesome if I could make those sites publicly accessible when I decide to use them. Many of the solutions I have come across on here involve using a redirect, but I haven't found a decent description of how that works. Would the user see a redirect happening in their browser? Is it slow? I'm guessing I'd have to have one "master" server running apache which would listen on port 80 and then redirect to my other servers?
With this in place and the PUBLIC_IP configured in the Frontend, myserver listens on port 80, looks at the http header on incomming requests and if it sees a request for film.mypersonaldomain.com it used the couchpotato backend, if it sees tv.mypersonaldomain.com it uses the sickbeard backend.
This can be done from APT-GET or YUM depending on your disto of choice. Once installed take a look at the config file (In Ubuntu its in /etc/haproxy/haproxy.cfg)