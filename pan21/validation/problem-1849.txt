Yup, you're infected, I'm afraid. The "how" is, unfortunately, impossible to say without a LOT more investment in time and efforts. It could have been a vulnerability in your Drupal install (or one of it's modules), it could have been a vulnerability in another app on the same server, it could have been a weak (or stolen) FTP password, etc. There are plenty of possible entry points.
To prevent it in the future, you'd have to keep up with updates, and subscribe to lists that keeps up to date with vulnerabilities and best practices for the software you're running (drupal lists, your platform's security lists, etc.), as well as lock down services to only users that are necessary to use the system, using secure passwords, not doing anything in cleartext, and everything else under security best practices that extends way beyond the context of the answer here. And keep good backups and put in intrusion detection (such as a Tripwire-like system) to check for intruder activity.
While completely based on only my own experience, every hack like this, especially with re-infection, was due to someone with FTP access to the server having their local machine infected and something stealing credentials - you want to check out FTP logs and make sure you recognize all the IP addresses and updates as valid - if something is re-infecting, you should see it there quite easily, if that's the case.
I'm seen something very similar (nearly identical) but not related to Drupal and it was definitely a hack.
Like the others say, it's hard to know without more info about your environment.  A quick thing you can do to block it from being served is to put a directive in your .htaccess file that will deny or redirect any requests to that .js file.