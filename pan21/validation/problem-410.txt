Now if you need to do it on the cheap with I would recommend load balancing with nginx and then processing with apache. I have found(and i am sure many people will disagre with me) that apache by default is more secure then nginx if your willing to work with nignx and really limit what can be called and where the call is directed then you can nginx nice and tight like a drum but if you need something working and not have to worry about it being hacked to quickly stick with apache. I would then use nginx load balncing on ip_hash mode this way requests get sent to the same server (unless a server fail happens) So if you are getting a lot of requests this should be able to help you fix ur ssl issue if you think you will go down.
There are a lot of factors that affect SSL speeds from the choice of SSL library (OpenSSL vs GNUTLS), the choice of algorithms (RC4 vs AES etc) to the type of web-server used (Apache vs NGINX etc).
Adam Langley from Google released some tips on SSL tuning a while back and their experiences switching over to SSL. I recommend that you read his article.
Both Reza and sybreon have brought up some good points about SSL it is true that a well apache and nginx will handle SSL close to one another when they are correctly configrered. It is also important to know that an SSL card will bost your ssl perfomance on decrypting the data. 
There is not much difference between web servers in SSL handling, SSL handling depends on the CPU power of the web server and its RAM size to handle concurrent connections.
I recommend you use SSL accelerator cards on your web server to handle SSL better, you can also use SSL offloading with a seperate hardware SSL accelerator device that acts as a load balancer or SSL terminator for your SSL requests.
What's the best web server to handle SSL connections? 80% of our connections will be in SSL, so we need to choose the right web server. We're leaning towards nginx, but don't know how it handles SSL. 
That said, you should not be too concerned with SSL performance these days. With a correctly configured SSL machine, there is little additional overhead compared to non-SSL connections.