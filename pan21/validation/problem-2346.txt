You then need to find out what are running. I don't know what the equivalent to the Red Hat chkconfig is, but failing an alternative ps -ef will list what processes are currently running.
First don't panic. I am assuming you are now root. You are currently the most dangerous threat to the server right now as you have a lot of power and not much idea of what to do with it.
Make copies of all files before you edit them and test changes often so you can easily back out if something breaks.
Day to day duties will include, checking the log files for any problems (check out logwatch to help you), performing security updates, checking backups and goinf forward setting up monitoring like MRTG and Nagios to eventually take the heavy lifting out of being an admin.
Now you know a bit more about what your server is doing and who can access it, you should move on to how well it is doing.
Obvious candidates are databases, /home/ /etc/ /var/log/ /var/spool/cron/ /var/www/ and any custom scripts called by crontabs.
You then can poke around on the staging VM (copy of the server) and try to do each thing you are asked to do on the VM staging server first before the Production server.
Check the log files in /var/log, especially /var/log/messages and spend some time looking for any errors. 
The priorities are attempted cracking attempts in /var/log/auth.log, shutting down uneccessary services and tightening the firewall.
I would not worry too much though. It may seem daunting but that is because you are asking for it all in one go. The server is probably fine as it is, keep an eye on the logs and apply updates as they are released, plan what you want to do and work towards it, take little steps and try to enjoy it. 
Write down what services are installed. The quickest way to find out is probably by listing /etc/init.d/*. 
Then most people write a shell script to back this up locally and then use something like rsync to copy the files to another machine USB drive.
Using something like VMWare Converter to make a staging VM of the server is a GREAT idea, you should look into that.
Write down what services the server should be running. You know apache, mysql and postfix are required. I guess you may have an ftp server on there and you are able to ssh in so you need sshd running. 
You now need to review the information you have collected and decide what (if anything) needs fixing. 
If you don't know what "right" looks like then it can be hard to spot where something is "wrong" (or as you put it "funky").  Once someone the server is in a known good state.  
Next get a list of all the cronjobs that are run. You probably don't need to worry too much about what they do right away but you should have a general idea of what the server is doing at different times. 
Do a similar thing for FTP access, and other services if relevant like Subversion or remote MySQL connections.