Of course for this to work, your app must respect system's proxy configuration. If it doesn't, but you can enter proxy settings manually, Fiddler will run on localhost:8888 by default - you can use that.
If the website you want to replace is using SSL/TLS (HTTPS connection), it's a bit more complicated. Fiddler can be set up to perform a man-in-the-middle attack on such connections (it will basically decrypt them using valid certificate, edit the response according to your instructions and re-encrypt using its own certificate that you have to add to Windows' trusted certificate store). This will, however, cause problems in programs that use certificate pinning: those will detect that the content is signed with unknown certificate and act accordingly. For example Chrome will call home to report if non-Google issued certificates are detected in Google domains.
You can use Fiddler for this. It acts as a proxy between your computer and the Internet. One if its features called AutoResponder can be used to alter how specific requests are handled. It will even let you simulate delays.
I managed to build Foo.exe, so this won't be necessary to me anymore, but, before giving up, I found a network debugging tool called Charles. One of the functionalities it offers is local DNS spoofing:
If you don't want to manually craft a valid HTTP response file, just create a file with whatever content you want, upload it to any server and open in your browser. It should appear in Fiddler. Right-click it, then click Save → Response → Entire response.