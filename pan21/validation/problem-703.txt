Here i can understand that in SQL based databases data is stored in form address and data and in NoSql everything is stored in one document.
The important point is these terms refer to how the DBMS interacts with the outside world. They do not put any constraints on how the DBMS software is arranged internally. Of course it makes sense to structure the software to easily support the interface with minimal processing. So relational systems are likely to have on-disk and in-memory structures that are different to non-relational systems but they are not required to.
I am searching web to understand the underlying concept of how actually information is stored in RDBMS and Nosql databases and found this:
For example MongoDB (a document DB), MySql (relational) offer different storage engines with different on-disk formats, each of which is optimised for different conditions.
SQL and NoSQL are misnomers - the names do not accurately reflect the things they label. It is better to think of them as the relational model of data and non-relational model. The model is the way in which the database system presents data to the external world i.e. client systems which read from and write to the database.
In this context "relation" is an academic word for things which in everyday use we would call tables. So a Relational database system is one which presents input and output in tables. Part of the definition of the relational model is that all entries in a table share a common definition.
In contrast document databases accept and supply data in the form of documents. In this context "document" typically means a valid JSON document. Documents within the database need not have the same content.