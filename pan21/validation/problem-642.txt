Is a 3-way RAID1 using mdadm a good solution to be able to sustain any two drives failing without the RAID failing?  I know this costs extra in the sense of only being able to use 1/3 of the disk space (1 out of the 3 drives), but what about aside from that?
The main point I want to get across is be prepared for when your server failure occurs and have a good backup plan.  To be a good backup plan, you have to actually test the backup and recovery procedures.  In the case of the most recent failure, to total time from I got the call getting me out of bed, getting dressed, grabbing a quick bite to eat while going out the door, driving to the site (10 minute drive), diagnosing the problem (including an attempted restart of the server), and getting the backup server online was 52 minutes. 
Yes, you can add as many mirrors to a RAID1 as you like, and you can tolerate failures of all but 1 device. If you add 10 devices, you can tolerate a failure of 9 devices.
When multiple disks are involved it multiple, identical writes, the rotational delay as measured by the host will be the worst of all the involved disks. Seek time, on the other hand, should be relatively similar between RAID1-ed disks. In the end, this means that RAID1 arrays will have slightly lower write IOPS values vs a single identical disk.
You can have discussions on which is better of the different possibilities of RAID.  Just keep in mind that more things can fail other than hard drives.  Use the type of RAID that you think best for your use, but plan for recovery because of hardware failure or a malware/virus attack.
Note that this will lower your random read IOPS performance (as some disk will be effectively used for write only), so be careful choosing your poison. 
Don't forget there will be a write penalty for this setup though. All data has to be written to every device. Generally it should be fairly insignificant but if all devices are on the same controller/bus then you may start to notice the delays as your data is written to every device. For example, with 3 devices, writing 1mb of data to the array requires the controller/bus to actually write 3mb to disk.
Linux's mdadm has an interesting provision to minimize the impact of different disk's latency. For example, read the man page about "write-behind" and "write-mostly":
A note about RAID1 performance degradation: it does not depend on bus congestion, rather on how mean disk seek time is influenced by multiple writes. Disk seek time is composed of two different parts: seek latency (the time the head need to reach the correct angle) and rotational delay (the time the disk platter need to rotate to the correct position).
I have always been a big fan of hardware-based RAID 5. I typically use Ubuntu Linux for the server if the planned use allows.  With the hardware based RAID, Ubuntu (as well as any other operating system) has no trouble booting from a RAID-5 array in most modern servers. I also use multiple backups.  The first backup is an hourly backup at the server on an external drive using Back-In-time to provide an on-site backup every hour during business hours.  The second level backup is a nightly backup of the network share drives using another computer running Ubuntu and Back-In-Time.  The nightly backups are also made to portable USB drives and at least one is kept off-site.  Drives are rotated daily during the business week.  The third level backup is to a retired Windows Vista computer running Ubuntu Linux, configured similarly to the server configuration where each night the server files are synchronized to the backup system using the Linux utility rsync.  RAID-5 (with a hot spare) was good the last few years when there were drive failures.  The failed drive (hot-swappable) was replaced in each instance without interrupting network activities.  RAID-5 didn't help when the server experienced a hard crash, probably from motherboard or memory failure.  What did help was the spare backup server that had the synchronized files from after close of business the previous night.  I have a small script that I ran to migrate the server configuration to the backup server, which migrates all the user and machine accounts, making the spare computer a temporary PDC. It took a couple hours to put together another retired Windows computer to make a new backup computer system and put it online.  I opted to replace the more expensive Proliante ML350 server with a more modest Proliant ML10 server.  I will be configuring the new server with RAID-1 as a 3-drive mirror with a hot spare.  The ML10 server I have ordered uses a software RAID controller which has to be configured as AHCI instead of RAID for Ubuntu to boot. The total cost for the server and four 1TB drives is about the cost for one 300GB drive on the ML350.  This is the second time in 25 years of managing servers RAID-5 didn't help (the first time was probably a failure of the RAID controller).  Both instances are not a problem of RAID, just a problem resulting from using technology.  