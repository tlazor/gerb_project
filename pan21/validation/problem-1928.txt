works okay, except that I'm not sure how to 'idle' a child so that php-fpm will kill it. The problem I'm seeing is that as I add more applications there exist ~6 idle php-fpm children per application, simply eating up RAM for no reason. Now, request_terminate_timeout will kill a child because of an over-long request, but not a child because of an overlong lack of requests. The manual defines how to say there are too many or too little idle children, but is quiet on designation. If I've measured that a php-fpm child which hasn't served a request for 30 minutes should be considered 'idle' and killed, how do I inform php-fpm of this? 
The next stable version of php-fpm should support an ondemand scheduler that will scale children up and down. To date, there is no recourse. 
I just wanted to report that as of today ondemand works perfectly. With ondemand you can set pm.start_servers = 0 to stop idling processes:
I've got several low traffic vhost'ed applications that I'd like to run on the same box, using something like this configuration: