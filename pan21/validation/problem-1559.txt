For an alternative approach, perhaps even to help foster understanding, you will probably find some utility in doing some analysis via R. Simple time series based tutorials abound for [wannabe] quants that should provide a bootstrap. Part 1, Part 2, Part 3, Part 4. These provide sources for data generation/intake as well as manipulation, allowing you to bypass much of the work to be able to see the actual HMM methods at work. There are direct analogues to the Python implementations.
pomegranate library has support for HMM and the documentation is really helpful. After trying with many hmm libraries in python, I find this to be quite good.
And if you become really eager about the PyMC, there is an awesome open-source book about Bayesian Modeling - https://github.com/CamDavidsonPilon/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers. It does not explicitly describe Hidden Markov Processes, but it gives a very good tutorial on the library itself with plenty of examples.
There is a good gist https://gist.github.com/fonnesbeck/342989 created by Fonnesbeck which walks you through the HMM creation.