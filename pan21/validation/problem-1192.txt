If you're looking for a way to not have a certificate signed by a trusted 3rd party AND be able to send information over an SSL/HTTPS connection to redirect a client to a non-encrypted HTTP connection, no you cannot.  That would defeat the purpose of SSL in the first place if you can establish a 'trusted' connection whereby data is blindly accepted from the server without a trusted signature on the certificate.
If you mean you don't have a certificate that's signed by a trusted 3rd party and triggers a security warning on a web browser.. then you can provided everyone manually 'accepts' the connection in their browser after the warning is displayed.
No, this is not possible, because a HTTPS session must be opened in order for the client to receive a HTTP redirect.
It is possible to serve SSL traffic with varying levels of "valid" certificates. I would consider a "self-signed" certificate to be "valid", but that depends on what you mean by "valid". A certificate which as been signed by a recognized Certificate Authority is recommended, but is optional for actual SSL traffic.
In order for something to redirect HTTPS to HTTP, something must be listening on the HTTPS port. Your client must first open a SSL/TLS connection to the port serving HTTPS, HTTP traffic is tunneled through the SSL/TLS connection and the server will respond with a redirect to the HTTP port. This requires that the client and server establish a HTTPS connection (that is, HTTP over SSL/TLS).
Assuming I don't have a valid certificate to handle a https session I want to redirect all https requests to http. Is it possible without opening https session?