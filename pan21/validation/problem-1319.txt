The bounce_handler.py script accepts the VERP address as its command line option, parses it and makes the necessary database updates to record the bounce.
If you're making your own custom newsletter software to handle this you should ask yourself why you're re-inventing the wheel instead of using existing applications that can handle the task simply and easily for you already.
Most modern mailing list software already knows how to handle VERP messages if the MTA is properly configured to pass them back to the mailing list software. In the case of GNU Mailman you should checkout the FAQ page aptly named "How do I use VERP with a - delimiter (Postfix recipient_delimiter)?".
If example.com is the locally delivered domain for the server (mail is delivered to actual system accounts) then you can add a .forward file to the home directory of the bounce user, which delivers to a program that parses the bounce information and records it in a database or file.  See man local for more info on the .forward format and how to deliver to a program.
The exact answer to your question (handling the bounce-xxx@example.com address) depends on how your server is configured to receive mail.  If example.com is the virtual domain the best you can do is collect the messages in the bounce@example.com mailbox (assuming recipient_delimiter = -).
What we do, since we send messages for a large number of domains, is use bounces.example.com as our VERP domain.  This domain needs to be added to relay_domains.  Create /etc/postfix/transport_maps with this content: