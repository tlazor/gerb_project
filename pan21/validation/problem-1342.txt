While in your case, this is somewhat complicated by having varnish running it will still give you a good indication of how demand affects memory.
I am having really difficult time with my web server. I have been tweaking things as per the suggestions on web, yet not able to find anything concrete. 
You've not provided any information about how you've configured KeepAlives which have a big impact on memory usage and performance. Nor have you provided any infomration about the pattern of activity on the server - how does the number of httpd processes vary throughout the cycle? Without knowing this its impossible to comment on how appropriate the conf details you have provided are. However your MaxRequestsPerChild is very low unless you suspect that there is a big problem with your code.
If you want to reduce memory usage, you really shouldn't be using prefork but using worker threads instead. As its name implies, prefork actually starts up a new process each time, with its own memory space and what nots.
While I suspect that there's a lot of tuning and refactoring to be done here (particularly judging by all the information which you've not supplied in your question) eventually you just need to add more hardware. In the meantime, you might want to buy in some help.
How a Unix system uses memory is a very long and complicated story. Adding up the virtual size of each process does not give an accurate figure of what's going on. A far better approach is to track the number of httpd process and the available memory (less buffers/cache) as reported by 'free'. Then plot these on a graph and to get a more realistic measure. 
That said, if you have 18GB of RAM, what's the problem with using 7GB for apache? You've got plenty left over for other things.
Also without knowing more about the relative volumes of content types it's tricky to say what would help - e.g. if you serve up a lot of static CSS, JS and HTML, then you'll get a lot of benefits from using compression.
Till the time my server is up and running my site performance is excellent. It loads in around 8 sec for the first time and second view is 2.5 seconds. The site is image heavy as its an ecommerce site. 
My Apache process was eating 450MB under Virtual Memory column when I did htop. I searched on internet and people said that installing eaccelerator the system will become faster and efficient and would eat lesser memory and CPU. Unfortunately, this turned out to be worse than before. Now my apache processes showing  1488MB memory under Virtual Memory column. 