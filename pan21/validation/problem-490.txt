Lastly you need to enlarge the filesystem again to occupy the entire partition using resize2fs -p /dev/sda2
You'd be better off making a tarball of the filesystem, because when you make a full disk image, you also copy deleted data. When you delete a file, the inode is unlinked but the actual data is still on disk. A full disk image using dd would copy that old data (except if you first overwrite it with /dev/zero, which takes some time) but a backup using tar would only copy the current data.
Before you can safely shrink you partition, you need to make sure there is no data present at the end you are removing. You can do this with resize2fs -M -p /dev/sda2 (you have to substitute /dev/sda2 with the correct path to the USB-card reader and the linux partition you want to resize). This will resize the filesystem to the smallest size possible. You could actually specify the exact size you want, but it involves some math and converting sizes to blocksizes and sectors and what not. Safer and easier to not do this.
After that you can shrink the partion. I think I used fdisk for this. Get the exact start position of the partion, delete it an recreate it using the same start position, but with a smaller size.
Indeed not all SD cards are the same exact size. You'd have to shrink the partition to make it fit on the smaller SD. I had a similar problem myself. What I did was have a separate SD with (in my case) Raspbian. And I plugged in my SD I wanted to resize, using a USB card reader.
Or... you could do like many distributions do: reduce your filesystem size to something safe like 1.9 GiB before you make your image, and resize to fill the disk after you restore the backup.