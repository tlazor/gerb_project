You might want to look at OpenSteer, and the Steering Behaviors documentation that goes with it.  The source code is not beginner-level, but the concepts behind it should give you some good ideas.
May I suggest that you buy the book Artificial Intelligence for Games by Ian Millington - it's excellent! :)
This may seem stupid, as you'd have to add flee states to each individual machine, but since you're constrained to only one or two outputs, your states end up very small so this should not be a problem. 
It's tempting to have a "flee" state which handles setting a position to flee to, setting a high target speed, clearing all targets, etc. It's much better to instead have many state machines, each handling one or few ship controls - eg a state machine that handles selecting a target position, one that handles guns, etc.
Adding this book to the list of starting points for learning AI programming.  With its focus on observation and behavior implementation rather than algorithms of limited application, I believe it is well suited to the task.  
Also, since each control is now under individual control, you can end up selecting a flee target position while still having the attack state control your guns. You can strafe an enemy while still conserving engine power because of a coolant leak. You can steer to avoid a collision while still dumping countermeasures.  All these would be impossible with a single all-encompassing state machine.