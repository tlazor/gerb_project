I've found despite running timeouts and handling stale outbound connections I've found that simulating dns failures reproduces the failures I'm seeing within my web app.
It makes multiple requests to various but fixed external domains. I can't put the domains in a host for for obvious reasons, cloudfront / load balancing and other changes of ip.
Therefore I think I should be implementing a local dns cache. I've chosen powerdns recoursor to handle my outbound requests. It will deal with 500-1000 requests per second all to the same 8 or so domains. 
Your plan sounds fine, but check the TTL records on the RRs for the small collection of domains you need to resolve. If they have really short TTLs (like less than approximately 20 seconds), your local cache won't help that much because it will still query them once per TTL interval. Very short TTLs are sometimes seen with load balancers and such. The longer the TTLs, the more effective your cache will be.
What I'm hoping to achieve is reduced dns failures, either communication errors, slow dns responses or failed dns responses. Believe it or not we were using googles dns before and occasionally it would fail to respond and it would make our app crash and at peak times really make our threads hang and consume resources.
There's no good reason to list both your new local cache and an external server in /etc/resolv.conf. If you have nameserver 127.0.0.1 in that file, that's all you really need.
I'm thinking of running the local alongside google in my resolv.cond with rotate turned on along with other configuration.
You did not mention your web server, but some web servers (Nginx) have internal DNS caching.  They've been known to cache bad results, so you may want to disable any internal caches during debugging. 
You could also consider software that's dedicated to being a recursive resolver, such as Unbound. Unbound has a nice feature whereby it can requery domains from its cache that are just about to expire, to prevent them from expiring. That can help resiliency a bit.
What I'm not sure about is how powerdns actually resolves queries, I've set no forward zones but it will still return a dig within 30ms and all subsequent results from cache. 
On newer systems (RHEL 6), if you have IPv6 enabled, it will try to lookup both A and AAA records in parallel.  I've seen some DNS servers treat this as abuse (too many requests/second) and start dropping DNS queries.  