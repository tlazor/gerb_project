Also - lots of kudos to the Stack Exchange team for accepting this 20KB+ post. I decided to take the "don't post links" thing to the extreme. That said, everyone is welcome to run off with this script (and very hopefully improve it!)
Most important point: Browser caches are volatile and old content is aggressively discarded. Your scale of "how soon to act" is measured in minutes to hours.
Another problem is that Chrome will choke when you open your downloads folder because it's dumbly trying to represent the full text of the file you downloaded as a base64 string. Hitting the 'x' on those downloads will prevent that.
If there is nothing in your cache, congratulations :( you're in "hard" mode. If you really want your cache data back you'll need to get TestDisk (http://www.cgsecurity.org/wiki/TestDisk) working and see if it can recover anything in your cache folder. If the data restores cleanly you might be able to get at it from Chrome, but you may be stuck trying to parse the on-disk format directly. (You may have luck feeding recovered data to the NirSoft cache viewer.)
Assuming CTRL+F in about:cache finds the URL you're looking for, the script below will attempt to save everything matching that URL. It's completely automated. I wrote this when what.cd went down.
You can use the online free tool I created: Google Chrome Cache Viewer. It's actually fairly easy to view the cache with this, even if the contents are zipped.
One major issue is decompression - I'm using a random gunzip JS library I found online, it may not be perfect (although it should be fine). If it looks like this library crashed or has an issue, comment out the JXG.decompress() line to save the data in gzipped form and see if you can re-inflate it locally.
If you need something that doesn't necessarily exist in your browser cache, or say you want to see an older version, you should check out The Wayback Machine aka the Internet Archive.  It has been a great source of help to me on numerous occasions.  I use it for doing research into MMO history to understand old rule sets, patch notes, etc.  Just punch in the url for the site and it'll show you the snapshots it has on record.
If the script crashed (hopefully not) or printed any "error saving" messages in the devtools when you hit the "files" button, there was a parsing error when it was deobfuscating the files, and you'll need to headscratch your way through the raw versions. This is just a parsing problem and can be fixed by modifying the script but I've no idea all of the responses Chrome can spit back in this scenario.
BEWARE that the raw data includes HTTP header information, and be careful if you're sending it to someone else to help recover it.
Public domain, no ownership. Enhance at will; was built in a couple (3-4) hours (the code is terrible). Only tested on my Linux laptop; there may be bugs :D
Note that this saves forward-slashes as ^ (caret) chars and replaces all other (Windows) prohibited chars with "#" in filenames, in order to capture the full URL in the save filename.