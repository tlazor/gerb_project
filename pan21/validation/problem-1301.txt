EDIT: There are a bunch of these rail sets on the keyboard, each one controls 8-12 keys or so, depending on the layout
It would be ridiculous to have 100 different pins on a micro controller for 100 different keys so what they do is have two rails (i.e. high side and ground) with a bunch of keys on those rails, where the key press connects the high and ground and thus a signal can pass. This is done by sending square waves out the high and then essentially 'timing' how long it will take for that signal to get back (see debouncing)
Depending on the implementation of NKR (N-Key rollover), the keyboard may require diodes to stop 'ghosting' which is what you are experiencing. 
Diodes (as they are essentially one way electrical valves) stop this signal from jumping from the high rail to the ground rail back to the high rail and back to the ground rail, if you follow me. As this would change the time/position, of the signal and be interpreted as a different keystoke
With cheaper keyboard designs and why "gaming" keyboards are more expensive. Most keyboards use a matrix (see http://en.wikipedia.org/wiki/Rollover_%28key%29) and a really fast typist can cause the keyboard to incorrectly register key presses (I am seldom this fast). A better external keyboard is likely the best solution.
This basically stops the scan signal from bouncing through one key connection to the other side and then back again thus resulting in different interpreted data to the microcontroller which thinks that you have pressed a different key.