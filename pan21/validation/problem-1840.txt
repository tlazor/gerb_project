If you followed Choppers method, you'd need a ton of free space available in order to remove all the snapshots successfully - something you probably don't have if you are looking at a chain of 15 open snapshots!  
That's why you start deleting snapshots closest to the base disk because the base disk file will never grow larger (unless it was thin-provisioned, but that's a different can of worms).
To make matters worse, during the removal of the snap3 snapshot, the snap3 file remains on the datastore until the snapshot has successfully been removed.  Thus, the best case scenario is that you'll use at least 12GB of MORE DISK space in order to remove the snap3 snapshot... but you'll probably need more than that.
All the changed disk block that have been stored in snap1 are contained in the base disk.  It's just that these blocks have changed since the snapshot was started so they're stored in the snap1 file.  
WHY would you have a 'tree of about 15 snapshot'? I know you can but that doesn't mean it's a smart way of doing things, ever heard of a clone or a backup - they're for keeping longer-term point in time copies of VMs, snapshots are just abused by the untrained as they think they're 'free' - they're not.
This article on VMWare's site indicates that the best approach is to delete the earliest snapshot first (if below ESX4.0U2) or not worry about it:
Either way it's your mess and there's no real way out of it other than to just live with the time it's going to take to delete them all manually from newest to oldest.
We have a tree of about 15 snapshots of a virtual machine that runs Win2k8, as you may guessed our datastore is soon to run out of space. My objective is to delete all the snapshots, as it seems it was a huge mistake to use snapshots for backup purposes.
Conversely, the snap3 file is 15 GB and all it's changes cannot possibly be contained in the smaller 3GB snap2 file.  If you delete the snap3 snapshot first, it's changes will be merged into the snap2 file.  The smallest that snap2 could possibly be is 12 GB after this process and that's assuming that 3 GB of the changes in the snap3 file are the exact same disk blocks in the snap2 file.  This is best case scenario.  
For those who've wound up in this scenario and have found this forum, I hope you read all the answers because Choppers is wrong - IT_Architect is correct.
If you're only deleting some of the snapshots or need to do it by hand, I would recommend deleting the earliest snapshot first to minimize disk usage, else you could get the situation arising in the example above.
Think about it... only disk changes since the base disk are stored in the first snapshot file.  The second snapshot file contains changes since the first snapshot file.  The 3rd snapshot only contains changes since the 2nd snap file.  The base disk file will NEVER get larger than it's allocated size.  Each snapshot file can grow to be the same size as the base disk.  See example below
Now my question is how do we delete the snapshots so that the least amount of space on datastore is used for the merging process, since there is not much space left. Do we start deleting the tree from bottom up, ie. start with deleting the most recent snapshot and move up, or do we start deleting the oldest snapshots and move downward? 
You need to remove snapshots starting with the snapshot CLOSEST to the base disk.. that is, the snapshot nearest the top of the list in the snapshot manager window.  This will minimize the need for free space during the snapshot removal process.