The k-means algorithm to cluster the locations is a bad idea. Your locations can be spread across the world and the number of clusters cant be predicted by you, not only that if you put the cluster as 1 then the locations will be grouped to 1 single cluster. I am using Hierarchical clustering for the same.
You can use HDBSCAN for this.  The python package has support for haversine distance which will properly compute distances between lat/lon points.
As the docs mention, you will need to convert your points to radians first for this to work.  The following psuedocode should do the trick:
I am probably very late with my answer, but if you are still dealing with geo clustering, you may find this study interesting. It deals with comparison of two fairly different approaches to classifying geographic data: K-means clustering and latent class growth modeling.
The authors concluded that the end results were overall similar, and that there were some aspects where LCGM overperfpormed K-means.
https://commons.apache.org/proper/commons-math/javadocs/api-3.1/org/apache/commons/math3/stat/clustering/DBSCANClusterer.html