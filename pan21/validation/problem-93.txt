I also don't understand why you'd separate the XHR object creation from the code that attaches all the handlers. I suggest you just moving everything related to xhr creation into one function. This includes creating the xhr, the promise, adding the headers.
To start, I suggest you just fire the request immediately and return a promise. I don't see a reason why you'd separate the creation of the XHR from the moment it fires given the code you provided.
Simplifying your code, it should be like this. post creates your xhr, sends it and returns a promise. All _sendRequest has to be concerned about is preparing and providing post the data needed to send out the request, and attaching callbacks depending on what happens to that promise.
I don't understand why you are handing over callbacks when you can simply attach then and catch to the returned promise. The purpose of promises is to have an object to which you can listen for events related to an async operation.
Just twisting the logic to avoid the extra nesting. If the onload isn't ready, we just return early. No harm done. Otherwise, it is ready and we either do a resolve or reject. if statements can do no-bracket bodies, but I suggest to use them only when they're short, readable and only one line.