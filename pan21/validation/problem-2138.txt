Obviously I don't want to just run the code 'as is' since the user may have dangerous code which may delete sensitive files from the webserver.
If you believe you'll be able to keep your system up to date and there's nothing very importand there (like database with customer's card number), take a look to this project: http://sandbox.sourceforge.net/
I'd also like to add a feature whereby the user can run the code in the language of their choice: ruby, python, etc...
How can I architect a secure system where each user would have their own custom environment to run the code they have written, in the language of their preference?
I'm building an application that will enable users to write code from the browser.  Once the code is written I save the contents to my webserver in a user-specific folder.  
Assuming you are using Apache, you should use the suexec module for this and adjust the directory permissions of the different users.
Virtual machines are the key. Each one is best separated from the other. There is only one better solution: Don't give them any access.
Perhaps, the only way to do it securely is to run the code inside virtual machine or emulator. Running in under the same user and/or under chroot is still too dangerous: there may be local security issues which would enable users to gain root and go out of chroot.