As has been noted in the comments, without more details, it's hard to give detailed help.  That said, I an provide some general advice.
I am in the process of trying to build a small datamart for my small business. I am planning on initially copying tables from the source DB to another DB for staging, where I can then do any data manipulation required to create fact and dimension tables. 
Second - if the source database resides in a different SQL Server instance, your data is being accessed remotely, a view may be a good option. If you access the data through, for instance, a linked server, hitting the tables directly may result in having to pull all the table data over to the active server, and then performing the joins. By hitting a view, you ensure that the joins will be processed on the source server. Now, there's nothing saying that the vendor-supplied views are the best possible views for your needs, but a view may be the best solution ultimately.
I don't know a lot about SQL, but from what I've read, views aren't really tables, but more like preset queries. If I did decide to use them, and was running a stored procedure from the staging database which called for data referenced by that view, does this present a performance issue (as I know that views can require a lot of joins). I suspect that the answer here is to use the original tables instead of any views, but I would like confirmation. Btw, I'm using SQL Server. Thanks.
The documentation for my primary business application recommends using the preset views when building any custom reports, as they will not change from release to release. Although I'm not really building custom reports, I'm wondering if the same logic holds here? Should/Could I use them for building a datamart? 
If you're considering using vendor-supplied views to extract data for your datamart, you're first question shouldn't be about performance. Your first question should be, "Do the views have all the data I need?" You've probably already considered this, but the data you need is your driving force.