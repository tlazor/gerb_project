People showing this sort of promise should definitely be present when an admin is diagnosing (non-mission-critical) problems, and encouraged to discuss how to automate the process. You'll soon know whether or not the person is ready for a junior admin role!
Have someone who knows what they're doing document a manual task in sufficient detail to allow a level helpdesk person to perform it.  Have them perform these tasks; possibly under supervision, but certainly with some sort of audit log of what they did.  Review their work afterwards for accuracy.  They should be encouraged to communicate any issues with the procedure, any unexpected output or unclear instructions, etc.  They should also be encouraged to stop if they encounter something unexpected, and pass it on to an admin. You may choose to have them present when the admin diagnoses the problem.
With our system, senior staff members have more interaction with the junior staff, and can quickly assess who's actually learning as they go, and who's sending back the stupid questions.  A couple of us got recognition as junior staff members for taking it upon ourselves to update all of the handouts (FAQs, user guides, keyboard maps, etc) convert them from some format our old Wang used to Word Perfect (and later HTML) and build a document management system to track version, when each one was last updated and reviewed (but deemed still correct), etc.
Anyway, the point is -- there are some people that it might not be worth going out the way to help.  If you keep an eye on them, you should find out who are willing to ask questions and do enough troubleshooting to find the root cause rather than try to get rid of people as quickly as possible.
I ended up getting promoted into our newly formed web development group, and our UNIX guy suggested I get a copy of the "Unix System Administration Handbook", and I ended up effectively apprenticing as I later moved to take over responsibility for our gopher/web server (which at the time wasn't considered to be a critical server).
Due to the size of our shop, we only officially had four classes of employees -- 'helpdesk' (fielded calls and walkins), 'technician' (handled hardware repairs), and 'senior staff' (effectively, the sysadmins), and 'management' (useful to send the belligerent folks to, as somehow my manager could turn any conversation into a discussion of her grandchildren within 30 minutes, which would confuse the users into submission).
First, depending on your hiring practices, not everyone who gets hired for the helpdesk would make a good sysadmin.  Honestly, some of the ones we had didn't make good helpdesk employees, either.  (why they thought it was a good idea to water a plant that was sitting on top of a monitor, I have no idea; and why our manager thought it was a good idea to hire people who'd get a chance to practice their new English skills might've been useful to help with our foreign students if they actually had some experience with computers to go with it)
John Dalton has absolutely invaluable advice.  I would just add that one of the best places to start involving the level 1 person is in basic infrastructure changes such as servers and/or switches.  Have them step through basic physical setup, configuration, and observation of the process to add the servers to the domain (or switches into the network).
So, I think the problem these days is that a lot of shops don't want to tie up too many people on a single call -- so level 1 helpdesk transfers the calls up the chain, but don't hear how to deal with these new issues.  Look at how to your deal with users, and see if there's a handoff that prevents the junior folks from being involved so they can learn on the job.
Once they have basic level knowledge of the network (where things are, how things are connected, TCP/IP etc...) then you can build on that.  I think it's important not only to instill in them the proper way of doing things (not trying things on production) but also build their knowledge level from the ground up and not necessarily assume they already know "things".
Helpdesk staff who are capable of following basic instructions accurately are possible candidates for junior admin roles.  Staff who contribute improvements to the instructions (e.g. clarifying ambiguities, noticing and clarifying issues with unexpected output) are even better.  Staff who can do all that and suggest process improvements (while also having the discipline to communicate their suggestions without trying them out on production systems first) are definite candidates for admin roles, and may actually have a career ahead of them.